{"version":3,"sources":["turbopack:///[project]/frontend/node_modules/next/src/server/route-modules/app-page/module.compiled.js","turbopack:///[project]/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts","turbopack:///[project]/frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts","turbopack:///[project]/frontend/node_modules/next/src/server/route-modules/app-page/vendored/contexts/app-router-context.ts","turbopack:///[project]/frontend/node_modules/next/src/server/route-modules/app-page/vendored/contexts/hooks-client-context.ts","turbopack:///[project]/frontend/node_modules/next/src/server/route-modules/app-page/vendored/contexts/server-inserted-html.ts","turbopack:///[project]/frontend/app/contexts/WalletContext.tsx"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].AppRouterContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].HooksClientContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].ServerInsertedHtml\n","'use client';\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface WalletState {\n  userBalance: number;\n  userName: string;\n  walletAddress: string;\n  walletType: 'metamask' | 'subwallet' | null;\n  isConnected: boolean;\n}\n\ninterface WalletContextType extends WalletState {\n  connectWallet: (walletType: 'metamask' | 'subwallet', address: string, balance: string) => void;\n  disconnectWallet: () => void;\n  updateBalance: (balance: number) => void;\n}\n\nconst WalletContext = createContext<WalletContextType | undefined>(undefined);\n\nexport const useWallet = () => {\n  const context = useContext(WalletContext);\n  if (context === undefined) {\n    throw new Error('useWallet must be used within a WalletProvider');\n  }\n  return context;\n};\n\ninterface WalletProviderProps {\n  children: ReactNode;\n}\n\nexport const WalletProvider: React.FC<WalletProviderProps> = ({ children }) => {\n  const [walletState, setWalletState] = useState<WalletState>({\n    userBalance: 0,\n    userName: 'Guest User',\n    walletAddress: '',\n    walletType: null,\n    isConnected: false,\n  });\n\n  // Load wallet state from localStorage on mount\n  useEffect(() => {\n    const savedWalletState = localStorage.getItem('walletState');\n    if (savedWalletState) {\n      try {\n        const parsedState = JSON.parse(savedWalletState);\n        setWalletState(parsedState);\n      } catch (error) {\n        console.error('Error loading wallet state from localStorage:', error);\n        localStorage.removeItem('walletState');\n      }\n    }\n  }, []);\n\n  // Save wallet state to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('walletState', JSON.stringify(walletState));\n  }, [walletState]);\n\n  const connectWallet = (walletType: 'metamask' | 'subwallet', address: string, balance: string) => {\n    setWalletState({\n      userBalance: parseFloat(balance),\n      userName: walletType === 'metamask' ? 'ETH Wallet' : 'DOT Wallet',\n      walletAddress: address,\n      walletType,\n      isConnected: true,\n    });\n  };\n\n  const disconnectWallet = () => {\n    setWalletState({\n      userBalance: 0,\n      userName: 'Guest User',\n      walletAddress: '',\n      walletType: null,\n      isConnected: false,\n    });\n    // Clear localStorage\n    localStorage.removeItem('walletState');\n  };\n\n  const updateBalance = (balance: number) => {\n    setWalletState(prev => ({\n      ...prev,\n      userBalance: balance,\n    }));\n  };\n\n  const contextValue: WalletContextType = {\n    ...walletState,\n    connectWallet,\n    disconnectWallet,\n    updateBalance,\n  };\n\n  return (\n    <WalletContext.Provider value={contextValue}>\n      {children}\n    </WalletContext.Provider>\n  );\n};\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK","vendored","ReactJsxRuntime","React","AppRouterContext","HooksClientContext","ServerInsertedHtml"],"mappings":"2kCA0BQG,EAAOC,OAAO,CAAGC,EAAQ,CAAA,CAAA,IAAA,iCC1BjCF,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,YAAY,CAAEC,eAAe,+BCFxCP,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,YAAY,CAAEE,KAAK,8BCF9BR,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,QAAW,CAACG,gBAAgB,8BCFvCT,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,QAAW,CAACI,kBAAkB,+BCFzCV,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,QAAW,CAACK,kBAAkB,0FCAzC,EAAA,EAAA,CAAA,CAAA,OAgBA,IAAM,EAAgB,CAAA,EAAA,EAAA,aAAa,AAAb,OAA6C,GAEtD,EAAY,KACvB,IAAM,EAAU,CAAA,EAAA,EAAA,UAAA,AAAU,EAAC,GAC3B,QAAgB,IAAZ,EACF,KADyB,CACnB,AAAI,MAAM,kDAElB,OAAO,CACT,EAMa,EAAgD,CAAC,UAAE,CAAQ,CAAE,IACxE,GAAM,CAAC,EAAa,EAAe,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAc,CAC1D,YAAa,EACb,SAAU,aACV,cAAe,GACf,WAAY,KACZ,aAAa,CACf,GAGA,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KACR,IAAM,EAAmB,aAAa,OAAO,CAAC,eAC9C,GAAI,EACF,GAAI,CACF,IAAM,EAAc,KAAK,CAFP,IAEY,CAAC,GAC/B,EAAe,EACjB,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,gDAAiD,GAC/D,aAAa,UAAU,CAAC,cAC1B,CAEJ,EAAG,EAAE,EAGL,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KACR,aAAa,OAAO,CAAC,cAAe,KAAK,SAAS,CAAC,GACrD,EAAG,CAAC,EAAY,EA+BhB,IAAM,EAAkC,CACtC,GAAG,CAAW,CACd,cA/BoB,CAAC,EAAsC,EAAiB,KAC5E,EAAe,CACb,YAAa,WAAW,GACxB,SAAyB,aAAf,EAA4B,aAAe,aACrD,cAAe,aACf,EACA,aAAa,CACf,EACF,EAwBE,iBAtBuB,KACvB,EAAe,CACb,YAAa,EACb,SAAU,aACV,cAAe,GACf,WAAY,KACZ,aAAa,CACf,GAEA,aAAa,UAAU,CAAC,cAC1B,EAaE,cAXoB,AAAC,IACrB,EAAe,GAAS,EACtB,EADqB,CAClB,CAAI,CACP,YAAa,EACf,CAAC,CACH,CAOA,EAEA,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAc,QAAQ,CAAA,CAAC,MAAO,WAC5B,GAGP","ignoreList":[0,1,2,3,4,5]}