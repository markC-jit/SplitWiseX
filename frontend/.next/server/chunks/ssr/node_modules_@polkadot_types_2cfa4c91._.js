module.exports = [
"[project]/node_modules/@polkadot/types/packageInfo.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "packageInfo",
    ()=>packageInfo
]);
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_context__.P("node_modules/@polkadot/types/packageInfo.js")}`;
    }
};
const packageInfo = {
    name: '@polkadot/types',
    path: __TURBOPACK__import$2e$meta__ && __TURBOPACK__import$2e$meta__.url ? new URL(__TURBOPACK__import$2e$meta__.url).pathname.substring(0, new URL(__TURBOPACK__import$2e$meta__.url).pathname.lastIndexOf('/') + 1) : 'auto',
    type: 'esm',
    version: '16.4.8'
};
}),
"[project]/node_modules/@polkadot/types/metadata/util/flattenUniq.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/** @internal */ __turbopack_context__.s([
    "flattenUniq",
    ()=>flattenUniq
]);
function flattenUniq(list, result = []) {
    for(let i = 0, count = list.length; i < count; i++){
        const entry = list[i];
        if (Array.isArray(entry)) {
            flattenUniq(entry, result);
        } else {
            result.push(entry);
        }
    }
    return [
        ...new Set(result)
    ];
}
}),
"[project]/node_modules/@polkadot/types/metadata/util/extractTypes.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "extractTypes",
    ()=>extractTypes
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/util/getTypeDef.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/types/types.js [app-ssr] (ecmascript)");
;
function extractSubSingle(_, { sub }) {
    const { lookupName, type } = sub;
    return extractTypes([
        lookupName || type
    ]);
}
function extractSubArray(_, { sub }) {
    return extractTypes(sub.map(({ lookupName, type })=>lookupName || type));
}
function unhandled(type, { info }) {
    throw new Error(`Unhandled: Unable to create and validate type from ${type} (info=${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"][info]})`);
}
const mapping = {
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeMap]: extractSubArray,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeSet]: extractSubSingle,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Compact]: extractSubSingle,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].DoNotConstruct]: unhandled,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Enum]: extractSubArray,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].HashMap]: extractSubArray,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Int]: unhandled,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Linkage]: extractSubSingle,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Null]: unhandled,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Option]: extractSubSingle,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain]: (_, typeDef)=>typeDef.lookupName || typeDef.type,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Range]: extractSubSingle,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].RangeInclusive]: extractSubSingle,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Result]: extractSubArray,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Set]: extractSubArray,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Si]: unhandled,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Struct]: extractSubArray,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Tuple]: extractSubArray,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].UInt]: unhandled,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Vec]: extractSubSingle,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].VecFixed]: extractSubSingle,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperKeepOpaque]: extractSubSingle,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque]: extractSubSingle
};
function extractTypes(types) {
    const count = types.length;
    const result = new Array(count);
    for(let i = 0; i < count; i++){
        const type = types[i];
        const typeDef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTypeDef"])(type);
        result[i] = mapping[typeDef.info](type, typeDef);
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/types/metadata/util/validateTypes.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "validateTypes",
    ()=>validateTypes
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$extractTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/util/extractTypes.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$flattenUniq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/util/flattenUniq.js [app-ssr] (ecmascript)");
;
;
;
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["logger"])('metadata');
function validateTypes(registry, throwError, types) {
    const missing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$flattenUniq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["flattenUniq"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$extractTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["extractTypes"])(types)).filter((type)=>!registry.hasType(type) && !registry.isLookupType(type)).sort();
    if (missing.length !== 0) {
        const message = `Unknown types found, no types for ${missing.join(', ')}`;
        if (throwError) {
            throw new Error(message);
        } else {
            l.warn(message);
        }
    }
    return types;
}
}),
"[project]/node_modules/@polkadot/types/metadata/util/getUniqTypes.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "getUniqTypes",
    ()=>getUniqTypes
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$flattenUniq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/util/flattenUniq.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$validateTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/util/validateTypes.js [app-ssr] (ecmascript)");
;
;
/** @internal */ function extractTypes(lookup, types) {
    return types.map(({ type })=>lookup.getTypeDef(type).type);
}
/** @internal */ function extractFieldTypes(lookup, type) {
    return lookup.getSiType(type).def.asVariant.variants.map(({ fields })=>extractTypes(lookup, fields));
}
/** @internal */ function getPalletNames({ lookup, pallets }) {
    return pallets.reduce((all, { calls, constants, events, storage })=>{
        all.push([
            extractTypes(lookup, constants)
        ]);
        if (calls.isSome) {
            all.push(extractFieldTypes(lookup, calls.unwrap().type));
        }
        if (events.isSome) {
            all.push(extractFieldTypes(lookup, events.unwrap().type));
        }
        if (storage.isSome) {
            all.push(storage.unwrap().items.map(({ type })=>{
                if (type.isPlain) {
                    return [
                        lookup.getTypeDef(type.asPlain).type
                    ];
                }
                const { hashers, key, value } = type.asMap;
                return hashers.length === 1 ? [
                    lookup.getTypeDef(value).type,
                    lookup.getTypeDef(key).type
                ] : [
                    lookup.getTypeDef(value).type,
                    ...lookup.getSiType(key).def.asTuple.map((t)=>lookup.getTypeDef(t).type)
                ];
            }));
        }
        return all;
    }, []);
}
function getUniqTypes(registry, meta, throwError) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$validateTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["validateTypes"])(registry, throwError, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$flattenUniq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["flattenUniq"])(getPalletNames(meta)));
}
}),
"[project]/node_modules/@polkadot/types/metadata/util/toCallsOnly.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "toCallsOnly",
    ()=>toCallsOnly
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
;
function trimDocs(docs) {
    const strings = docs.map((d)=>d.toString().trim());
    const firstEmpty = strings.findIndex((d)=>!d.length);
    return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);
}
function toCallsOnly(registry, { extrinsic, lookup, pallets }) {
    return registry.createTypeUnsafe('MetadataLatest', [
        {
            extrinsic,
            lookup: {
                types: lookup.types.map(({ id, type })=>registry.createTypeUnsafe('PortableType', [
                        {
                            id,
                            type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, type, {
                                docs: trimDocs(type.docs)
                            })
                        }
                    ]))
            },
            pallets: pallets.map(({ calls, index, name })=>({
                    calls: registry.createTypeUnsafe('Option<PalletCallMetadataLatest>', [
                        calls.unwrapOr(null)
                    ]),
                    index,
                    name
                }))
        }
    ]).toJSON();
}
}),
"[project]/node_modules/@polkadot/types/metadata/v9/toV10.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "toV10",
    ()=>toV10
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
;
/** @internal */ function createStorageHasher(registry, hasher) {
    // Blake2_128_Concat has been added at index 2, so we increment all the
    // indexes greater than 2
    if (hasher.toNumber() >= 2) {
        return registry.createTypeUnsafe('StorageHasherV10', [
            hasher.toNumber() + 1
        ]);
    }
    return registry.createTypeUnsafe('StorageHasherV10', [
        hasher
    ]);
}
/** @internal */ function createStorageType(registry, entryType) {
    if (entryType.isMap) {
        return [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, entryType.asMap, {
                hasher: createStorageHasher(registry, entryType.asMap.hasher)
            }),
            1
        ];
    }
    if (entryType.isDoubleMap) {
        return [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, entryType.asDoubleMap, {
                hasher: createStorageHasher(registry, entryType.asDoubleMap.hasher),
                key2Hasher: createStorageHasher(registry, entryType.asDoubleMap.key2Hasher)
            }),
            2
        ];
    }
    return [
        entryType.asPlain,
        0
    ];
}
/** @internal */ function convertModule(registry, mod) {
    const storage = mod.storage.unwrapOr(null);
    return registry.createTypeUnsafe('ModuleMetadataV10', [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, mod, {
            storage: storage ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, storage, {
                items: storage.items.map((item)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, item, {
                        type: registry.createTypeUnsafe('StorageEntryTypeV10', createStorageType(registry, item.type))
                    }))
            }) : null
        })
    ]);
}
function toV10(registry, { modules }) {
    return registry.createTypeUnsafe('MetadataV10', [
        {
            modules: modules.map((mod)=>convertModule(registry, mod))
        }
    ]);
}
}),
"[project]/node_modules/@polkadot/types/metadata/v10/toV11.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/** @internal */ __turbopack_context__.s([
    "toV11",
    ()=>toV11
]);
function toV11(registry, { modules }) {
    return registry.createTypeUnsafe('MetadataV11', [
        {
            // This is new in V11, pass V0 here - something non-existing, telling the API to use
            // the fallback for this information (on-chain detection)
            extrinsic: {
                signedExtensions: [],
                version: 0
            },
            modules
        }
    ]);
}
}),
"[project]/node_modules/@polkadot/types/metadata/v11/toV12.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "toV12",
    ()=>toV12
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
;
function toV12(registry, { extrinsic, modules }) {
    return registry.createTypeUnsafe('MetadataV12', [
        {
            extrinsic,
            modules: modules.map((mod)=>registry.createTypeUnsafe('ModuleMetadataV12', [
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, mod, {
                        index: 255
                    })
                ]))
        }
    ]);
}
}),
"[project]/node_modules/@polkadot/types/metadata/v12/toV13.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @internal
 **/ __turbopack_context__.s([
    "toV13",
    ()=>toV13
]);
function toV13(registry, v12) {
    return registry.createTypeUnsafe('MetadataV13', [
        v12
    ]);
}
}),
"[project]/node_modules/@polkadot/types/interfaces/alias.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "getAliasTypes",
    ()=>getAliasTypes
]);
const typesAlias = {
    assets: {
        Approval: 'AssetApproval',
        ApprovalKey: 'AssetApprovalKey',
        Balance: 'TAssetBalance',
        DestroyWitness: 'AssetDestroyWitness'
    },
    babe: {
        EquivocationProof: 'BabeEquivocationProof'
    },
    balances: {
        Status: 'BalanceStatus'
    },
    beefy: {
        AuthorityId: 'BeefyId'
    },
    contracts: {
        StorageKey: 'ContractStorageKey'
    },
    electionProviderMultiPhase: {
        Phase: 'ElectionPhase'
    },
    ethereum: {
        Block: 'EthBlock',
        Header: 'EthHeader',
        Receipt: 'EthReceipt',
        Transaction: 'EthTransaction',
        TransactionStatus: 'EthTransactionStatus'
    },
    evm: {
        Account: 'EvmAccount',
        Log: 'EvmLog',
        Vicinity: 'EvmVicinity'
    },
    grandpa: {
        Equivocation: 'GrandpaEquivocation',
        EquivocationProof: 'GrandpaEquivocationProof'
    },
    identity: {
        Judgement: 'IdentityJudgement'
    },
    inclusion: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    paraDisputes: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    paraInclusion: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    paraScheduler: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    paraShared: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    parachains: {
        Id: 'ParaId'
    },
    parasDisputes: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    parasInclusion: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    parasScheduler: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    parasShared: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    proposeParachain: {
        Proposal: 'ParachainProposal'
    },
    proxy: {
        Announcement: 'ProxyAnnouncement'
    },
    scheduler: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    shared: {
        ValidatorIndex: 'ParaValidatorIndex'
    },
    society: {
        Judgement: 'SocietyJudgement',
        Vote: 'SocietyVote'
    },
    staking: {
        Compact: 'CompactAssignments'
    },
    treasury: {
        Proposal: 'TreasuryProposal'
    },
    xcm: {
        AssetId: 'XcmAssetId'
    },
    xcmPallet: {
        AssetId: 'XcmAssetId'
    }
};
function getAliasTypes({ knownTypes }, section) {
    return {
        ...typesAlias[section] ?? {},
        ...knownTypes.typesAlias?.[section] ?? {}
    };
}
}),
"[project]/node_modules/@polkadot/types/interfaces/runtime/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const CORE_V1_TO_V4 = {
    execute_block: {
        description: 'Execute the given block.',
        params: [
            {
                name: 'block',
                type: 'Block'
            }
        ],
        type: 'Null'
    }
};
const CORE_V1_TO_V2 = {
    version: {
        description: 'Returns the version of the runtime.',
        params: [],
        type: 'RuntimeVersionPre3'
    }
};
const CORE_V2_TO_V4 = {
    initialize_block: {
        description: 'Initialize a block with the given header.',
        params: [
            {
                name: 'header',
                type: 'Header'
            }
        ],
        type: 'Null'
    }
};
const CORE_V4_VERSION = {
    version: {
        description: 'Returns the version of the runtime.',
        params: [],
        type: 'RuntimeVersion'
    }
};
const CORE_V4_TO_V5 = {
    ...CORE_V1_TO_V4,
    initialize_block: {
        description: 'Initialize a block with the given header.',
        params: [
            {
                name: 'header',
                type: 'Header'
            }
        ],
        type: 'ExtrinsicInclusionMode'
    }
};
const runtime = {
    Core: [
        {
            methods: {
                ...CORE_V4_VERSION,
                ...CORE_V4_TO_V5
            },
            version: 5
        },
        {
            methods: {
                ...CORE_V4_VERSION,
                ...CORE_V1_TO_V4,
                ...CORE_V2_TO_V4
            },
            version: 4
        },
        {
            methods: {
                version: {
                    description: 'Returns the version of the runtime.',
                    params: [],
                    type: 'RuntimeVersionPre4'
                },
                ...CORE_V1_TO_V4,
                ...CORE_V2_TO_V4
            },
            version: 3
        },
        {
            methods: {
                ...CORE_V1_TO_V2,
                ...CORE_V1_TO_V4,
                ...CORE_V2_TO_V4
            },
            version: 2
        },
        {
            methods: {
                initialise_block: {
                    description: 'Initialize a block with the given header.',
                    params: [
                        {
                            name: 'header',
                            type: 'Header'
                        }
                    ],
                    type: 'Null'
                },
                ...CORE_V1_TO_V2,
                ...CORE_V1_TO_V4
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/runtime/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__,
    "knownOrigins",
    ()=>knownOrigins
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$runtime$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/runtime/runtime.js [app-ssr] (ecmascript)");
;
const numberTypes = {
    Fixed64: 'Int<64, Fixed64>',
    FixedI64: 'Int<64, FixedI64>',
    FixedU64: 'UInt<64, FixedU64>',
    Fixed128: 'Int<128, Fixed128>',
    FixedI128: 'Int<128, FixedI128>',
    FixedU128: 'UInt<128, FixedU128>',
    I32F32: 'Int<64, I32F32>',
    U32F32: 'UInt<64, U32F32>',
    PerU16: 'UInt<16, PerU16>',
    Perbill: 'UInt<32, Perbill>',
    Percent: 'UInt<8, Percent>',
    Permill: 'UInt<32, Permill>',
    Perquintill: 'UInt<64, Perquintill>'
};
const knownOrigins = {
    //
    // (1) Defaults from Substrate
    //
    Council: 'CollectiveOrigin',
    System: 'SystemOrigin',
    TechnicalCommittee: 'CollectiveOrigin',
    //
    // (2) Defaults from Polkadot
    //
    Xcm: 'XcmOrigin',
    XcmPallet: 'XcmOrigin',
    //
    // (3) Defaults from Acala
    //
    Authority: 'AuthorityOrigin',
    GeneralCouncil: 'CollectiveOrigin'
};
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$runtime$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        ...numberTypes,
        AccountId: 'AccountId32',
        AccountId20: 'GenericEthereumAccountId',
        AccountId32: 'GenericAccountId32',
        AccountId33: 'GenericAccountId33',
        AccountIdOf: 'AccountId',
        AccountIndex: 'GenericAccountIndex',
        Address: 'MultiAddress',
        AssetId: 'u32',
        Balance: 'UInt<128, Balance>',
        BalanceOf: 'Balance',
        Block: 'GenericBlock',
        BlockNumber: 'u32',
        BlockNumberFor: 'BlockNumber',
        BlockNumberOf: 'BlockNumber',
        Call: 'GenericCall',
        CallHash: 'Hash',
        CallHashOf: 'CallHash',
        ChangesTrieConfiguration: {
            digestInterval: 'u32',
            digestLevels: 'u32'
        },
        ChangesTrieSignal: {
            _enum: {
                NewConfiguration: 'Option<ChangesTrieConfiguration>'
            }
        },
        ConsensusEngineId: 'GenericConsensusEngineId',
        CodecHash: 'Hash',
        CrateVersion: {
            major: 'u16',
            minor: 'u8',
            patch: 'u8'
        },
        Digest: {
            logs: 'Vec<DigestItem>'
        },
        DigestItem: {
            _enum: {
                Other: 'Bytes',
                AuthoritiesChange: 'Vec<AuthorityId>',
                ChangesTrieRoot: 'Hash',
                SealV0: 'SealV0',
                Consensus: 'Consensus',
                Seal: 'Seal',
                PreRuntime: 'PreRuntime',
                ChangesTrieSignal: 'ChangesTrieSignal',
                RuntimeEnvironmentUpdated: 'Null' // 8
            }
        },
        ExtrinsicsWeight: {
            normal: 'Weight',
            operational: 'Weight'
        },
        H32: '[u8; 4; H32]',
        H64: '[u8; 8; H64]',
        H128: '[u8; 16; H128]',
        H160: '[u8; 20; H160]',
        H256: '[u8; 32; H256]',
        H512: '[u8; 64; H512]',
        H1024: '[u8; 128; H1024]',
        H2048: '[u8; 256; H2048]',
        Hash: 'H256',
        Header: {
            parentHash: 'Hash',
            number: 'Compact<BlockNumber>',
            stateRoot: 'Hash',
            extrinsicsRoot: 'Hash',
            digest: 'Digest'
        },
        HeaderPartial: {
            parentHash: 'Hash',
            // since we only parse JSON with this, having non-compact works
            number: 'BlockNumber'
        },
        IndicesLookupSource: 'GenericLookupSource',
        Index: 'u32',
        Justification: '(ConsensusEngineId, EncodedJustification)',
        EncodedJustification: 'Bytes',
        Justifications: 'Vec<Justification>',
        KeyValue: '(StorageKey, StorageData)',
        KeyTypeId: 'u32',
        LockIdentifier: '[u8; 8]',
        LookupSource: 'MultiAddress',
        LookupTarget: 'AccountId',
        ModuleId: 'LockIdentifier',
        MultiAddress: 'GenericMultiAddress',
        MultiSigner: {
            _enum: {
                Ed25519: '[u8; 32]',
                Sr25519: '[u8; 32]',
                Ecdsa: '[u8; 33]'
            }
        },
        Moment: 'UInt<64, Moment>',
        OpaqueCall: 'Bytes',
        Origin: 'DoNotConstruct<Origin>',
        OriginCaller: {
            _enum: {
                // this should be dynamically built from the actual modules, based on index
                System: 'SystemOrigin'
            }
        },
        PalletId: 'LockIdentifier',
        PalletsOrigin: 'OriginCaller',
        PalletVersion: {
            major: 'u16',
            minor: 'u8',
            patch: 'u8'
        },
        Pays: {
            _enum: [
                'Yes',
                'No'
            ]
        },
        Phantom: 'Null',
        PhantomData: 'Null',
        Releases: {
            _enum: [
                'V1',
                'V2',
                'V3',
                'V4',
                'V5',
                'V6',
                'V7',
                'V8',
                'V9',
                'V10'
            ]
        },
        RuntimeCall: 'Call',
        RuntimeEvent: 'Event',
        RuntimeDbWeight: {
            read: 'Weight',
            write: 'Weight'
        },
        SignedBlock: 'SignedBlockWithJustifications',
        SignedBlockWithJustification: {
            block: 'Block',
            justification: 'Option<EncodedJustification>'
        },
        SignedBlockWithJustifications: {
            block: 'Block',
            justifications: 'Option<Justifications>'
        },
        Slot: 'u64',
        SlotDuration: 'u64',
        StorageData: 'Bytes',
        StorageInfo: {
            palletName: 'Bytes',
            storage_name: 'Bytes',
            prefix: 'Bytes',
            maxValues: 'Option<u32>',
            maxSize: 'Option<u32>'
        },
        StorageProof: {
            trieNodes: 'Vec<Bytes>'
        },
        TransactionPriority: 'u64',
        TransactionLongevity: 'u64',
        TransactionTag: 'Bytes',
        TransactionInfo: {
            _alias: {
                dataSize: 'size'
            },
            chunkRoot: 'H256',
            contentHash: 'H256',
            dataSize: 'u32',
            blockChunks: 'u32'
        },
        TransactionStorageProof: {
            chunk: 'Vec<u8>',
            proof: 'Vec<Vec<u8>>'
        },
        ValidatorId: 'AccountId',
        ValidatorIdOf: 'ValidatorId',
        WeightV0: 'u32',
        WeightV1: 'u64',
        WeightV2: {
            refTime: 'Compact<u64>',
            proofSize: 'Compact<u64>'
        },
        Weight: 'WeightV2',
        WeightMultiplier: 'Fixed64',
        // digest
        PreRuntime: '(ConsensusEngineId, Bytes)',
        SealV0: '(u64, Signature)',
        Seal: '(ConsensusEngineId, Bytes)',
        Consensus: '(ConsensusEngineId, Bytes)',
        // Type when core initialize_block went from v4 to v5
        ExtrinsicInclusionMode: {
            _enum: [
                'AllExtrinsics',
                'OnlyInherents'
            ]
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/metadata/v13/toV14.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "toV14",
    ()=>toV14
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$alias$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/alias.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$runtime$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/runtime/definitions.js [app-ssr] (ecmascript)");
;
;
;
const BOXES = [
    [
        '<',
        '>'
    ],
    [
        '<',
        ','
    ],
    [
        ',',
        '>'
    ],
    [
        '(',
        ')'
    ],
    [
        '(',
        ','
    ],
    [
        ',',
        ','
    ],
    [
        ',',
        ')'
    ]
];
/**
 * Creates a compatible type mapping
 * @internal
 **/ function compatType(specs, _type) {
    const type = _type.toString();
    const index = specs.findIndex(({ def })=>def.HistoricMetaCompat === type);
    if (index !== -1) {
        return index;
    }
    return specs.push({
        def: {
            HistoricMetaCompat: type
        }
    }) - 1;
}
function compatTypes(specs, ...types) {
    for(let i = 0, count = types.length; i < count; i++){
        compatType(specs, types[i]);
    }
}
function makeTupleType(specs, entries) {
    return specs.push({
        def: {
            Tuple: entries
        }
    }) - 1;
}
function makeVariantType(modName, variantType, specs, variants) {
    return specs.push({
        def: {
            Variant: {
                variants
            }
        },
        path: [
            `pallet_${modName.toString()}`,
            'pallet',
            variantType
        ]
    }) - 1;
}
/**
 * @internal
 * generate & register the OriginCaller type
 **/ function registerOriginCaller(registry, modules, metaVersion) {
    registry.register({
        OriginCaller: {
            _enum: modules.map((mod, index)=>[
                    mod.name.toString(),
                    metaVersion >= 12 ? mod.index.toNumber() : index
                ]).sort((a, b)=>a[1] - b[1]).reduce((result, [name, index])=>{
                for(let i = Object.keys(result).length; i < index; i++){
                    result[`Empty${i}`] = 'Null';
                }
                result[name] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$runtime$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["knownOrigins"][name] || 'Null';
                return result;
            }, {})
        }
    });
}
/**
 * Find and apply the correct type override
 * @internal
 **/ function setTypeOverride(sectionTypes, types) {
    types.forEach((type)=>{
        const override = Object.keys(sectionTypes).find((aliased)=>type.eq(aliased));
        if (override) {
            type.setOverride(sectionTypes[override]);
        } else {
            // FIXME: NOT happy with this approach, but gets over the initial hump cased by (Vec<Announcement>,BalanceOf)
            const orig = type.toString();
            const alias = Object.entries(sectionTypes).reduce((result, [src, dst])=>BOXES.reduce((result, [a, z])=>result.replace(`${a}${src}${z}`, `${a}${dst}${z}`), result), orig);
            if (orig !== alias) {
                type.setOverride(alias);
            }
        }
    });
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 **/ function convertCalls(specs, registry, modName, calls, sectionTypes) {
    const variants = calls.map(({ args, docs, name }, index)=>{
        setTypeOverride(sectionTypes, args.map(({ type })=>type));
        return registry.createTypeUnsafe('SiVariant', [
            {
                docs,
                fields: args.map(({ name, type })=>registry.createTypeUnsafe('SiField', [
                        {
                            name,
                            type: compatType(specs, type)
                        }
                    ])),
                index,
                name
            }
        ]);
    });
    return registry.createTypeUnsafe('PalletCallMetadataV14', [
        {
            type: makeVariantType(modName, 'Call', specs, variants)
        }
    ]);
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 */ function convertConstants(specs, registry, constants, sectionTypes) {
    return constants.map(({ docs, name, type, value })=>{
        setTypeOverride(sectionTypes, [
            type
        ]);
        return registry.createTypeUnsafe('PalletConstantMetadataV14', [
            {
                docs,
                name,
                type: compatType(specs, type),
                value
            }
        ]);
    });
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 */ function convertErrors(specs, registry, modName, errors, _sectionTypes) {
    const variants = errors.map(({ docs, name }, index)=>registry.createTypeUnsafe('SiVariant', [
            {
                docs,
                fields: [],
                index,
                name
            }
        ]));
    return registry.createTypeUnsafe('PalletErrorMetadataV14', [
        {
            type: makeVariantType(modName, 'Error', specs, variants)
        }
    ]);
}
/**
 * Apply module-specific type overrides (always be done as part of toV14)
 * @internal
 **/ function convertEvents(specs, registry, modName, events, sectionTypes) {
    const variants = events.map(({ args, docs, name }, index)=>{
        setTypeOverride(sectionTypes, args);
        return registry.createTypeUnsafe('SiVariant', [
            {
                docs,
                fields: args.map((t)=>registry.createTypeUnsafe('SiField', [
                        {
                            type: compatType(specs, t)
                        }
                    ])),
                index,
                name
            }
        ]);
    });
    return registry.createTypeUnsafe('PalletEventMetadataV14', [
        {
            type: makeVariantType(modName, 'Event', specs, variants)
        }
    ]);
}
function createMapEntry(specs, registry, sectionTypes, { hashers, isLinked, isOptional, keys, value }) {
    setTypeOverride(sectionTypes, [
        value,
        ...Array.isArray(keys) ? keys : [
            keys
        ]
    ]);
    return registry.createTypeUnsafe('StorageEntryTypeV14', [
        {
            Map: {
                hashers,
                key: hashers.length === 1 ? compatType(specs, keys[0]) : makeTupleType(specs, keys.map((t)=>compatType(specs, t))),
                value: isLinked ? compatType(specs, `(${isOptional ? `Option<${value.toString()}>` : value.toString()}, Linkage<${keys[0].toString()}>)`) : compatType(specs, value)
            }
        }
    ]);
}
/**
 * Apply module-specific storage type overrides (always part of toV14)
 * @internal
 **/ function convertStorage(specs, registry, { items, prefix }, sectionTypes) {
    return registry.createTypeUnsafe('PalletStorageMetadataV14', [
        {
            items: items.map(({ docs, fallback, modifier, name, type })=>{
                let entryType;
                if (type.isPlain) {
                    const plain = type.asPlain;
                    setTypeOverride(sectionTypes, [
                        plain
                    ]);
                    entryType = registry.createTypeUnsafe('StorageEntryTypeV14', [
                        {
                            Plain: compatType(specs, plain)
                        }
                    ]);
                } else if (type.isMap) {
                    const map = type.asMap;
                    entryType = createMapEntry(specs, registry, sectionTypes, {
                        hashers: [
                            map.hasher
                        ],
                        isLinked: map.linked.isTrue,
                        isOptional: modifier.isOptional,
                        keys: [
                            map.key
                        ],
                        value: map.value
                    });
                } else if (type.isDoubleMap) {
                    const dm = type.asDoubleMap;
                    entryType = createMapEntry(specs, registry, sectionTypes, {
                        hashers: [
                            dm.hasher,
                            dm.key2Hasher
                        ],
                        isLinked: false,
                        isOptional: modifier.isOptional,
                        keys: [
                            dm.key1,
                            dm.key2
                        ],
                        value: dm.value
                    });
                } else {
                    const nm = type.asNMap;
                    entryType = createMapEntry(specs, registry, sectionTypes, {
                        hashers: nm.hashers,
                        isLinked: false,
                        isOptional: modifier.isOptional,
                        keys: nm.keyVec,
                        value: nm.value
                    });
                }
                return registry.createTypeUnsafe('StorageEntryMetadataV14', [
                    {
                        docs,
                        fallback,
                        modifier,
                        name,
                        type: entryType
                    }
                ]);
            }),
            prefix
        }
    ]);
}
/** @internal */ function convertExtrinsic(registry, { signedExtensions, version }) {
    return registry.createTypeUnsafe('ExtrinsicMetadataV14', [
        {
            signedExtensions: signedExtensions.map((identifier)=>({
                    identifier,
                    type: 0 // we don't map the fields at all
                })),
            type: 0,
            version
        }
    ]);
}
/** @internal */ function createPallet(specs, registry, mod, { calls, constants, errors, events, storage }) {
    const sectionTypes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$alias$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getAliasTypes"])(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(mod.name));
    return registry.createTypeUnsafe('PalletMetadataV14', [
        {
            calls: calls && convertCalls(specs, registry, mod.name, calls, sectionTypes),
            constants: convertConstants(specs, registry, constants, sectionTypes),
            errors: errors && convertErrors(specs, registry, mod.name, errors, sectionTypes),
            events: events && convertEvents(specs, registry, mod.name, events, sectionTypes),
            index: mod.index,
            name: mod.name,
            storage: storage && convertStorage(specs, registry, storage, sectionTypes)
        }
    ]);
}
function toV14(registry, v13, metaVersion) {
    const specs = [];
    // position 0 always has Null, additionally add internal defaults
    compatTypes(specs, 'Null', 'u8', 'u16', 'u32', 'u64');
    registerOriginCaller(registry, v13.modules, metaVersion);
    const extrinsic = convertExtrinsic(registry, v13.extrinsic);
    const pallets = v13.modules.map((mod)=>createPallet(specs, registry, mod, {
            calls: mod.calls.unwrapOr(null),
            constants: mod.constants,
            errors: mod.errors.length ? mod.errors : null,
            events: mod.events.unwrapOr(null),
            storage: mod.storage.unwrapOr(null)
        }));
    return registry.createTypeUnsafe('MetadataV14', [
        {
            extrinsic,
            lookup: {
                types: specs.map((type, id)=>registry.createTypeUnsafe('PortableType', [
                        {
                            id,
                            type
                        }
                    ]))
            },
            pallets
        }
    ]);
}
}),
"[project]/node_modules/@polkadot/types/metadata/v14/toV15.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "toV15",
    ()=>toV15
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
;
function toV15(registry, v14, _) {
    // V15 is mostly equivalent to v14 however it does add
    //
    // 1. The top-level apis entry - it is assumed that in usage we would
    //    just check for all-empty (like this would construct)
    // 2. A docs param on the pallet itself
    // 3. Additional extrinsic parameters
    //
    // A straight conversion with createTypeUndafe magic fills in details
    // We need the UncheckedExtrinsic to extract the types, at least for v14
    // which does have these details embedded (previous-gen won't populate)
    const unchecked = v14.lookup.paramTypes.SpRuntimeUncheckedExtrinsic;
    return registry.createTypeUnsafe('MetadataV15', [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, v14, {
            extrinsic: registry.createTypeUnsafe('ExtrinsicMetadataV15', [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, v14.extrinsic, {
                    addressType: unchecked?.[0].type.unwrapOr(0),
                    callType: unchecked?.[1].type.unwrapOr(0),
                    extraType: unchecked?.[3].type.unwrapOr(0),
                    signatureType: unchecked?.[2].type.unwrapOr(0)
                })
            ]),
            outerEnums: registry.createTypeUnsafe('OuterEnums15', [
                {
                    // FIXME We need to extract & add the errorType in here
                    // (these doesn't seem to be an esay way to detect & extract it)
                    callType: unchecked?.[1].type.unwrapOr(0),
                    eventType: v14.lookup.paramTypes.FrameSystemEventRecord?.[0].type.unwrapOr(0)
                }
            ])
        })
    ]);
}
}),
"[project]/node_modules/@polkadot/types/metadata/v15/toV16.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "toV16",
    ()=>toV16
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
;
function palletsFromV15(registry, palletV15) {
    const deprecationInfo = registry.createTypeUnsafe('ItemDeprecationInfoV16', [
        'NotDeprecated'
    ]);
    const associatedTypes = registry.createTypeUnsafe('Vec<PalletAssociatedTypeMetadataV16>', [
        []
    ]);
    const viewFunctions = registry.createTypeUnsafe('Vec<PalletViewFunctionMetadataV16>', [
        []
    ]);
    return registry.createTypeUnsafe('PalletMetadataV16', [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, palletV15, {
            associatedTypes,
            calls: palletV15.calls.isSome ? convertCalls(registry, palletV15.calls.unwrap()) : null,
            constants: convertConstants(registry, palletV15.constants),
            deprecationInfo,
            errors: palletV15.errors.isSome ? converErrors(registry, palletV15.errors.unwrap()) : null,
            events: palletV15.events.isSome ? convertEvents(registry, palletV15.events.unwrap()) : null,
            storage: palletV15.storage.isSome ? convertStorage(registry, palletV15.storage.unwrap()) : null,
            viewFunctions
        })
    ]);
}
function convertStorage(registry, storage) {
    const deprecationInfo = registry.createTypeUnsafe('ItemDeprecationInfoV16', [
        'NotDeprecated'
    ]);
    const items = storage.items.map((item)=>registry.createTypeUnsafe('StorageEntryMetadataV16', [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, item, {
                deprecationInfo
            })
        ]));
    return registry.createTypeUnsafe('PalletStorageMetadataV16', [
        {
            items: registry.createTypeUnsafe('Vec<StorageEntryMetadataV16>', [
                items
            ]),
            prefix: storage.prefix
        }
    ]);
}
function convertCalls(registry, calls) {
    const deprecationInfo = registry.createTypeUnsafe('EnumDeprecationInfoV16', []);
    return registry.createTypeUnsafe('PalletCallMetadataV16', [
        {
            deprecationInfo,
            type: calls.type
        }
    ]);
}
function convertEvents(registry, events) {
    const deprecationInfo = registry.createTypeUnsafe('EnumDeprecationInfoV16', []);
    return registry.createTypeUnsafe('PalletEventMetadataV16', [
        {
            deprecationInfo,
            type: events.type
        }
    ]);
}
function convertConstants(registry, constants) {
    const deprecationInfo = registry.createTypeUnsafe('ItemDeprecationInfoV16', [
        'NotDeprecated'
    ]);
    return registry.createTypeUnsafe('Vec<PalletConstantMetadataV16>', [
        constants.map((constant)=>registry.createTypeUnsafe('PalletConstantMetadataV16', [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, constant, {
                    deprecationInfo
                })
            ]))
    ]);
}
function converErrors(registry, errors) {
    const deprecationInfo = registry.createTypeUnsafe('EnumDeprecationInfoV16', []);
    return registry.createTypeUnsafe('PalletErrorMetadataV16', [
        {
            deprecationInfo,
            type: errors.type
        }
    ]);
}
function extrinsicFromV15(registry, extrinsicV15) {
    const transactionExtensions = extrinsicV15.signedExtensions.map(({ additionalSigned, identifier, type })=>registry.createTypeUnsafe('TransactionExtensionMetadataV16', [
            {
                identifier,
                implict: additionalSigned,
                type
            }
        ]));
    const indexes = transactionExtensions.map((_, i)=>registry.createTypeUnsafe('Compact<u32>', [
            i
        ]));
    const transactionExtensionsByVersion = registry.createTypeUnsafe('BTreeMap<u8, Vec<Compact<u32>>>', [
        new Map([
            [
                registry.createTypeUnsafe('u8', [
                    extrinsicV15.version
                ]),
                registry.createTypeUnsafe('Vec<Compact<u32>>', [
                    indexes
                ])
            ]
        ])
    ]);
    return registry.createTypeUnsafe('ExtrinsicMetadataV16', [
        {
            addressType: extrinsicV15.addressType,
            callType: extrinsicV15.callType,
            signatureType: extrinsicV15.signatureType,
            transactionExtensions,
            transactionExtensionsByVersion,
            versions: [
                extrinsicV15.version
            ]
        }
    ]);
}
function apisFromV15(registry, runtimeApiV15) {
    const deprecationInfo = registry.createTypeUnsafe('ItemDeprecationInfoV16', [
        'NotDeprecated'
    ]);
    const methods = runtimeApiV15.methods.map((method)=>registry.createTypeUnsafe('RuntimeApiMethodMetadataV16', [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, method, {
                deprecationInfo
            })
        ]));
    return registry.createTypeUnsafe('RuntimeApiMetadataV16', [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, runtimeApiV15, {
            deprecationInfo,
            methods,
            version: registry.createTypeUnsafe('Compact<u32>', [
                0
            ])
        })
    ]);
}
function toV16(registry, v15, _) {
    const pallets = v15.pallets.map((pallet)=>{
        return palletsFromV15(registry, pallet);
    });
    const extrinsic = extrinsicFromV15(registry, v15.extrinsic);
    const apis = v15.apis.map((runtimeApi)=>apisFromV15(registry, runtimeApi));
    return registry.createTypeUnsafe('MetadataV16', [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, v15, {
            apis,
            extrinsic,
            pallets
        })
    ]);
}
}),
"[project]/node_modules/@polkadot/types/metadata/v16/toLatest.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Convert the Metadata (which is an alias) to latest
 * @internal
 **/ __turbopack_context__.s([
    "toLatest",
    ()=>toLatest
]);
function toLatest(_registry, v16, _metaVersion) {
    return v16;
}
}),
"[project]/node_modules/@polkadot/types/metadata/MagicNumber.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "MAGIC_NUMBER",
    ()=>MAGIC_NUMBER,
    "MagicNumber",
    ()=>MagicNumber
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u32__as__U32$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U32.js [app-ssr] (ecmascript) <export u32 as U32>");
;
const MAGIC_NUMBER = 0x6174656d; // `meta`, reversed for Little Endian encoding
class MagicNumber extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u32__as__U32$3e$__["U32"] {
    constructor(registry, value){
        super(registry, value);
        if (!this.isEmpty && !this.eq(MAGIC_NUMBER)) {
            throw new Error(`MagicNumber mismatch: expected ${registry.createTypeUnsafe('u32', [
                MAGIC_NUMBER
            ]).toHex()}, found ${this.toHex()}`);
        }
    }
}
}),
"[project]/node_modules/@polkadot/types/metadata/versions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "KNOWN_VERSIONS",
    ()=>KNOWN_VERSIONS,
    "LATEST_VERSION",
    ()=>LATEST_VERSION,
    "TO_CALLS_VERSION",
    ()=>TO_CALLS_VERSION
]);
const KNOWN_VERSIONS = [
    16,
    15,
    14,
    13,
    12,
    11,
    10,
    9
];
const LATEST_VERSION = KNOWN_VERSIONS[0];
const TO_CALLS_VERSION = 14; // LATEST_VERSION;
}),
"[project]/node_modules/@polkadot/types/metadata/MetadataVersioned.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "MetadataVersioned",
    ()=>MetadataVersioned
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$getUniqTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/util/getUniqTypes.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$toCallsOnly$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/util/toCallsOnly.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v9$2f$toV10$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/v9/toV10.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v10$2f$toV11$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/v10/toV11.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v11$2f$toV12$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/v11/toV12.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v12$2f$toV13$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/v12/toV13.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v13$2f$toV14$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/v13/toV14.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v14$2f$toV15$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/v14/toV15.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v15$2f$toV16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/v15/toV16.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v16$2f$toLatest$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/v16/toLatest.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$MagicNumber$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/MagicNumber.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$versions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/versions.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
class MetadataVersioned extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    #converted = new Map();
    constructor(registry, value){
        // const timeStart = performance.now()
        super(registry, {
            magicNumber: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$MagicNumber$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MagicNumber"],
            metadata: 'MetadataAll'
        }, value);
    // console.log('MetadataVersioned', `${(performance.now() - timeStart).toFixed(2)}ms`)
    }
    #assertVersion = (version)=>{
        if (this.version > version) {
            throw new Error(`Cannot convert metadata from version ${this.version} to ${version}`);
        }
        return this.version === version;
    };
    #getVersion = (version, fromPrev)=>{
        if (version !== 'latest' && this.#assertVersion(version)) {
            const asCurr = `asV${version}`;
            return this.#metadata()[asCurr];
        }
        if (!this.#converted.has(version)) {
            const asPrev = version === 'latest' ? `asV${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$versions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LATEST_VERSION"]}` : `asV${version - 1}`;
            this.#converted.set(version, fromPrev(this.registry, this[asPrev], this.version));
        }
        return this.#converted.get(version);
    };
    /**
     * @description the metadata wrapped
     */ #metadata = ()=>{
        return this.getT('metadata');
    };
    /**
     * @description Returns the wrapped metadata as a limited calls-only (latest) version
     */ get asCallsOnly() {
        return new MetadataVersioned(this.registry, {
            magicNumber: this.magicNumber,
            metadata: this.registry.createTypeUnsafe('MetadataAll', [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$toCallsOnly$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toCallsOnly"])(this.registry, this.asLatest),
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$versions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TO_CALLS_VERSION"]
            ])
        });
    }
    /**
     * @description Returns the wrapped metadata as a V9 object
     */ get asV9() {
        this.#assertVersion(9);
        return this.#metadata().asV9;
    }
    /**
     * @description Returns the wrapped values as a V10 object
     */ get asV10() {
        return this.#getVersion(10, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v9$2f$toV10$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toV10"]);
    }
    /**
     * @description Returns the wrapped values as a V11 object
     */ get asV11() {
        return this.#getVersion(11, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v10$2f$toV11$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toV11"]);
    }
    /**
     * @description Returns the wrapped values as a V12 object
     */ get asV12() {
        return this.#getVersion(12, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v11$2f$toV12$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toV12"]);
    }
    /**
     * @description Returns the wrapped values as a V13 object
     */ get asV13() {
        return this.#getVersion(13, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v12$2f$toV13$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toV13"]);
    }
    /**
     * @description Returns the wrapped values as a V14 object
     */ get asV14() {
        return this.#getVersion(14, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v13$2f$toV14$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toV14"]);
    }
    /**
     * @description Returns the wrapped values as a V15 object
     */ get asV15() {
        return this.#getVersion(15, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v14$2f$toV15$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toV15"]);
    }
    /**
    * @description Returns the wrapped values as a V16 object
    */ get asV16() {
        return this.#getVersion(16, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v15$2f$toV16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toV16"]);
    }
    /**
     * @description Returns the wrapped values as a latest version object
     */ get asLatest() {
        return this.#getVersion('latest', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$v16$2f$toLatest$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toLatest"]);
    }
    /**
     * @description The magicNumber for the Metadata (known constant)
     */ get magicNumber() {
        return this.getT('magicNumber');
    }
    /**
     * @description the metadata version this structure represents
     */ get version() {
        return this.#metadata().index;
    }
    getUniqTypes(throwError) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$getUniqTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getUniqTypes"])(this.registry, this.asLatest, throwError);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        // HACK(y): ensure that we apply the aliases if we have not done so already, this is
        // needed to ensure we have the correct overrides (which is only applied in toLatest)
        // eslint-disable-next-line no-unused-expressions
        this.asLatest;
        return super.toJSON();
    }
}
}),
"[project]/node_modules/@polkadot/types/metadata/Metadata.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Metadata",
    ()=>Metadata
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$MetadataVersioned$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/MetadataVersioned.js [app-ssr] (ecmascript)");
;
;
const EMPTY_METADATA = new Uint8Array([
    0x6d,
    0x65,
    0x74,
    0x61,
    9
]);
const VERSION_IDX = EMPTY_METADATA.length - 1;
/** @internal */ function decodeU8a(registry, u8a) {
    if (u8a.length === 0) {
        return EMPTY_METADATA;
    } else if (u8a[VERSION_IDX] === 9) {
        // This is an f-ing hack as a follow-up to another ugly hack
        // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2
        // when we fail on V9, try to re-parse it as v10...
        try {
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$MetadataVersioned$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MetadataVersioned"](registry, u8a);
        } catch  {
            u8a[VERSION_IDX] = 10;
        }
    }
    return u8a;
}
class Metadata extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$MetadataVersioned$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MetadataVersioned"] {
    constructor(registry, value){
        // const timeStart = performance.now()
        super(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value) ? decodeU8a(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value)) : value);
    // console.log('Metadata', `${(performance.now() - timeStart).toFixed(2)}ms`)
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "emptyCheck",
    ()=>emptyCheck
]);
const emptyCheck = {
    extrinsic: {},
    payload: {}
};
}),
"[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/polkadot.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "polkadot",
    ()=>polkadot
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js [app-ssr] (ecmascript)");
;
const polkadot = {
    LimitParathreadCommits: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"],
    OnlyStakingAndClaims: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"],
    PrevalidateAttests: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"],
    RestrictFunctionality: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"],
    TransactionCallFilter: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"],
    ValidateDoubleVoteReports: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"]
};
}),
"[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/shell.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "shell",
    ()=>shell
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js [app-ssr] (ecmascript)");
;
const shell = {
    DisallowSigned: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"]
};
}),
"[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/statemint.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "statemint",
    ()=>statemint
]);
const statemint = {
    ChargeAssetTxPayment: {
        extrinsic: {
            tip: 'Compact<Balance>',
            // eslint-disable-next-line sort-keys
            assetId: 'TAssetConversion'
        },
        payload: {}
    }
};
}),
"[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/substrate.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "substrate",
    ()=>substrate
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/emptyCheck.js [app-ssr] (ecmascript)");
;
const CheckMetadataHash = {
    extrinsic: {
        mode: 'u8'
    },
    payload: {
        metadataHash: 'Option<[u8;32]>'
    }
};
const CheckMortality = {
    extrinsic: {
        era: 'ExtrinsicEra'
    },
    payload: {
        blockHash: 'Hash'
    }
};
const ChargeTransactionPayment = {
    extrinsic: {
        tip: 'Compact<Balance>'
    },
    payload: {}
};
const substrate = {
    ChargeTransactionPayment,
    CheckBlockGasLimit: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"],
    CheckEra: CheckMortality,
    CheckGenesis: {
        extrinsic: {},
        payload: {
            genesisHash: 'Hash'
        }
    },
    CheckMetadataHash,
    CheckMortality,
    CheckNonZeroSender: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"],
    CheckNonce: {
        extrinsic: {
            nonce: 'Compact<Index>'
        },
        payload: {}
    },
    CheckSpecVersion: {
        extrinsic: {},
        payload: {
            specVersion: 'u32'
        }
    },
    CheckTxVersion: {
        extrinsic: {},
        payload: {
            transactionVersion: 'u32'
        }
    },
    CheckVersion: {
        extrinsic: {},
        payload: {
            specVersion: 'u32'
        }
    },
    CheckWeight: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"],
    LockStakingStatus: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"],
    SkipCheckIfFeeless: ChargeTransactionPayment,
    ValidateEquivocationReport: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"],
    WeightReclaim: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$emptyCheck$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["emptyCheck"]
};
}),
"[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "allExtensions",
    ()=>allExtensions,
    "expandExtensionTypes",
    ()=>expandExtensionTypes,
    "fallbackExtensions",
    ()=>fallbackExtensions,
    "findUnknownExtensions",
    ()=>findUnknownExtensions
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$polkadot$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/polkadot.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$shell$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/shell.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$statemint$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/statemint.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$substrate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/substrate.js [app-ssr] (ecmascript)");
;
;
;
;
;
const allExtensions = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$substrate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["substrate"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$polkadot$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["polkadot"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$shell$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["shell"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$statemint$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["statemint"]);
const fallbackExtensions = [
    'CheckVersion',
    'CheckGenesis',
    'CheckEra',
    'CheckNonce',
    'CheckWeight',
    'ChargeTransactionPayment',
    'CheckBlockGasLimit'
];
function findUnknownExtensions(extensions, userExtensions = {}) {
    const names = [
        ...Object.keys(allExtensions),
        ...Object.keys(userExtensions)
    ];
    return extensions.filter((k)=>!names.includes(k));
}
function expandExtensionTypes(extensions, type, userExtensions = {}) {
    return extensions// Always allow user extensions first - these should provide overrides
    .map((k)=>userExtensions[k] || allExtensions[k]).filter((info)=>!!info).reduce((result, info)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])(result, info[type]), {});
}
}),
"[project]/node_modules/@polkadot/types/generic/Event.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericEvent",
    ()=>GenericEvent,
    "GenericEventData",
    ()=>GenericEventData
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Null.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Tuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Tuple.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/property.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
;
;
/** @internal */ function decodeEvent(registry, value) {
    if (!value?.length) {
        return {
            DataType: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Null"]
        };
    }
    const index = value.subarray(0, 2);
    return {
        DataType: registry.findMetaEvent(index),
        value: {
            data: value.subarray(2),
            index
        }
    };
}
class GenericEventData extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Tuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Tuple"] {
    #meta;
    #method;
    #names = null;
    #section;
    #typeDef;
    constructor(registry, value, meta, section = '<unknown>', method = '<unknown>'){
        const fields = meta?.fields || [];
        super(registry, fields.map(({ type })=>registry.createLookupType(type)), value);
        this.#meta = meta;
        this.#method = method;
        this.#section = section;
        this.#typeDef = fields.map(({ type })=>registry.lookup.getTypeDef(type));
        const names = fields.map(({ name })=>registry.lookup.sanitizeField(name)[0]).filter((n)=>!!n);
        if (names.length === fields.length) {
            this.#names = names;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectProperties"])(this, names, (_, i)=>this[i]);
        }
    }
    /**
     * @description The wrapped [[EventMetadata]]
     */ get meta() {
        return this.#meta;
    }
    /**
     * @description The method as a string
     */ get method() {
        return this.#method;
    }
    /**
     * @description The field names (as available)
     */ get names() {
        return this.#names;
    }
    /**
     * @description The section as a string
     */ get section() {
        return this.#section;
    }
    /**
     * @description The [[TypeDef]] for this event
     */ get typeDef() {
        return this.#typeDef;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExtended, disableAscii) {
        if (this.#names !== null) {
            const json = {};
            for(let i = 0, count = this.#names.length; i < count; i++){
                json[this.#names[i]] = this[i].toHuman(isExtended, disableAscii);
            }
            return json;
        }
        return super.toHuman(isExtended);
    }
}
class GenericEvent extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    // Currently we _only_ decode from Uint8Array, since we expect it to
    // be used via EventRecord
    constructor(registry, _value){
        const { DataType, value } = decodeEvent(registry, _value);
        super(registry, {
            index: 'EventId',
            // eslint-disable-next-line sort-keys
            data: DataType
        }, value);
    }
    /**
     * @description The wrapped [[EventData]]
     */ get data() {
        return this.getT('data');
    }
    /**
     * @description The [[EventId]], identifying the raw event
     */ get index() {
        return this.getT('index');
    }
    /**
     * @description The [[EventMetadata]] with the documentation
     */ get meta() {
        return this.data.meta;
    }
    /**
     * @description The method string identifying the event
     */ get method() {
        return this.data.method;
    }
    /**
     * @description The section string identifying the event
     */ get section() {
        return this.data.section;
    }
    /**
     * @description The [[TypeDef]] for the event
     */ get typeDef() {
        return this.data.typeDef;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExpanded, disableAscii) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
            method: this.method,
            section: this.section
        }, isExpanded ? {
            docs: this.meta.docs.map((d)=>d.toString())
        } : null, super.toHuman(isExpanded, disableAscii));
    }
}
}),
"[project]/node_modules/@polkadot/types/index.types.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([]);
;
;
;
}),
"[project]/node_modules/@polkadot/types/extrinsic/index.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([]);
;
;
;
;
;
;
;
;
}),
"[project]/node_modules/@polkadot/types/extrinsic/constants.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BARE_EXTRINSIC",
    ()=>BARE_EXTRINSIC,
    "BIT_SIGNED",
    ()=>BIT_SIGNED,
    "BIT_UNSIGNED",
    ()=>BIT_UNSIGNED,
    "DEFAULT_PREAMBLE",
    ()=>DEFAULT_PREAMBLE,
    "EMPTY_U8A",
    ()=>EMPTY_U8A,
    "GENERAL_EXTRINSIC",
    ()=>GENERAL_EXTRINSIC,
    "IMMORTAL_ERA",
    ()=>IMMORTAL_ERA,
    "LATEST_EXTRINSIC_VERSION",
    ()=>LATEST_EXTRINSIC_VERSION,
    "LOWEST_SUPPORTED_EXTRINSIC_FORMAT_VERSION",
    ()=>LOWEST_SUPPORTED_EXTRINSIC_FORMAT_VERSION,
    "TYPE_MASK",
    ()=>TYPE_MASK,
    "UNMASK_VERSION",
    ()=>UNMASK_VERSION,
    "VERSION_MASK",
    ()=>VERSION_MASK
]);
const BIT_SIGNED = 0b10000000;
const BIT_UNSIGNED = 0;
const EMPTY_U8A = new Uint8Array();
const IMMORTAL_ERA = new Uint8Array([
    0
]);
const UNMASK_VERSION = 0b01111111;
const DEFAULT_PREAMBLE = 'bare';
const LATEST_EXTRINSIC_VERSION = 4;
const VERSION_MASK = 0b00111111;
const TYPE_MASK = 0b11000000;
const BARE_EXTRINSIC = 0b00000000;
const GENERAL_EXTRINSIC = 0b01000000;
const LOWEST_SUPPORTED_EXTRINSIC_FORMAT_VERSION = 4;
}),
"[project]/node_modules/@polkadot/types/extrinsic/Extrinsic.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericExtrinsic",
    ()=>GenericExtrinsic
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Base$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/abstract/Base.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/addLength.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/fromU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/property.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/constants.js [app-ssr] (ecmascript)");
;
;
;
const VERSIONS = [
    'ExtrinsicUnknown',
    'ExtrinsicUnknown',
    'ExtrinsicUnknown',
    'ExtrinsicUnknown',
    'ExtrinsicV4',
    'ExtrinsicV5'
];
const PREAMBLE = {
    bare: 'ExtrinsicV5',
    general: 'GeneralExtrinsic'
};
const PreambleMask = {
    bare: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BARE_EXTRINSIC"],
    general: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GENERAL_EXTRINSIC"]
};
const preambleUnMask = {
    0: 'bare',
    // eslint-disable-next-line sort-keys
    64: 'general'
};
;
/** @internal */ function newFromValue(registry, value, version, preamble) {
    if (value instanceof GenericExtrinsic) {
        return value.unwrap();
    }
    const isSigned = (version & __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BIT_SIGNED"]) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BIT_SIGNED"];
    const type = (version & __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["VERSION_MASK"]) === 5 ? PREAMBLE[preamble] : VERSIONS[version & __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["VERSION_MASK"]] || VERSIONS[0];
    // we cast here since the VERSION definition is incredibly broad - we don't have a
    // slice for "only add extrinsic types", and more string definitions become unwieldy
    return registry.createTypeUnsafe(type, [
        value,
        {
            isSigned,
            version
        }
    ]);
}
/** @internal */ function decodeExtrinsic(registry, value, version = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LOWEST_SUPPORTED_EXTRINSIC_FORMAT_VERSION"], preamble = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_PREAMBLE"]) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || Array.isArray(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        return decodeU8a(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value), version, preamble);
    } else if (value instanceof registry.createClassUnsafe('Call')) {
        return newFromValue(registry, {
            method: value
        }, version, preamble);
    }
    return newFromValue(registry, value, version, preamble);
}
/** @internal */ function decodeU8a(registry, value, version, preamble) {
    if (!value.length) {
        return newFromValue(registry, new Uint8Array(), version, preamble);
    }
    const [offset, length] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactFromU8a"])(value);
    const total = offset + length.toNumber();
    if (total > value.length) {
        throw new Error(`Extrinsic: length less than remainder, expected at least ${total}, found ${value.length}`);
    }
    const data = value.subarray(offset, total);
    const unmaskedPreamble = data[0] & __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TYPE_MASK"];
    if (preambleUnMask[`${unmaskedPreamble}`] === 'general') {
        // NOTE: GeneralExtrinsic needs to have the full data to validate the preamble and version
        return newFromValue(registry, value, data[0], preambleUnMask[`${unmaskedPreamble}`] || preamble);
    } else {
        return newFromValue(registry, data.subarray(1), data[0], preambleUnMask[`${unmaskedPreamble}`] || preamble);
    }
}
class ExtrinsicBase extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Base$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractBase"] {
    #preamble;
    constructor(registry, value, initialU8aLength, preamble){
        super(registry, value, initialU8aLength);
        const signKeys = Object.keys(registry.getSignedExtensionTypes());
        if (this.version === 5 && preamble !== 'general') {
            const getter = (key)=>this.inner.signature[key];
            // This is on the abstract class, ensuring that hasOwnProperty operates
            // correctly, i.e. it needs to be on the base class exposing it
            for(let i = 0, count = signKeys.length; i < count; i++){
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectProperty"])(this, signKeys[i], getter);
            }
        }
        const unmaskedPreamble = this.type & __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TYPE_MASK"];
        this.#preamble = preamble || preambleUnMask[`${unmaskedPreamble}`];
    }
    isGeneral() {
        return this.#preamble === 'general';
    }
    /**
     * @description The arguments passed to for the call, exposes args so it is compatible with [[Call]]
     */ get args() {
        return this.method.args;
    }
    /**
     * @description The argument definitions, compatible with [[Call]]
     */ get argsDef() {
        return this.method.argsDef;
    }
    /**
     * @description The actual `[sectionIndex, methodIndex]` as used in the Call
     */ get callIndex() {
        return this.method.callIndex;
    }
    /**
     * @description The actual data for the Call
     */ get data() {
        return this.method.data;
    }
    /**
     * @description The era for this extrinsic
     */ get era() {
        return this.isGeneral() ? this.inner.era : this.inner.signature.era;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description `true` id the extrinsic is signed
     */ get isSigned() {
        return this.isGeneral() ? false : this.inner.signature.isSigned;
    }
    /**
     * @description The length of the actual data, excluding prefix
     */ get length() {
        return this.toU8a(true).length;
    }
    /**
     * @description The [[FunctionMetadataLatest]] that describes the extrinsic
     */ get meta() {
        return this.method.meta;
    }
    /**
     * @description The [[Call]] this extrinsic wraps
     */ get method() {
        return this.inner.method;
    }
    /**
     * @description The nonce for this extrinsic
     */ get nonce() {
        return this.isGeneral() ? this.inner.nonce : this.inner.signature.nonce;
    }
    /**
     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]
     */ get signature() {
        if (this.isGeneral()) {
            throw new Error('Extrinsic: GeneralExtrinsic does not have signature implemented');
        }
        return this.inner.signature.signature;
    }
    /**
     * @description The [[Address]] that signed
     */ get signer() {
        if (this.isGeneral()) {
            throw new Error('Extrinsic: GeneralExtrinsic does not have signer implemented');
        }
        return this.inner.signature.signer;
    }
    /**
     * @description Forwards compat
     */ get tip() {
        return this.isGeneral() ? this.inner.tip : this.inner.signature.tip;
    }
    /**
     * @description Forward compat
     */ get assetId() {
        return this.isGeneral() ? this.inner.assetId : this.inner.signature.assetId;
    }
    /**
     * @description Forward compat
     */ get metadataHash() {
        return this.isGeneral() ? this.inner.metadataHash : this.inner.signature.metadataHash;
    }
    /**
     * @description Forward compat
     */ get mode() {
        return this.isGeneral() ? this.inner.mode : this.inner.signature.mode;
    }
    /**
     * @description Returns the raw transaction version (not flagged with signing information)
    */ get type() {
        return this.inner.version;
    }
    get inner() {
        return this.unwrap();
    }
    /**
     * @description Returns the encoded version flag
    */ get version() {
        if (this.type <= __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LOWEST_SUPPORTED_EXTRINSIC_FORMAT_VERSION"]) {
            return this.type | (this.isSigned ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BIT_SIGNED"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BIT_UNSIGNED"]);
        } else {
            if (this.isSigned) {
                throw new Error('Signed Extrinsics are currently only available for ExtrinsicV4');
            }
            return this.type | (this.isGeneral() ? PreambleMask.general : PreambleMask.bare);
        }
    }
    /**
     * @description Checks if the source matches this in type
     */ is(other) {
        return this.method.is(other);
    }
    unwrap() {
        return super.unwrap();
    }
}
class GenericExtrinsic extends ExtrinsicBase {
    #hashCache;
    static LATEST_EXTRINSIC_VERSION = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LATEST_EXTRINSIC_VERSION"];
    constructor(registry, value, { preamble, version } = {}){
        const versionsLength = registry.metadata.extrinsic.versions.length;
        // TODO: Once ExtrinsicV5 is fully supported update this to use the highest supported verion which is the last item of the array
        const supportedVersion = versionsLength ? registry.metadata.extrinsic.versions[0] : undefined;
        super(registry, decodeExtrinsic(registry, value, version || supportedVersion, preamble), undefined, preamble);
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        if (!this.#hashCache) {
            this.#hashCache = super.hash;
        }
        return this.#hashCache;
    }
    /**
     * @description Injects an already-generated signature into the extrinsic
     */ addSignature(signer, signature, payload) {
        this.inner.addSignature(signer, signature, payload);
        this.#hashCache = undefined;
        return this;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        const encoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])(...this.toU8aInner());
        return {
            inner: this.isSigned ? this.inner.inspect().inner : this.inner.method.inspect().inner,
            outer: [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(encoded.length),
                new Uint8Array([
                    this.version
                ])
            ]
        };
    }
    /**
     * @description Sign the extrinsic with a specific keypair
     */ sign(account, options) {
        this.inner.sign(account, options);
        this.#hashCache = undefined;
        return this;
    }
    /**
     * @describe Adds a fake signature to the extrinsic
     */ signFake(signer, options) {
        this.inner.signFake(signer, options);
        this.#hashCache = undefined;
        return this;
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex(isBare) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a(isBare));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExpanded, disableAscii) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, {
            isSigned: this.isSigned,
            method: this.method.toHuman(isExpanded, disableAscii)
        }, this.isSigned ? {
            assetId: this.assetId ? this.assetId.toHuman(isExpanded, disableAscii) : null,
            era: this.era.toHuman(isExpanded, disableAscii),
            metadataHash: this.metadataHash ? this.metadataHash.toHex() : null,
            mode: this.mode ? this.mode.toHuman() : null,
            nonce: this.nonce.toHuman(isExpanded, disableAscii),
            signature: this.signature.toHex(),
            signer: this.signer.toHuman(isExpanded, disableAscii),
            tip: this.tip.toHuman(isExpanded, disableAscii)
        } : null);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.toHex();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'Extrinsic';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value is not length-prefixed
     */ toU8a(isBare) {
        const encoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])(...this.toU8aInner());
        return isBare ? encoded : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactAddLength"])(encoded);
    }
    toU8aInner() {
        // we do not apply bare to the internal values, rather this only determines out length addition,
        // where we strip all lengths this creates an extrinsic that cannot be decoded
        return [
            new Uint8Array([
                this.version
            ]),
            this.inner.toU8a()
        ];
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/ExtrinsicEra.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericExtrinsicEra",
    ()=>GenericExtrinsicEra,
    "ImmortalEra",
    ()=>ImmortalEra,
    "MortalEra",
    ()=>MortalEra
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Enum.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Raw.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Tuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Tuple.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U64.js [app-ssr] (ecmascript) <export u64 as U64>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatNumber$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/format/formatNumber.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/constants.js [app-ssr] (ecmascript)");
;
;
;
function getTrailingZeros(period) {
    const binary = period.toString(2);
    let index = 0;
    while(binary[binary.length - 1 - index] === '0'){
        index++;
    }
    return index;
}
/** @internal */ function decodeMortalEra(registry, value) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) || Array.isArray(value)) {
        return decodeMortalU8a(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value));
    } else if (!value) {
        return [
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__["U64"](registry),
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__["U64"](registry)
        ];
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(value)) {
        return decodeMortalObject(registry, value);
    }
    throw new Error('Invalid data passed to Mortal era');
}
/** @internal */ function decodeMortalObject(registry, value) {
    const { current, period } = value;
    let calPeriod = Math.pow(2, Math.ceil(Math.log2(period)));
    calPeriod = Math.min(Math.max(calPeriod, 4), 1 << 16);
    const phase = current % calPeriod;
    const quantizeFactor = Math.max(calPeriod >> 12, 1);
    const quantizedPhase = phase / quantizeFactor * quantizeFactor;
    return [
        new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__["U64"](registry, calPeriod),
        new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__["U64"](registry, quantizedPhase)
    ];
}
/** @internal */ function decodeMortalU8a(registry, value) {
    if (value.length === 0) {
        return [
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__["U64"](registry),
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__["U64"](registry)
        ];
    }
    const first = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToBn"])(value.subarray(0, 1)).toNumber();
    const second = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToBn"])(value.subarray(1, 2)).toNumber();
    const encoded = first + (second << 8);
    const period = 2 << encoded % (1 << 4);
    const quantizeFactor = Math.max(period >> 12, 1);
    const phase = (encoded >> 4) * quantizeFactor;
    if (period < 4 || phase >= period) {
        throw new Error('Invalid data passed to Mortal era');
    }
    return [
        new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__["U64"](registry, period),
        new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__["U64"](registry, phase)
    ];
}
/** @internal */ function decodeExtrinsicEra(value = new Uint8Array()) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value)) {
        return !value.length || value[0] === 0 ? new Uint8Array([
            0
        ]) : new Uint8Array([
            1,
            value[0],
            value[1]
        ]);
    } else if (!value) {
        return new Uint8Array([
            0
        ]);
    } else if (value instanceof GenericExtrinsicEra) {
        return decodeExtrinsicEra(value.toU8a());
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        return decodeExtrinsicEra((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(value));
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(value)) {
        const entries = Object.entries(value).map(([k, v])=>[
                k.toLowerCase(),
                v
            ]);
        const mortal = entries.find(([k])=>k.toLowerCase() === 'mortalera');
        const immortal = entries.find(([k])=>k.toLowerCase() === 'immortalera');
        // this is to de-serialize from JSON
        return mortal ? {
            MortalEra: mortal[1]
        } : immortal ? {
            ImmortalEra: immortal[1]
        } : {
            MortalEra: value
        };
    }
    throw new Error('Invalid data passed to Era');
}
class ImmortalEra extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"] {
    constructor(registry, _value){
        // For immortals, we always provide the known value (i.e. treated as a
        // constant no matter how it is constructed - it is a fixed structure)
        super(registry, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["IMMORTAL_ERA"]);
    }
}
class MortalEra extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Tuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Tuple"] {
    constructor(registry, value){
        super(registry, {
            period: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__["U64"],
            phase: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__["U64"]
        }, decodeMortalEra(registry, value));
    }
    /**
     * @description Encoded length for mortals occupy 2 bytes, different from the actual Tuple since it is encoded. This is a shortcut fro `toU8a().length`
     */ get encodedLength() {
        return 2 | 0;
    }
    /**
     * @description The period of this Mortal wraps as a [[U64]]
     */ get period() {
        return this[0];
    }
    /**
     * @description The phase of this Mortal wraps as a [[U64]]
     */ get phase() {
        return this[1];
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return {
            period: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatNumber$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatNumber"])(this.period),
            phase: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatNumber$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatNumber"])(this.phase)
        };
    }
    /**
     * @description Returns a JSON representation of the actual value
     */ toJSON() {
        return this.toHex();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the parity-codec specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     * Period and phase are encoded:
     *   - The period of validity from the block hash found in the signing material.
     *   - The phase in the period that this transaction's lifetime begins (and, importantly,
     *     implies which block hash is included in the signature material). If the `period` is
     *     greater than 1 << 12, then it will be a factor of the times greater than 1<<12 that
     *     `period` is.
     */ toU8a(_isBare) {
        const period = this.period.toNumber();
        const encoded = Math.min(15, Math.max(1, getTrailingZeros(period) - 1)) + (this.phase.toNumber() / Math.max(period >> 12, 1) << 4);
        return new Uint8Array([
            encoded & 0xff,
            encoded >> 8
        ]);
    }
    /**
     * @description Get the block number of the start of the era whose properties this object describes that `current` belongs to.
     */ birth(current) {
        const phase = this.phase.toNumber();
        const period = this.period.toNumber();
        // FIXME No toNumber() here
        return ~~((Math.max((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(current).toNumber(), phase) - phase) / period) * period + phase;
    }
    /**
     * @description Get the block number of the first block at which the era has ended.
     */ death(current) {
        // FIXME No toNumber() here
        return this.birth(current) + this.period.toNumber();
    }
}
class GenericExtrinsicEra extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Enum"] {
    constructor(registry, value){
        super(registry, {
            ImmortalEra,
            MortalEra
        }, decodeExtrinsicEra(value));
    }
    /**
     * @description Override the encoded length method
     */ get encodedLength() {
        return this.isImmortalEra ? this.asImmortalEra.encodedLength : this.asMortalEra.encodedLength;
    }
    /**
     * @description Returns the item as a [[ImmortalEra]]
     */ get asImmortalEra() {
        if (!this.isImmortalEra) {
            throw new Error(`Cannot convert '${this.type}' via asImmortalEra`);
        }
        return this.inner;
    }
    /**
     * @description Returns the item as a [[MortalEra]]
     */ get asMortalEra() {
        if (!this.isMortalEra) {
            throw new Error(`Cannot convert '${this.type}' via asMortalEra`);
        }
        return this.inner;
    }
    /**
     * @description `true` if Immortal
     */ get isImmortalEra() {
        return this.index === 0;
    }
    /**
     * @description `true` if Mortal
     */ get isMortalEra() {
        return this.index > 0;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the parity-codec specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        return this.isMortalEra ? this.asMortalEra.toU8a(isBare) : this.asImmortalEra.toU8a(isBare);
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/ExtrinsicPayload.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericExtrinsicPayload",
    ()=>GenericExtrinsicPayload,
    "decodeAssetId",
    ()=>decodeAssetId
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Base$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/abstract/Base.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/constants.js [app-ssr] (ecmascript)");
;
;
;
const VERSIONS = [
    'ExtrinsicPayloadUnknown',
    'ExtrinsicPayloadUnknown',
    'ExtrinsicPayloadUnknown',
    'ExtrinsicPayloadUnknown',
    'ExtrinsicPayloadV4',
    'ExtrinsicPayloadV5'
];
const PREAMBLES = {
    bare: 'ExtrinsicPayloadV5',
    // Not supported yet
    general: 'ExtrinsicPayloadV5'
};
function decodeAssetId(registry, payload) {
    const maybeAsset = payload?.assetId;
    if (maybeAsset && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(maybeAsset)) {
        const assetId = registry.createType('TAssetConversion', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(maybeAsset));
        // we only want to adjust the payload if the hex passed has the option
        if (maybeAsset === '0x00' || maybeAsset === '0x01' + assetId.toHex().slice(2)) {
            return {
                ...payload,
                assetId: assetId.toJSON()
            };
        }
    }
    return payload;
}
/** @internal */ function decodeExtrinsicPayload(registry, value, version = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LATEST_EXTRINSIC_VERSION"], preamble = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_PREAMBLE"]) {
    if (value instanceof GenericExtrinsicPayload) {
        return value.unwrap();
    }
    const extVersion = version === 5 ? PREAMBLES[preamble] : VERSIONS[version] || VERSIONS[0];
    const payload = decodeAssetId(registry, value);
    return registry.createTypeUnsafe(extVersion, [
        payload,
        {
            version
        }
    ]);
}
class GenericExtrinsicPayload extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Base$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractBase"] {
    constructor(registry, value, { preamble, version } = {}){
        super(registry, decodeExtrinsicPayload(registry, value, version, preamble));
    }
    /**
     * @description The block [[BlockHash]] the signature applies to (mortal/immortal)
     */ get blockHash() {
        return this.inner.blockHash;
    }
    /**
     * @description The [[ExtrinsicEra]]
     */ get era() {
        return this.inner.era;
    }
    /**
     * @description The genesis block [[BlockHash]] the signature applies to
     */ get genesisHash() {
        // NOTE only v3+
        return this.inner.genesisHash || this.registry.createTypeUnsafe('Hash', []);
    }
    /**
     * @description The [[Bytes]] contained in the payload
     */ get method() {
        return this.inner.method;
    }
    /**
     * @description The [[Index]]
     */ get nonce() {
        return this.inner.nonce;
    }
    /**
     * @description The specVersion as a [[u32]] for this payload
     */ get specVersion() {
        // NOTE only v3+
        return this.inner.specVersion || this.registry.createTypeUnsafe('u32', []);
    }
    /**
     * @description The [[Balance]]
     */ get tip() {
        // NOTE from v2+
        return this.inner.tip || this.registry.createTypeUnsafe('Compact<Balance>', []);
    }
    /**
     * @description The transaction version as a [[u32]] for this payload
     */ get transactionVersion() {
        // NOTE only v4+
        return this.inner.transactionVersion || this.registry.createTypeUnsafe('u32', []);
    }
    /**
     * @description The (optional) asset id as a [[u32]] or [[MultiLocation]] for this payload
     */ get assetId() {
        return this.inner.assetId;
    }
    /**
     * @description The (optional) [[Hash]] of the genesis metadata for this payload
     */ get metadataHash() {
        return this.inner.metadataHash;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return this.inner.eq(other);
    }
    /**
     * @description Sign the payload with the keypair
     */ sign(signerPair) {
        const signature = this.inner.sign(signerPair);
        // This is extensible, so we could quite readily extend to send back extra
        // information, such as for instance the payload, i.e. `payload: this.toHex()`
        // For the case here we sign via the extrinsic, we ignore the return, so generally
        // this is applicable for external signing
        return {
            signature: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(signature)
        };
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExtended, disableAscii) {
        return this.inner.toHuman(isExtended, disableAscii);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.toHex();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'ExtrinsicPayload';
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return this.toHex();
    }
    /**
     * @description Returns a serialized u8a form
     */ toU8a(isBare) {
        // call our parent, with only the method stripped
        return super.toU8a(isBare ? {
            method: true
        } : false);
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/ExtrinsicPayloadUnknown.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericExtrinsicPayloadUnknown",
    ()=>GenericExtrinsicPayloadUnknown
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
;
class GenericExtrinsicPayloadUnknown extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    constructor(registry, _value, { version = 0 } = {}){
        super(registry, {});
        throw new Error(`Unsupported extrinsic payload version ${version}`);
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/ExtrinsicUnknown.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericExtrinsicUnknown",
    ()=>GenericExtrinsicUnknown
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/constants.js [app-ssr] (ecmascript)");
;
;
class GenericExtrinsicUnknown extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    constructor(registry, _value, { isSigned = false, version = 0 } = {}){
        super(registry, {});
        throw new Error(`Unsupported ${isSigned ? '' : 'un'}signed extrinsic version ${version & __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UNMASK_VERSION"]}`);
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/SignerPayload.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericSignerPayload",
    ()=>GenericSignerPayload
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Option.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/property.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
;
;
const knownTypes = {
    address: 'Address',
    assetId: 'Option<TAssetConversion>',
    blockHash: 'Hash',
    blockNumber: 'BlockNumber',
    era: 'ExtrinsicEra',
    genesisHash: 'Hash',
    metadataHash: 'Option<[u8;32]>',
    method: 'Call',
    mode: 'u8',
    nonce: 'Compact<Index>',
    runtimeVersion: 'RuntimeVersion',
    signedExtensions: 'Vec<Text>',
    tip: 'Compact<Balance>',
    version: 'u8'
};
class GenericSignerPayload extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    #extraTypes;
    constructor(registry, value){
        const extensionTypes = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra());
        super(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, extensionTypes, knownTypes, {
            withSignedTransaction: 'bool'
        }), value);
        this.#extraTypes = {};
        const getter = (key)=>this.get(key);
        // add all extras that are not in the base types
        for (const [key, type] of Object.entries(extensionTypes)){
            if (!knownTypes[key]) {
                this.#extraTypes[key] = type;
            }
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectProperty"])(this, key, getter);
        }
    }
    get address() {
        return this.getT('address');
    }
    get blockHash() {
        return this.getT('blockHash');
    }
    get blockNumber() {
        return this.getT('blockNumber');
    }
    get era() {
        return this.getT('era');
    }
    get genesisHash() {
        return this.getT('genesisHash');
    }
    get method() {
        return this.getT('method');
    }
    get nonce() {
        return this.getT('nonce');
    }
    get runtimeVersion() {
        return this.getT('runtimeVersion');
    }
    get signedExtensions() {
        return this.getT('signedExtensions');
    }
    get tip() {
        return this.getT('tip');
    }
    get assetId() {
        return this.getT('assetId');
    }
    get version() {
        return this.getT('version');
    }
    get mode() {
        return this.getT('mode');
    }
    get metadataHash() {
        return this.getT('metadataHash');
    }
    get withSignedTransaction() {
        const val = this.getT('withSignedTransaction');
        return val.isTrue;
    }
    /**
     * @description Creates an representation of the structure as an ISignerPayload JSON
     */ toPayload() {
        const result = {};
        const keys = Object.keys(this.#extraTypes);
        // add any explicit overrides we may have
        for(let i = 0, count = keys.length; i < count; i++){
            const key = keys[i];
            const value = this.getT(key);
            // Don't include Option.isNone
            if (!(value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Option"]) || value.isSome) {
                // NOTE In the spread below we convert (mostly) to Hex to align
                // with the typings. In the case of "unknown" fields, we use the
                // primitive toJSON conversion (which is serializable). Technically
                // we can include isNone in here as well ("null" is allowed), however
                // for empty fields we just skip it completely (historical compat)
                result[key] = value.toJSON();
            }
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])(result, {
            // the known defaults as managed explicitly and has different
            // formatting in cases, e.g. we mostly expose a hex format here
            address: this.address.toString(),
            assetId: this.assetId && this.assetId.isSome ? this.assetId.toHex() : null,
            blockHash: this.blockHash.toHex(),
            blockNumber: this.blockNumber.toHex(),
            era: this.era.toHex(),
            genesisHash: this.genesisHash.toHex(),
            metadataHash: this.metadataHash.isSome ? this.metadataHash.toHex() : null,
            method: this.method.toHex(),
            mode: this.mode.toNumber(),
            nonce: this.nonce.toHex(),
            signedExtensions: this.signedExtensions.map((e)=>e.toString()),
            specVersion: this.runtimeVersion.specVersion.toHex(),
            tip: this.tip.toHex(),
            transactionVersion: this.runtimeVersion.transactionVersion.toHex(),
            version: this.version.toNumber(),
            withSignedTransaction: this.withSignedTransaction
        });
    }
    /**
     * @description Creates a representation of the payload in raw Exrinsic form
     */ toRaw() {
        const payload = this.toPayload();
        const data = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.registry.createTypeUnsafe('ExtrinsicPayload', [
            payload,
            {
                version: payload.version
            }
        ])// NOTE Explicitly pass the bare flag so the method is encoded un-prefixed (non-decodable, for signing only)
        .toU8a({
            method: true
        }));
        return {
            address: payload.address,
            data,
            type: 'payload'
        };
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/v4/index.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([]);
;
;
;
}),
"[project]/node_modules/@polkadot/types/extrinsic/v4/Extrinsic.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "EXTRINSIC_VERSION",
    ()=>EXTRINSIC_VERSION,
    "GenericExtrinsicV4",
    ()=>GenericExtrinsicV4
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
;
;
const EXTRINSIC_VERSION = 4;
class GenericExtrinsicV4 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    constructor(registry, value, { isSigned } = {}){
        super(registry, {
            signature: 'ExtrinsicSignatureV4',
            // eslint-disable-next-line sort-keys
            method: 'Call'
        }, GenericExtrinsicV4.decodeExtrinsic(registry, value, isSigned));
    }
    /** @internal */ static decodeExtrinsic(registry, value, isSigned = false) {
        if (value instanceof GenericExtrinsicV4) {
            return value;
        } else if (value instanceof registry.createClassUnsafe('Call')) {
            return {
                method: value
            };
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value)) {
            // here we decode manually since we need to pull through the version information
            const signature = registry.createTypeUnsafe('ExtrinsicSignatureV4', [
                value,
                {
                    isSigned
                }
            ]);
            const method = registry.createTypeUnsafe('Call', [
                value.subarray(signature.encodedLength)
            ]);
            return {
                method,
                signature
            };
        }
        return value || {};
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description The [[Call]] this extrinsic wraps
     */ get method() {
        return this.getT('method');
    }
    /**
     * @description The [[ExtrinsicSignatureV4]]
     */ get signature() {
        return this.getT('signature');
    }
    /**
     * @description The version for the signature
     */ get version() {
        return EXTRINSIC_VERSION;
    }
    /**
     * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)
     */ addSignature(signer, signature, payload) {
        this.signature.addSignature(signer, signature, payload);
        return this;
    }
    /**
     * @description Sign the extrinsic with a specific keypair
     */ sign(account, options) {
        this.signature.sign(this.method, account, options);
        return this;
    }
    /**
     * @describe Adds a fake signature to the extrinsic
     */ signFake(signer, options) {
        this.signature.signFake(this.method, signer, options);
        return this;
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/util.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "sign",
    ()=>sign,
    "signGeneral",
    ()=>signGeneral
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/blake2/asU8a.js [app-ssr] (ecmascript)");
;
function sign(_registry, signerPair, u8a, options) {
    const encoded = u8a.length > 256 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["blake2AsU8a"])(u8a) : u8a;
    return signerPair.sign(encoded, options);
}
function signGeneral(registry, u8a) {
    const encoded = registry.hash(u8a);
    return encoded;
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/v4/ExtrinsicPayload.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericExtrinsicPayloadV4",
    ()=>GenericExtrinsicPayloadV4
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Enum.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/ExtrinsicPayload.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/util.js [app-ssr] (ecmascript)");
;
;
;
;
class GenericExtrinsicPayloadV4 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    #signOptions;
    constructor(registry, value){
        super(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
            method: 'Bytes'
        }, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra()), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeAssetId"])(registry, value));
        // Do detection for the type of extrinsic, in the case of MultiSignature
        // this is an enum, in the case of AnySignature, this is a Hash only
        // (which may be 64 or 65 bytes)
        this.#signOptions = {
            withType: registry.createTypeUnsafe('ExtrinsicSignature', []) instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Enum"]
        };
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return super.inspect({
            method: true
        });
    }
    /**
     * @description The block [[BlockHash]] the signature applies to (mortal/immortal)
     */ get blockHash() {
        return this.getT('blockHash');
    }
    /**
     * @description The [[ExtrinsicEra]]
     */ get era() {
        return this.getT('era');
    }
    /**
     * @description The genesis [[BlockHash]] the signature applies to (mortal/immortal)
     */ get genesisHash() {
        return this.getT('genesisHash');
    }
    /**
     * @description The [[Bytes]] contained in the payload
     */ get method() {
        return this.getT('method');
    }
    /**
     * @description The [[Index]]
     */ get nonce() {
        return this.getT('nonce');
    }
    /**
     * @description The specVersion for this signature
     */ get specVersion() {
        return this.getT('specVersion');
    }
    /**
     * @description The tip [[Balance]]
     */ get tip() {
        return this.getT('tip');
    }
    /**
     * @description The transactionVersion for this signature
     */ get transactionVersion() {
        return this.getT('transactionVersion');
    }
    /**
     * @description The (optional) asset id for this signature for chains that support transaction fees in assets
     */ get assetId() {
        return this.getT('assetId');
    }
    /**
     * @description The (optional) asset id for this signature for chains that support transaction fees in assets
     */ get metadataHash() {
        return this.getT('metadataHash');
    }
    /**
     * @description Sign the payload with the keypair
     */ sign(signerPair) {
        // NOTE The `toU8a({ method: true })` argument is absolutely critical, we
        // don't want the method (Bytes) to have the length prefix included. This
        // means that the data-as-signed is un-decodable, but is also doesn't need
        // the extra information, only the pure data (and is not decoded) ...
        // The same applies to V1..V3, if we have a V5, carry this comment
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sign"])(this.registry, signerPair, this.toU8a({
            method: true
        }), this.#signOptions);
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/v4/ExtrinsicSignature.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericExtrinsicSignatureV4",
    ()=>GenericExtrinsicSignatureV4
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/property.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/constants.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v4/ExtrinsicPayload.js [app-ssr] (ecmascript)");
;
;
;
;
const FAKE_SIGNATURE = new Uint8Array(256).fill(1);
function toAddress(registry, address) {
    return registry.createTypeUnsafe('Address', [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(address) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(address) : address
    ]);
}
class GenericExtrinsicSignatureV4 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    #signKeys;
    constructor(registry, value, { isSigned } = {}){
        const signTypes = registry.getSignedExtensionTypes();
        super(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])(// eslint-disable-next-line sort-keys
        {
            signer: 'Address',
            signature: 'ExtrinsicSignature'
        }, signTypes), GenericExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));
        this.#signKeys = Object.keys(signTypes);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectProperties"])(this, this.#signKeys, (k)=>this.get(k));
    }
    /** @internal */ static decodeExtrinsicSignature(value, isSigned = false) {
        if (!value) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EMPTY_U8A"];
        } else if (value instanceof GenericExtrinsicSignatureV4) {
            return value;
        }
        return isSigned ? value : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EMPTY_U8A"];
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.isSigned ? super.encodedLength : 0;
    }
    /**
     * @description `true` if the signature is valid
     */ get isSigned() {
        return !this.signature.isEmpty;
    }
    /**
     * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to
     */ get era() {
        return this.getT('era');
    }
    /**
     * @description The [[Index]] for the signature
     */ get nonce() {
        return this.getT('nonce');
    }
    /**
     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]
     */ get signature() {
        // the second case here is when we don't have an enum signature, treat as raw
        return this.multiSignature.value || this.multiSignature;
    }
    /**
     * @description The raw [[ExtrinsicSignature]]
     */ get multiSignature() {
        return this.getT('signature');
    }
    /**
     * @description The [[Address]] that signed
     */ get signer() {
        return this.getT('signer');
    }
    /**
     * @description The [[Balance]] tip
     */ get tip() {
        return this.getT('tip');
    }
    /**
     * @description The [[u32]] or [[MultiLocation]] assetId
     */ get assetId() {
        return this.getT('assetId');
    }
    /**
     * @description the [[u32]] mode
     */ get mode() {
        return this.getT('mode');
    }
    /**
     * @description The [[Hash]] for the metadata
     */ get metadataHash() {
        return this.getT('metadataHash');
    }
    _injectSignature(signer, signature, payload) {
        // use the fields exposed to guide the getters
        for(let i = 0, count = this.#signKeys.length; i < count; i++){
            const k = this.#signKeys[i];
            const v = payload.get(k);
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(v)) {
                this.set(k, v);
            }
        }
        // additional fields (exposed in struct itself)
        this.set('signer', signer);
        this.set('signature', signature);
        return this;
    }
    /**
     * @description Adds a raw signature
     */ addSignature(signer, signature, payload) {
        return this._injectSignature(toAddress(this.registry, signer), this.registry.createTypeUnsafe('ExtrinsicSignature', [
            signature
        ]), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayloadV4"](this.registry, payload));
    }
    /**
     * @description Creates a payload from the supplied options
     */ createPayload(method, options) {
        const { era, runtimeVersion: { specVersion, transactionVersion } } = options;
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayloadV4"](this.registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, options, {
            era: era || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["IMMORTAL_ERA"],
            method: method.toHex(),
            specVersion,
            transactionVersion
        }));
    }
    /**
     * @description Generate a payload and applies the signature from a keypair
     */ sign(method, account, options) {
        if (!account?.addressRaw) {
            throw new Error(`Expected a valid keypair for signing, found ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(account)}`);
        }
        const payload = this.createPayload(method, options);
        return this._injectSignature(toAddress(this.registry, account.addressRaw), this.registry.createTypeUnsafe('ExtrinsicSignature', [
            payload.sign(account)
        ]), payload);
    }
    /**
     * @description Generate a payload and applies a fake signature
     */ signFake(method, address, options) {
        if (!address) {
            throw new Error(`Expected a valid address for signing, found ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(address)}`);
        }
        const payload = this.createPayload(method, options);
        return this._injectSignature(toAddress(this.registry, address), this.registry.createTypeUnsafe('ExtrinsicSignature', [
            FAKE_SIGNATURE
        ]), payload);
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        return this.isSigned ? super.toU8a(isBare) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EMPTY_U8A"];
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/v4/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericExtrinsicPayloadV4",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayloadV4"],
    "GenericExtrinsicSignatureV4",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$ExtrinsicSignature$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicSignatureV4"],
    "GenericExtrinsicV4",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$Extrinsic$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicV4"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v4/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$Extrinsic$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v4/Extrinsic.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v4/ExtrinsicPayload.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$ExtrinsicSignature$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v4/ExtrinsicSignature.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types/extrinsic/v5/index.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([]);
;
;
;
;
}),
"[project]/node_modules/@polkadot/types/extrinsic/v5/Extrinsic.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "EXTRINSIC_VERSION",
    ()=>EXTRINSIC_VERSION,
    "GenericExtrinsicV5",
    ()=>GenericExtrinsicV5
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
;
;
const EXTRINSIC_VERSION = 5;
class GenericExtrinsicV5 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    constructor(registry, value, { isSigned } = {}){
        super(registry, {
            signature: 'ExtrinsicSignatureV5',
            // eslint-disable-next-line sort-keys
            method: 'Call'
        }, GenericExtrinsicV5.decodeExtrinsic(registry, value, isSigned));
    }
    /** @internal */ static decodeExtrinsic(registry, value, isSigned = false) {
        if (value instanceof GenericExtrinsicV5) {
            return value;
        } else if (value instanceof registry.createClassUnsafe('Call')) {
            return {
                method: value
            };
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value)) {
            // here we decode manually since we need to pull through the version information
            const signature = registry.createTypeUnsafe('ExtrinsicSignatureV5', [
                value,
                {
                    isSigned
                }
            ]);
            // We add 2 here since the length of the TransactionExtension Version needs to be accounted for
            const method = registry.createTypeUnsafe('Call', [
                value.subarray(signature.encodedLength)
            ]);
            return {
                method,
                signature
            };
        }
        return value || {};
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description The [[Call]] this extrinsic wraps
     */ get method() {
        return this.getT('method');
    }
    /**
     * @description The [[ExtrinsicSignatureV5]]
     */ get signature() {
        return this.getT('signature');
    }
    /**
     * @description The version for the signature
     */ get version() {
        return EXTRINSIC_VERSION;
    }
    /**
     * @description The [[Preamble]] for the extrinsic
     */ get preamble() {
        return this.getT('preamble');
    }
    /**
     * @description Add an [[ExtrinsicSignatureV5]] to the extrinsic (already generated)
     *
     * [Disabled for ExtrinsicV5]
     */ addSignature(_signer, _signature, _payload) {
        throw new Error('Extrinsic: ExtrinsicV5 does not include signing support');
    }
    /**
     * @description Sign the extrinsic with a specific keypair
     *
     * [Disabled for ExtrinsicV5]
     */ sign(_account, _options) {
        throw new Error('Extrinsic: ExtrinsicV5 does not include signing support');
    }
    /**
     * @describe Adds a fake signature to the extrinsic
     *
     * [Disabled for ExtrinsicV5]
     */ signFake(_signer, _options) {
        throw new Error('Extrinsic: ExtrinsicV5 does not include signing support');
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/v5/ExtrinsicPayload.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericExtrinsicPayloadV5",
    ()=>GenericExtrinsicPayloadV5
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
;
;
class GenericExtrinsicPayloadV5 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    constructor(registry, value){
        super(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
            method: 'Bytes'
        }, registry.getSignedExtensionTypes(), registry.getSignedExtensionExtra()), value);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return super.inspect({
            method: true
        });
    }
    /**
     * @description The block [[BlockHash]] the signature applies to (mortal/immortal)
     */ get blockHash() {
        return this.getT('blockHash');
    }
    /**
     * @description The [[ExtrinsicEra]]
     */ get era() {
        return this.getT('era');
    }
    /**
     * @description The genesis [[BlockHash]] the signature applies to (mortal/immortal)
     */ get genesisHash() {
        return this.getT('genesisHash');
    }
    /**
     * @description The [[Bytes]] contained in the payload
     */ get method() {
        return this.getT('method');
    }
    /**
     * @description The [[Index]]
     */ get nonce() {
        return this.getT('nonce');
    }
    /**
     * @description The specVersion for this signature
     */ get specVersion() {
        return this.getT('specVersion');
    }
    /**
     * @description The tip [[Balance]]
     */ get tip() {
        return this.getT('tip');
    }
    /**
     * @description The transactionVersion for this signature
     */ get transactionVersion() {
        return this.getT('transactionVersion');
    }
    /**
     * @description The (optional) asset id for this signature for chains that support transaction fees in assets
     */ get assetId() {
        return this.getT('assetId');
    }
    /**
     * @description The (optional) metadataHash proof for the CheckMetadataHash TransactionExtension
     */ get metadataHash() {
        return this.getT('metadataHash');
    }
    /**
     * @description Sign the payload with the keypair
     *
     * [Disabled for ExtrinsicV5]
     */ sign(_signerPair) {
        throw new Error('Extrinsic: ExtrinsicV5 does not include signing support');
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/v5/ExtrinsicSignature.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericExtrinsicSignatureV5",
    ()=>GenericExtrinsicSignatureV5
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/property.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/constants.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v5/ExtrinsicPayload.js [app-ssr] (ecmascript)");
;
;
;
;
class GenericExtrinsicSignatureV5 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    #signKeys;
    constructor(registry, value, { isSigned } = {}){
        const signTypes = registry.getSignedExtensionTypes();
        super(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])(// eslint-disable-next-line sort-keys
        {
            signer: 'Address',
            signature: 'ExtrinsicSignature',
            transactionExtensionVersion: 'u8'
        }, signTypes), GenericExtrinsicSignatureV5.decodeExtrinsicSignature(value, isSigned));
        this.#signKeys = Object.keys(signTypes);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectProperties"])(this, this.#signKeys, (k)=>this.get(k));
    }
    /** @internal */ static decodeExtrinsicSignature(value, isSigned = false) {
        if (!value) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EMPTY_U8A"];
        } else if (value instanceof GenericExtrinsicSignatureV5) {
            return value;
        }
        return isSigned ? value : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EMPTY_U8A"];
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.isSigned ? super.encodedLength : 0;
    }
    /**
     * @description `true` if the signature is valid
     */ get isSigned() {
        return !this.signature.isEmpty;
    }
    /**
     * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to
     */ get era() {
        return this.getT('era');
    }
    /**
     * @description The [[Index]] for the signature
     */ get nonce() {
        return this.getT('nonce');
    }
    /**
     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]
     */ get signature() {
        // the second case here is when we don't have an enum signature, treat as raw
        return this.multiSignature.value || this.multiSignature;
    }
    /**
     * @description The raw [[ExtrinsicSignature]]
     */ get multiSignature() {
        return this.getT('signature');
    }
    /**
     * @description The [[Address]] that signed
     */ get signer() {
        return this.getT('signer');
    }
    /**
     * @description The [[Balance]] tip
     */ get tip() {
        return this.getT('tip');
    }
    /**
     * @description The [[u32]] or [[MultiLocation]] assetId
     */ get assetId() {
        return this.getT('assetId');
    }
    /**
     * @description the [[u32]] mode
     */ get mode() {
        return this.getT('mode');
    }
    /**
     * @description The (optional)  [[Hash]] for the metadata proof
     */ get metadataHash() {
        return this.getT('metadataHash');
    }
    /**
     * @description The [[u8]] for the TransactionExtension version
     */ get transactionExtensionVersion() {
        return this.getT('transactionExtensionVersion');
    }
    /**
     * [Disabled for ExtrinsicV5]
     */ _injectSignature(_signer, _signature, _payload) {
        throw new Error('Extrinsic: ExtrinsicV5 does not include signing support');
    }
    /**
     * @description Adds a raw signature
     *
     * [Disabled for ExtrinsicV5]
     */ addSignature(_signer, _signature, _payload) {
        throw new Error('Extrinsic: ExtrinsicV5 does not include signing support');
    }
    /**
     * @description Creates a payload from the supplied options
     */ createPayload(method, options) {
        const { era, runtimeVersion: { specVersion, transactionVersion } } = options;
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayloadV5"](this.registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, options, {
            era: era || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["IMMORTAL_ERA"],
            method: method.toHex(),
            specVersion,
            transactionVersion
        }));
    }
    /**
     * @description Generate a payload and applies the signature from a keypair
     *
     * [Disabled for ExtrinsicV5]
     */ sign(_method, _account, _options) {
        throw new Error('Extrinsic: ExtrinsicV5 does not include signing support');
    }
    /**
     * @description Generate a payload and applies a fake signature
     *
     * [Disabled for ExtrinsicV5]
     */ signFake(_method, _address, _options) {
        throw new Error('Extrinsic: ExtrinsicV5 does not include signing support');
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        return this.isSigned ? super.toU8a(isBare) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EMPTY_U8A"];
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/v5/GeneralExtrinsic.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GeneralExtrinsic",
    ()=>GeneralExtrinsic
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/addLength.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/fromU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/constants.js [app-ssr] (ecmascript)");
;
;
;
function decodeU8a(u8a) {
    if (!u8a.length) {
        return new Uint8Array();
    }
    const [offset, length] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactFromU8a"])(u8a);
    const total = offset + length.toNumber();
    if (total > u8a.length) {
        throw new Error(`Extrinsic: length less than remainder, expected at least ${total}, found ${u8a.length}`);
    }
    const data = u8a.subarray(offset, total);
    // 69 denotes 0b01000101 which is the version and preamble for this Extrinsic
    if (data[0] !== 69) {
        throw new Error(`Extrinsic: incorrect version for General Transactions, expected 5, found ${data[0] & __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UNMASK_VERSION"]}`);
    }
    return data.subarray(1);
}
class GeneralExtrinsic extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    #version;
    #preamble;
    constructor(registry, value, opt){
        const extTypes = registry.getSignedExtensionTypes();
        super(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
            transactionExtensionVersion: 'u8'
        }, extTypes, {
            method: 'Call'
        }), GeneralExtrinsic.decodeExtrinsic(registry, value));
        this.#version = opt?.version || 0b00000101;
        this.#preamble = 0b01000000;
    }
    static decodeExtrinsic(registry, value) {
        if (!value) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$constants$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EMPTY_U8A"];
        } else if (value instanceof GeneralExtrinsic) {
            return value;
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || Array.isArray(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
            return decodeU8a((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value));
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(value)) {
            const { payload, transactionExtensionVersion } = value;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])(payload || {}, {
                transactionExtensionVersion: transactionExtensionVersion || registry.getTransactionExtensionVersion()
            });
        }
        return {};
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return super.encodedLength;
    }
    /**
     * @description The [[ExtrinsicEra]]
     */ get era() {
        return this.getT('era');
    }
    /**
     * @description The [[Index]]
     */ get nonce() {
        return this.getT('nonce');
    }
    /**
     * @description The tip [[Balance]]
     */ get tip() {
        return this.getT('tip');
    }
    /**
     * @description The (optional) asset id for this signature for chains that support transaction fees in assets
     */ get assetId() {
        return this.getT('assetId');
    }
    /**
     * @description The mode used for the CheckMetadataHash TransactionExtension
     */ get mode() {
        return this.getT('mode');
    }
    /**
     * @description The (optional) [[Hash]] for the metadata proof
     */ get metadataHash() {
        return this.getT('metadataHash');
    }
    /**
     * @description The version of the TransactionExtensions used in this extrinsic
     */ get transactionExtensionVersion() {
        return this.getT('transactionExtensionVersion');
    }
    /**
     * @description The [[Call]] this extrinsic wraps
     */ get method() {
        return this.getT('method');
    }
    /**
     * @description The extrinsic's version
     */ get version() {
        return this.#version;
    }
    /**
     * @description The [[Preamble]] for the extrinsic
     */ get preamble() {
        return this.#preamble;
    }
    toHex(isBare) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a(isBare));
    }
    toU8a(isBare) {
        return isBare ? this.encode() : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactAddLength"])(this.encode());
    }
    toRawType() {
        return 'GeneralExt';
    }
    /**
     *
     * @description Returns an encoded GeneralExtrinsic
     */ encode() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])(new Uint8Array([
            this.version | this.preamble
        ]), super.toU8a());
    }
    signFake() {
        throw new Error('Extrinsic: Type GeneralExtrinsic does not have signFake implemented');
    }
    addSignature() {
        throw new Error('Extrinsic: Type GeneralExtrinsic does not have addSignature implemented');
    }
    sign() {
        throw new Error('Extrinsic: Type GeneralExtrinsic does not have sign implemented');
    }
    signature() {
        throw new Error('Extrinsic: Type GeneralExtrinsic does not have the signature getter');
    }
}
}),
"[project]/node_modules/@polkadot/types/extrinsic/v5/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GeneralExtrinsic",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$GeneralExtrinsic$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GeneralExtrinsic"],
    "GenericExtrinsicPayloadV5",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayloadV5"],
    "GenericExtrinsicSignatureV5",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$ExtrinsicSignature$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicSignatureV5"],
    "GenericExtrinsicV5",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$Extrinsic$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicV5"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v5/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$Extrinsic$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v5/Extrinsic.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v5/ExtrinsicPayload.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$ExtrinsicSignature$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v5/ExtrinsicSignature.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$GeneralExtrinsic$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v5/GeneralExtrinsic.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types/extrinsic/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GeneralExtrinsic",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GeneralExtrinsic"],
    "GenericExtrinsic",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$Extrinsic$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["GenericExtrinsic"],
    "GenericExtrinsicEra",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicEra$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicEra"],
    "GenericExtrinsicPayload",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayload"],
    "GenericExtrinsicPayloadUnknown",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicPayloadUnknown$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayloadUnknown"],
    "GenericExtrinsicPayloadV4",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayloadV4"],
    "GenericExtrinsicPayloadV5",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayloadV5"],
    "GenericExtrinsicSignatureV4",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicSignatureV4"],
    "GenericExtrinsicSignatureV5",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicSignatureV5"],
    "GenericExtrinsicUnknown",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicUnknown$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicUnknown"],
    "GenericExtrinsicV4",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicV4"],
    "GenericExtrinsicV5",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicV5"],
    "GenericImmortalEra",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicEra$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ImmortalEra"],
    "GenericMortalEra",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicEra$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MortalEra"],
    "GenericSignerPayload",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$SignerPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericSignerPayload"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$Extrinsic$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/Extrinsic.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicEra$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/ExtrinsicEra.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/ExtrinsicPayload.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicPayloadUnknown$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/ExtrinsicPayloadUnknown.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$ExtrinsicUnknown$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/ExtrinsicUnknown.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$SignerPayload$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/SignerPayload.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v4$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v4/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$v5$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/v5/index.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types/generic/index.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([]);
;
;
;
;
;
;
;
;
;
;
;
}),
"[project]/node_modules/@polkadot/types/generic/AccountId.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericAccountId",
    ()=>GenericAccountId,
    "GenericAccountId33",
    ()=>GenericAccountId33
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/U8aFixed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/address/decode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/address/encode.js [app-ssr] (ecmascript)");
;
;
;
/** @internal */ function decodeAccountId(value) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || Array.isArray(value)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
    } else if (!value) {
        return new Uint8Array();
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(value);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeAddress"])(value.toString());
    }
    throw new Error(`Unknown type passed to AccountId constructor, found typeof ${typeof value}`);
}
class BaseAccountId extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U8aFixed"] {
    constructor(registry, allowedBits = 256 | 264, value){
        const decoded = decodeAccountId(value);
        const decodedBits = decoded.length * 8;
        // Part of stream containing >= 32 bytes or a all empty (defaults)
        if (decodedBits < allowedBits && decoded.some((b)=>b)) {
            throw new Error(`Invalid AccountId provided, expected ${allowedBits >> 3} bytes, found ${decoded.length}`);
        }
        super(registry, decoded, allowedBits);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return super.eq(decodeAccountId(other));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.toString();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encodeAddress"])(this, this.registry.chainSS58);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'AccountId';
    }
}
class GenericAccountId extends BaseAccountId {
    constructor(registry, value){
        super(registry, 256, value);
    }
}
class GenericAccountId33 extends BaseAccountId {
    constructor(registry, value){
        super(registry, 264, value);
    }
}
}),
"[project]/node_modules/@polkadot/types/generic/AccountIndex.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericAccountIndex",
    ()=>GenericAccountIndex
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U32.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bigInt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/address/decode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/address/encode.js [app-ssr] (ecmascript)");
;
;
;
const PREFIX_1BYTE = 0xef;
const PREFIX_2BYTE = 0xfc;
const PREFIX_4BYTE = 0xfd;
const PREFIX_8BYTE = 0xfe;
const MAX_1BYTE = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](PREFIX_1BYTE);
const MAX_2BYTE = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](1).shln(16);
const MAX_4BYTE = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](1).shln(32);
/** @internal */ function decodeAccountIndex(value) {
    // eslint-disable-next-line @typescript-eslint/no-use-before-define
    if (value instanceof GenericAccountIndex) {
        // `value.toBn()` on AccountIndex returns a pure BN (i.e. not an
        // AccountIndex), which has the initial `toString()` implementation.
        return value.toBn();
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBn"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBigInt"])(value)) {
        return value;
    }
    return decodeAccountIndex((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeAddress"])(value));
}
class GenericAccountIndex extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u32"] {
    constructor(registry, value = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](0)){
        super(registry, decodeAccountIndex(value));
    }
    static calcLength(_value) {
        const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(_value);
        if (value.lte(MAX_1BYTE)) {
            return 1;
        } else if (value.lt(MAX_2BYTE)) {
            return 2;
        } else if (value.lt(MAX_4BYTE)) {
            return 4;
        }
        return 8;
    }
    static readLength(input) {
        const first = input[0];
        if (first === PREFIX_2BYTE) {
            return [
                1,
                2
            ];
        } else if (first === PREFIX_4BYTE) {
            return [
                1,
                4
            ];
        } else if (first === PREFIX_8BYTE) {
            return [
                1,
                8
            ];
        }
        return [
            0,
            1
        ];
    }
    static writeLength(input) {
        switch(input.length){
            case 2:
                return new Uint8Array([
                    PREFIX_2BYTE
                ]);
            case 4:
                return new Uint8Array([
                    PREFIX_4BYTE
                ]);
            case 8:
                return new Uint8Array([
                    PREFIX_8BYTE
                ]);
            default:
                return new Uint8Array([]);
        }
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        // shortcut for BN or Number, don't create an object
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBn"])(other) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(other)) {
            return super.eq(other);
        }
        // convert and compare
        return super.eq(this.registry.createTypeUnsafe('AccountIndex', [
            other
        ]));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.toString();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        const length = GenericAccountIndex.calcLength(this);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encodeAddress"])(this.toU8a().subarray(0, length), this.registry.chainSS58);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'AccountIndex';
    }
}
}),
"[project]/node_modules/@polkadot/types/generic/Block.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericBlock",
    ()=>GenericBlock
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
;
class GenericBlock extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    constructor(registry, value){
        super(registry, {
            header: 'Header',
            // eslint-disable-next-line sort-keys
            extrinsics: 'Vec<Extrinsic>'
        }, value);
    }
    /**
     * @description Encodes a content [[Hash]] for the block
     */ get contentHash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description The [[Extrinsic]] contained in the block
     */ get extrinsics() {
        return this.getT('extrinsics');
    }
    /**
     * @description Block/header [[Hash]]
     */ get hash() {
        return this.header.hash;
    }
    /**
     * @description The [[Header]] of the block
     */ get header() {
        return this.getT('header');
    }
}
}),
"[project]/node_modules/@polkadot/types/generic/Call.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericCall",
    ()=>GenericCall,
    "GenericCallIndex",
    ()=>GenericCallIndex
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/U8aFixed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
;
;
/**
 * Get a mapping of `argument name -> argument type` for the function, from
 * its metadata.
 *
 * @param meta - The function metadata used to get the definition.
 * @internal
 */ function getArgsDef(registry, meta) {
    return meta.fields.reduce((result, { name, type }, index)=>{
        result[name.unwrapOr(`param${index}`).toString()] = registry.createLookupType(type);
        return result;
    }, {});
}
/** @internal */ function decodeCallViaObject(registry, value, _meta) {
    // we only pass args/methodsIndex out
    const { args, callIndex } = value;
    // Get the correct lookupIndex
    // eslint-disable-next-line @typescript-eslint/no-use-before-define
    const lookupIndex = callIndex instanceof GenericCallIndex ? callIndex.toU8a() : callIndex;
    // Find metadata with callIndex
    const meta = _meta || registry.findMetaCall(lookupIndex).meta;
    return {
        args,
        argsDef: getArgsDef(registry, meta),
        callIndex,
        meta
    };
}
/** @internal */ function decodeCallViaU8a(registry, value, _meta) {
    // We need 2 bytes for the callIndex
    const callIndex = registry.firstCallIndex.slice();
    callIndex.set(value.subarray(0, 2), 0);
    // Find metadata with callIndex
    const meta = _meta || registry.findMetaCall(callIndex).meta;
    return {
        args: value.subarray(2),
        argsDef: getArgsDef(registry, meta),
        callIndex,
        meta
    };
}
/**
 * Decode input to pass into constructor.
 *
 * @param value - Value to decode, one of:
 * - hex
 * - Uint8Array
 * - {@see DecodeMethodInput}
 * @param _meta - Metadata to use, so that `injectMethods` lookup is not
 * necessary.
 * @internal
 */ function decodeCall(registry, value = new Uint8Array(), _meta) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        return decodeCallViaU8a(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value), _meta);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(value) && value.callIndex && value.args) {
        return decodeCallViaObject(registry, value, _meta);
    }
    throw new Error(`Call: Cannot decode value '${value}' of type ${typeof value}`);
}
class GenericCallIndex extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U8aFixed"] {
    constructor(registry, value){
        super(registry, value, 16);
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive() {
        return this.toHex();
    }
}
class GenericCall extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    _meta;
    constructor(registry, value, meta){
        const decoded = decodeCall(registry, value, meta);
        try {
            super(registry, {
                callIndex: GenericCallIndex,
                // eslint-disable-next-line sort-keys
                args: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"].with(decoded.argsDef)
            }, decoded);
        } catch (error) {
            let method = 'unknown.unknown';
            try {
                const c = registry.findMetaCall(decoded.callIndex);
                method = `${c.section}.${c.method}`;
            } catch  {
            // ignore
            }
            throw new Error(`Call: failed decoding ${method}:: ${error.message}`);
        }
        this._meta = decoded.meta;
    }
    /**
     * @description The arguments for the function call
     */ get args() {
        return [
            ...this.getT('args').values()
        ];
    }
    /**
     * @description The argument definitions
     */ get argsDef() {
        return getArgsDef(this.registry, this.meta);
    }
    /**
     * @description The argument entries
     */ get argsEntries() {
        return [
            ...this.getT('args').entries()
        ];
    }
    /**
     * @description The encoded `[sectionIndex, methodIndex]` identifier
     */ get callIndex() {
        return this.getT('callIndex').toU8a();
    }
    /**
     * @description The encoded data
     */ get data() {
        return this.getT('args').toU8a();
    }
    /**
     * @description The [[FunctionMetadata]]
     */ get meta() {
        return this._meta;
    }
    /**
     * @description Returns the name of the method
     */ get method() {
        return this.registry.findMetaCall(this.callIndex).method;
    }
    /**
     * @description Returns the module containing the method
     */ get section() {
        return this.registry.findMetaCall(this.callIndex).section;
    }
    /**
     * @description Checks if the source matches this in type
     */ is(other) {
        return other.callIndex[0] === this.callIndex[0] && other.callIndex[1] === this.callIndex[1];
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExpanded, disableAscii) {
        let call;
        try {
            call = this.registry.findMetaCall(this.callIndex);
        } catch  {
        // swallow
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
            args: this.argsEntries.reduce((args, [n, a])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])(args, {
                    [n]: a.toHuman(isExpanded, disableAscii)
                }), {}),
            method: call?.method,
            section: call?.section
        }, isExpanded && call ? {
            docs: call.meta.docs.map((d)=>d.toString())
        } : null);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'Call';
    }
}
}),
"[project]/node_modules/@polkadot/types/generic/ChainProperties.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericChainProperties",
    ()=>GenericChainProperties
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Json$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Json.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/null.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
;
;
function createValue(registry, type, value, asArray = true) {
    // We detect codec here as well - when found, generally this is constructed from itself
    if (value && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value.unwrapOrDefault)) {
        return value;
    }
    return registry.createTypeUnsafe(type, [
        asArray ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNull"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(value) ? null : Array.isArray(value) ? value : [
            value
        ] : value
    ]);
}
function decodeValue(registry, key, value) {
    return key === 'ss58Format' ? createValue(registry, 'Option<u32>', value, false) : key === 'tokenDecimals' ? createValue(registry, 'Option<Vec<u32>>', value) : key === 'tokenSymbol' ? createValue(registry, 'Option<Vec<Text>>', value) : key === 'isEthereum' ? createValue(registry, 'Bool', value, false) : value;
}
function decode(registry, value) {
    return (// allow decoding from a map as well (ourselves)
    value && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value.entries) ? [
        ...value.entries()
    ] : Object.entries(value || {})).reduce((all, [key, value])=>{
        all[key] = decodeValue(registry, key, value);
        return all;
    }, {
        isEthereum: registry.createTypeUnsafe('Bool', []),
        ss58Format: registry.createTypeUnsafe('Option<u32>', []),
        tokenDecimals: registry.createTypeUnsafe('Option<Vec<u32>>', []),
        tokenSymbol: registry.createTypeUnsafe('Option<Vec<Text>>', [])
    });
}
class GenericChainProperties extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Json$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Json"] {
    constructor(registry, value){
        super(registry, decode(registry, value));
    }
    /**
     * @description The chain uses Ethereum addresses
     */ get isEthereum() {
        return this.getT('isEthereum');
    }
    /**
     * @description The chain ss58Format
     */ get ss58Format() {
        return this.getT('ss58Format');
    }
    /**
     * @description The decimals for each of the tokens
     */ get tokenDecimals() {
        return this.getT('tokenDecimals');
    }
    /**
     * @description The symbols for the tokens
     */ get tokenSymbol() {
        return this.getT('tokenSymbol');
    }
}
}),
"[project]/node_modules/@polkadot/types/generic/ConsensusEngineId.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "CID_AURA",
    ()=>CID_AURA,
    "CID_BABE",
    ()=>CID_BABE,
    "CID_GRPA",
    ()=>CID_GRPA,
    "CID_NMBS",
    ()=>CID_NMBS,
    "CID_POW",
    ()=>CID_POW,
    "GenericConsensusEngineId",
    ()=>GenericConsensusEngineId
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/U8aFixed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toString.js [app-ssr] (ecmascript)");
;
;
const CID_AURA = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringToU8a"])('aura');
const CID_BABE = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringToU8a"])('BABE');
const CID_GRPA = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringToU8a"])('FRNK');
const CID_POW = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringToU8a"])('pow_');
const CID_NMBS = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringToU8a"])('nmbs');
function getAuraAuthor(registry, bytes, sessionValidators) {
    return sessionValidators[registry.createTypeUnsafe('RawAuraPreDigest', [
        bytes.toU8a(true)
    ]).slotNumber.mod(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](sessionValidators.length)).toNumber()];
}
function getBabeAuthor(registry, bytes, sessionValidators) {
    const digest = registry.createTypeUnsafe('RawBabePreDigestCompat', [
        bytes.toU8a(true)
    ]);
    return sessionValidators[digest.value.toNumber()];
}
function getBytesAsAuthor(registry, bytes) {
    return registry.createTypeUnsafe('AccountId', [
        bytes
    ]);
}
class GenericConsensusEngineId extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U8aFixed"] {
    constructor(registry, value){
        super(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToU8a"])(value, {
            isLe: false
        }) : value, 32);
    }
    /**
     * @description `true` if the engine matches aura
     */ get isAura() {
        return this.eq(CID_AURA);
    }
    /**
     * @description `true` is the engine matches babe
     */ get isBabe() {
        return this.eq(CID_BABE);
    }
    /**
     * @description `true` is the engine matches grandpa
     */ get isGrandpa() {
        return this.eq(CID_GRPA);
    }
    /**
     * @description `true` is the engine matches pow
     */ get isPow() {
        return this.eq(CID_POW);
    }
    /**
     * @description `true` is the engine matches nimbus
     */ get isNimbus() {
        return this.eq(CID_NMBS);
    }
    /**
     * @description From the input bytes, decode into an author
     */ extractAuthor(bytes, sessionValidators) {
        if (sessionValidators?.length) {
            if (this.isAura) {
                return getAuraAuthor(this.registry, bytes, sessionValidators);
            } else if (this.isBabe) {
                return getBabeAuthor(this.registry, bytes, sessionValidators);
            }
        }
        // For pow & Nimbus, the bytes are the actual author
        if (this.isPow || this.isNimbus) {
            return getBytesAsAuthor(this.registry, bytes);
        }
        return undefined;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return this.toString();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'ConsensusEngineId';
    }
    /**
     * @description Override the default toString to return a 4-byte string
     */ toString() {
        return this.isAscii ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToString"])(this) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this);
    }
}
}),
"[project]/node_modules/@polkadot/types/generic/LookupSource.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ACCOUNT_ID_PREFIX",
    ()=>ACCOUNT_ID_PREFIX,
    "GenericLookupSource",
    ()=>GenericLookupSource
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Base$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/abstract/Base.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bigInt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/address/decode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/AccountId.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/AccountIndex.js [app-ssr] (ecmascript)");
;
;
;
;
;
const ACCOUNT_ID_PREFIX = new Uint8Array([
    0xff
]);
/** @internal */ function decodeString(registry, value) {
    const decoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeAddress"])(value);
    return decoded.length === 32 ? registry.createTypeUnsafe('AccountId', [
        decoded
    ]) : registry.createTypeUnsafe('AccountIndex', [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToBn"])(decoded)
    ]);
}
/** @internal */ function decodeU8a(registry, value) {
    // This allows us to instantiate an address with a raw publicKey. Do this first before
    // we checking the first byte, otherwise we may split an already-existent valid address
    if (value.length === 32) {
        return registry.createTypeUnsafe('AccountId', [
            value
        ]);
    } else if (value[0] === 0xff) {
        return registry.createTypeUnsafe('AccountId', [
            value.subarray(1)
        ]);
    }
    const [offset, length] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"].readLength(value);
    return registry.createTypeUnsafe('AccountIndex', [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToBn"])(value.subarray(offset, offset + length))
    ]);
}
/** @internal */ function decodeAddressOrIndex(registry, value) {
    return value instanceof GenericLookupSource ? value.inner : value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountId"] || value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"] ? value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBn"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBigInt"])(value) ? registry.createTypeUnsafe('AccountIndex', [
        value
    ]) : Array.isArray(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) ? decodeU8a(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value)) : decodeString(registry, value);
}
class GenericLookupSource extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Base$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractBase"] {
    constructor(registry, value = new Uint8Array()){
        super(registry, decodeAddressOrIndex(registry, value));
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        const rawLength = this._rawLength;
        return rawLength + (// for 1 byte AccountIndexes, we are not adding a specific prefix
        rawLength > 1 ? 1 : 0);
    }
    /**
     * @description The length of the raw value, either AccountIndex or AccountId
     */ get _rawLength() {
        return this.inner instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"] ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"].calcLength(this.inner) : this.inner.encodedLength;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        const value = this.inner.toU8a().subarray(0, this._rawLength);
        return {
            outer: [
                new Uint8Array(this.inner instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"] ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"].writeLength(value) : ACCOUNT_ID_PREFIX),
                value
            ]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a());
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'Address';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        const encoded = this.inner.toU8a().subarray(0, this._rawLength);
        return isBare ? encoded : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])(this.inner instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"] ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"].writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);
    }
}
}),
"[project]/node_modules/@polkadot/types/generic/MultiAddress.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericMultiAddress",
    ()=>GenericMultiAddress
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Enum.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/address/decode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/AccountId.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/AccountIndex.js [app-ssr] (ecmascript)");
;
;
;
;
;
function decodeU8a(registry, u8a) {
    if ([
        0,
        32
    ].includes(u8a.length)) {
        return {
            Id: u8a
        };
    } else if (u8a.length === 20) {
        return {
            Address20: u8a
        };
    } else if (u8a.length <= 8) {
        return {
            Index: registry.createTypeUnsafe('AccountIndex', [
                u8a
            ]).toNumber()
        };
    }
    return u8a;
}
function decodeMultiAny(registry, value) {
    if (value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountId"]) {
        return {
            Id: value
        };
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value)) {
        // NOTE This is after the AccountId check (which is U8a)
        return decodeU8a(registry, value);
    } else if (value instanceof GenericMultiAddress) {
        return value;
    } else if (value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"] || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBn"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(value)) {
        return {
            Index: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(value) ? value : value.toNumber()
        };
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value)) {
        return decodeU8a(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeAddress"])(value.toString()));
    }
    return value;
}
class GenericMultiAddress extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Enum"] {
    constructor(registry, value){
        super(registry, {
            Id: 'AccountId',
            Index: 'Compact<AccountIndex>',
            Raw: 'Bytes',
            // eslint-disable-next-line sort-keys
            Address32: 'H256',
            // eslint-disable-next-line sort-keys
            Address20: 'H160'
        }, decodeMultiAny(registry, value));
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        const { inner, outer = [] } = this.inner.inspect();
        return {
            inner,
            outer: [
                new Uint8Array([
                    this.index
                ]),
                ...outer
            ]
        };
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return this.value.toString();
    }
}
}),
"[project]/node_modules/@polkadot/types/generic/Vote.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericVote",
    ()=>GenericVote
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__bool__as__Bool$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Bool.js [app-ssr] (ecmascript) <export bool as Bool>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/U8aFixed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$boolean$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/boolean.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
;
;
const AYE_BITS = 0b10000000;
const NAY_BITS = 0b00000000;
const CON_MASK = 0b01111111;
const DEF_CONV = 0b00000000; // the default conviction, None
/** @internal */ function decodeVoteBool(value) {
    return value ? new Uint8Array([
        AYE_BITS | DEF_CONV
    ]) : new Uint8Array([
        NAY_BITS
    ]);
}
/** @internal */ function decodeVoteU8a(value) {
    return value.length ? value.subarray(0, 1) : new Uint8Array([
        NAY_BITS
    ]);
}
/** @internal */ function decodeVoteType(registry, value) {
    return new Uint8Array([
        (new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__bool__as__Bool$3e$__["Bool"](registry, value.aye).isTrue ? AYE_BITS : NAY_BITS) | registry.createTypeUnsafe('Conviction', [
            value.conviction || DEF_CONV
        ]).index
    ]);
}
/** @internal */ function decodeVote(registry, value) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value)) {
        return decodeVoteU8a(value);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(value) || value instanceof Boolean || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$boolean$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBoolean"])(value)) {
        return decodeVoteBool(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__bool__as__Bool$3e$__["Bool"](registry, value).isTrue);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(value)) {
        return decodeVoteBool(value < 0);
    }
    return decodeVoteType(registry, value);
}
class GenericVote extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U8aFixed"] {
    #aye;
    #conviction;
    constructor(registry, value){
        // decoded is just 1 byte
        // Aye: Most Significant Bit
        // Conviction: 0000 - 0101
        const decoded = decodeVote(registry, value);
        super(registry, decoded, 8);
        this.#aye = (decoded[0] & AYE_BITS) === AYE_BITS;
        this.#conviction = this.registry.createTypeUnsafe('Conviction', [
            decoded[0] & CON_MASK
        ]);
    }
    /**
     * @description returns a V2 conviction
     */ get conviction() {
        return this.#conviction;
    }
    /**
     * @description true if the wrapped value is a positive vote
     */ get isAye() {
        return this.#aye;
    }
    /**
     * @description true if the wrapped value is a negative vote
     */ get isNay() {
        return !this.isAye;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExpanded) {
        return {
            conviction: this.conviction.toHuman(isExpanded),
            vote: this.isAye ? 'Aye' : 'Nay'
        };
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive() {
        return {
            aye: this.isAye,
            conviction: this.conviction.toPrimitive()
        };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'Vote';
    }
}
}),
"[project]/node_modules/@polkadot/types/ethereum/index.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([]);
;
;
}),
"[project]/node_modules/@polkadot/types/ethereum/AccountId.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericEthereumAccountId",
    ()=>GenericEthereumAccountId
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/U8aFixed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ethereum$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/ethereum/encode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ethereum$2f$isAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/ethereum/isAddress.js [app-ssr] (ecmascript)");
;
;
;
/** @internal */ function decodeAccountId(value) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || Array.isArray(value)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ethereum$2f$isAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEthereumAddress"])(value.toString())) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(value.toString());
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
    }
    return value;
}
class GenericEthereumAccountId extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U8aFixed"] {
    constructor(registry, value = new Uint8Array()){
        super(registry, decodeAccountId(value), 160);
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return !!other && super.eq(decodeAccountId(other));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.toString();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ethereum$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ethereumEncode"])(this);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'AccountId';
    }
}
}),
"[project]/node_modules/@polkadot/types/ethereum/LookupSource.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ACCOUNT_ID_PREFIX",
    ()=>ACCOUNT_ID_PREFIX,
    "GenericEthereumLookupSource",
    ()=>GenericEthereumLookupSource
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Base$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/abstract/Base.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bigInt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/address/decode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/AccountIndex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$ethereum$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/ethereum/AccountId.js [app-ssr] (ecmascript)");
;
;
;
;
;
const ACCOUNT_ID_PREFIX = new Uint8Array([
    0xff
]);
/** @internal */ function decodeString(registry, value) {
    const decoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeAddress"])(value);
    return decoded.length === 20 ? registry.createTypeUnsafe('EthereumAccountId', [
        decoded
    ]) : registry.createTypeUnsafe('AccountIndex', [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToBn"])(decoded)
    ]);
}
/** @internal */ function decodeU8a(registry, value) {
    // This allows us to instantiate an address with a raw publicKey. Do this first before
    // we checking the first byte, otherwise we may split an already-existent valid address
    if (value.length === 20) {
        return registry.createTypeUnsafe('EthereumAccountId', [
            value
        ]);
    } else if (value[0] === 0xff) {
        return registry.createTypeUnsafe('EthereumAccountId', [
            value.subarray(1)
        ]);
    }
    const [offset, length] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"].readLength(value);
    return registry.createTypeUnsafe('AccountIndex', [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToBn"])(value.subarray(offset, offset + length))
    ]);
}
function decodeAddressOrIndex(registry, value) {
    return value instanceof GenericEthereumLookupSource ? value.inner : value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$ethereum$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEthereumAccountId"] || value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"] ? value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || Array.isArray(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) ? decodeU8a(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value)) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBn"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBigInt"])(value) ? registry.createTypeUnsafe('AccountIndex', [
        value
    ]) : decodeString(registry, value);
}
class GenericEthereumLookupSource extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Base$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractBase"] {
    constructor(registry, value = new Uint8Array()){
        super(registry, decodeAddressOrIndex(registry, value));
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        const rawLength = this._rawLength;
        return rawLength + (// for 1 byte AccountIndexes, we are not adding a specific prefix
        rawLength > 1 ? 1 : 0);
    }
    /**
     * @description The length of the raw value, either AccountIndex or AccountId
     */ get _rawLength() {
        return this.inner instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"] ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"].calcLength(this.inner) : this.inner.encodedLength;
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a());
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'Address';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        const encoded = this.inner.toU8a().subarray(0, this._rawLength);
        return isBare ? encoded : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])(this.inner instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"] ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"].writeLength(encoded) : ACCOUNT_ID_PREFIX, encoded);
    }
}
}),
"[project]/node_modules/@polkadot/types/ethereum/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericEthereumAccountId",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$ethereum$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEthereumAccountId"],
    "GenericEthereumLookupSource",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$ethereum$2f$LookupSource$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEthereumLookupSource"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$ethereum$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/ethereum/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$ethereum$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/ethereum/AccountId.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$ethereum$2f$LookupSource$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/ethereum/LookupSource.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types/generic/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "GenericAccountId",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountId"],
    "GenericAccountId32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountId"],
    "GenericAccountId33",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountId33"],
    "GenericAccountIndex",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"],
    "GenericAddress",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$MultiAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericMultiAddress"],
    "GenericBlock",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$Block$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericBlock"],
    "GenericCall",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$Call$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericCall"],
    "GenericChainProperties",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$ChainProperties$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericChainProperties"],
    "GenericConsensusEngineId",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$ConsensusEngineId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericConsensusEngineId"],
    "GenericEthereumAccountId",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$ethereum$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEthereumAccountId"],
    "GenericEthereumLookupSource",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$ethereum$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEthereumLookupSource"],
    "GenericEvent",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$Event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEvent"],
    "GenericEventData",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$Event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEventData"],
    "GenericLookupSource",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$LookupSource$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericLookupSource"],
    "GenericMultiAddress",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$MultiAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericMultiAddress"],
    "GenericVote",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$Vote$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericVote"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/AccountId.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$AccountIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/AccountIndex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$Block$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/Block.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$Call$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/Call.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$ChainProperties$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/ChainProperties.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$ConsensusEngineId$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/ConsensusEngineId.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$Event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/Event.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$LookupSource$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/LookupSource.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$MultiAddress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/MultiAddress.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$Vote$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/Vote.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$ethereum$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/ethereum/index.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types/primitive/index.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

/**
 * @summary Type definitions that are used in the system
 */ __turbopack_context__.s([]);
;
;
;
}),
"[project]/node_modules/@polkadot/types/primitive/Data.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Data",
    ()=>Data
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Enum.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
;
;
/** @internal */ function decodeDataU8a(registry, value) {
    const indicator = value[0];
    if (!indicator) {
        return [
            undefined,
            undefined
        ];
    } else if (indicator >= 1 && indicator <= 33) {
        const length = indicator - 1;
        const data = value.subarray(1, length + 1);
        // in this case, we are passing a Raw back (since we have no length)
        return [
            registry.createTypeUnsafe('Raw', [
                data
            ]),
            1
        ];
    } else if (indicator >= 34 && indicator <= 37) {
        return [
            value.subarray(1, 32 + 1),
            indicator - 32
        ]; // 34 becomes 2
    }
    throw new Error(`Unable to decode Data, invalid indicator byte ${indicator}`);
}
/** @internal */ function decodeData(registry, value) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value)) {
        return decodeDataU8a(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value));
    } else if (!value) {
        return [
            undefined,
            undefined
        ];
    }
    // assume we have an Enum or an  object input, handle this via the normal Enum decoding
    return [
        value,
        undefined
    ];
}
class Data extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Enum"] {
    constructor(registry, value){
        super(registry, {
            None: 'Null',
            Raw: 'Bytes',
            // eslint-disable-next-line sort-keys
            BlakeTwo256: 'H256',
            Sha256: 'H256',
            // eslint-disable-next-line sort-keys
            Keccak256: 'H256',
            ShaThree256: 'H256' // 5
        }, ...decodeData(registry, value));
        if (this.isRaw && this.asRaw.length > 32) {
            throw new Error('Data.Raw values are limited to a maximum length of 32 bytes');
        }
    }
    get asBlakeTwo256() {
        return this.value;
    }
    get asKeccak256() {
        return this.value;
    }
    get asRaw() {
        return this.value;
    }
    get asSha256() {
        return this.value;
    }
    get asShaThree256() {
        return this.value;
    }
    get isBlakeTwo256() {
        return this.index === 2;
    }
    get isKeccak256() {
        return this.index === 4;
    }
    get isNone() {
        return this.index === 0;
    }
    get isRaw() {
        return this.index === 1;
    }
    get isSha256() {
        return this.index === 3;
    }
    get isShaThree256() {
        return this.index === 5;
    }
    /**
     * @description The encoded length
     */ get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */ toU8a() {
        if (this.index === 0) {
            return new Uint8Array(1);
        } else if (this.index === 1) {
            // don't add the length, just the data
            const data = this.value.toU8a(true);
            const length = Math.min(data.length, 32);
            const u8a = new Uint8Array(length + 1);
            u8a.set([
                length + 1
            ], 0);
            u8a.set(data.subarray(0, length), 1);
            return u8a;
        }
        // otherwise we simply have a hash
        const u8a = new Uint8Array(33);
        u8a.set([
            this.index + 32
        ], 0);
        u8a.set(this.value.toU8a(), 1);
        return u8a;
    }
}
}),
"[project]/node_modules/@polkadot/types/metadata/util/getSiName.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "getSiName",
    ()=>getSiName
]);
function getSiName(lookup, type) {
    const typeDef = lookup.getTypeDef(type);
    return typeDef.lookupName || typeDef.type;
}
}),
"[project]/node_modules/@polkadot/types/util/storage.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "unwrapStorageSi",
    ()=>unwrapStorageSi,
    "unwrapStorageType",
    ()=>unwrapStorageType
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$getSiName$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/util/getSiName.js [app-ssr] (ecmascript)");
;
function unwrapStorageSi(type) {
    return type.isPlain ? type.asPlain : type.asMap.value;
}
function unwrapStorageType(registry, type, isOptional) {
    const outputType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$getSiName$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSiName"])(registry.lookup, unwrapStorageSi(type));
    return isOptional ? `Option<${outputType}>` : outputType;
}
}),
"[project]/node_modules/@polkadot/types/primitive/StorageKey.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "StorageKey",
    ()=>StorageKey
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Bytes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/Bytes.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$getSiName$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/util/getSiName.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$util$2f$storage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/util/storage.js [app-ssr] (ecmascript)");
;
;
;
;
const HASHER_MAP = {
    // opaque
    Blake2_128: [
        16,
        false
    ],
    Blake2_128Concat: [
        16,
        true
    ],
    Blake2_256: [
        32,
        false
    ],
    Identity: [
        0,
        true
    ],
    Twox128: [
        16,
        false
    ],
    Twox256: [
        32,
        false
    ],
    Twox64Concat: [
        8,
        true
    ]
};
/** @internal */ function decodeStorageKey(value) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || !value || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value)) {
        // let Bytes handle these inputs
        return {
            key: value
        };
    } else if (value instanceof StorageKey) {
        return {
            key: value,
            method: value.method,
            section: value.section
        };
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value)) {
        return {
            key: value(),
            method: value.method,
            section: value.section
        };
    } else if (Array.isArray(value)) {
        const [fn, args = []] = value;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(fn)) {
            throw new Error('Expected function input for key construction');
        }
        if (fn.meta && fn.meta.type.isMap) {
            const map = fn.meta.type.asMap;
            if (!Array.isArray(args) || args.length !== map.hashers.length) {
                throw new Error(`Expected an array of ${map.hashers.length} values as params to a Map query`);
            }
        }
        return {
            key: fn(...args),
            method: fn.method,
            section: fn.section
        };
    }
    throw new Error(`Unable to convert input ${value} to StorageKey`);
}
/** @internal */ function decodeHashers(registry, value, hashers) {
    // the storage entry is xxhashAsU8a(prefix, 128) + xxhashAsU8a(method, 128), 256 bits total
    let offset = 32;
    const count = hashers.length;
    const result = new Array(count);
    for(let i = 0; i < count; i++){
        const [hasher, type] = hashers[i];
        const [hashLen, canDecode] = HASHER_MAP[hasher.type];
        const decoded = canDecode ? registry.createTypeUnsafe((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$getSiName$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSiName"])(registry.lookup, type), [
            value.subarray(offset + hashLen)
        ]) : registry.createTypeUnsafe('Raw', [
            value.subarray(offset, offset + hashLen)
        ]);
        offset += hashLen + (canDecode ? decoded.encodedLength : 0);
        result[i] = decoded;
    }
    return result;
}
/** @internal */ function decodeArgsFromMeta(registry, value, meta) {
    if (!meta || !meta.type.isMap) {
        return [];
    }
    const { hashers, key } = meta.type.asMap;
    const keys = hashers.length === 1 ? [
        key
    ] : registry.lookup.getSiType(key).def.asTuple;
    return decodeHashers(registry, value, hashers.map((h, i)=>[
            h,
            keys[i]
        ]));
}
/** @internal */ function getMeta(value) {
    if (value instanceof StorageKey) {
        return value.meta;
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value)) {
        return value.meta;
    } else if (Array.isArray(value)) {
        const [fn] = value;
        return fn.meta;
    }
    return undefined;
}
/** @internal */ function getType(registry, value) {
    if (value instanceof StorageKey) {
        return value.outputType;
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$util$2f$storage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["unwrapStorageType"])(registry, value.meta.type);
    } else if (Array.isArray(value)) {
        const [fn] = value;
        if (fn.meta) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$util$2f$storage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["unwrapStorageType"])(registry, fn.meta.type);
        }
    }
    // If we have no type set, default to Raw
    return 'Raw';
}
class StorageKey extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Bytes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Bytes"] {
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore This is assigned via this.decodeArgsFromMeta()
    #args;
    #meta;
    #outputType;
    #method;
    #section;
    constructor(registry, value, override = {}){
        const { key, method, section } = decodeStorageKey(value);
        super(registry, key);
        this.#outputType = getType(registry, value);
        // decode the args (as applicable based on the key and the hashers, after all init)
        this.setMeta(getMeta(value), override.section || section, override.method || method);
    }
    /**
     * @description Return the decoded arguments (applicable to map with decodable values)
     */ get args() {
        return this.#args;
    }
    /**
     * @description The metadata or `undefined` when not available
     */ get meta() {
        return this.#meta;
    }
    /**
     * @description The key method or `undefined` when not specified
     */ get method() {
        return this.#method;
    }
    /**
     * @description The output type
     */ get outputType() {
        return this.#outputType;
    }
    /**
     * @description The key section or `undefined` when not specified
     */ get section() {
        return this.#section;
    }
    is(key) {
        return key.section === this.section && key.method === this.method;
    }
    /**
     * @description Sets the meta for this key
     */ setMeta(meta, section, method) {
        this.#meta = meta;
        this.#method = method || this.#method;
        this.#section = section || this.#section;
        if (meta) {
            this.#outputType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$util$2f$storage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["unwrapStorageType"])(this.registry, meta.type);
        }
        try {
            this.#args = decodeArgsFromMeta(this.registry, this.toU8a(true), meta);
        } catch  {
        // ignore...
        }
        return this;
    }
    /**
     * @description Returns the Human representation for this type
     */ toHuman(_isExtended, disableAscii) {
        return this.#args.length ? this.#args.map((a)=>a.toHuman(undefined, disableAscii)) : super.toHuman(undefined, disableAscii);
    }
    /**
     * @description Returns the raw type for this
     */ toRawType() {
        return 'StorageKey';
    }
}
}),
"[project]/node_modules/@polkadot/types/primitive/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BitVec",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$BitVec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BitVec"],
    "Bool",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__bool__as__Bool$3e$__["Bool"],
    "Bytes",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Bytes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Bytes"],
    "Data",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$Data$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Data"],
    "F32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__f32__as__F32$3e$__["F32"],
    "F64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__f64__as__F64$3e$__["F64"],
    "I128",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i128__as__I128$3e$__["I128"],
    "I16",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i16__as__I16$3e$__["I16"],
    "I256",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i256__as__I256$3e$__["I256"],
    "I32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i32__as__I32$3e$__["I32"],
    "I64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i64__as__I64$3e$__["I64"],
    "I8",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i8__as__I8$3e$__["I8"],
    "ISize",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$ISize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__isize__as__ISize$3e$__["ISize"],
    "Null",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Null"],
    "OptionBool",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$OptionBool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["OptionBool"],
    "StorageKey",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$StorageKey$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StorageKey"],
    "Text",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Text$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Text"],
    "Type",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Type"],
    "U128",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u128__as__U128$3e$__["U128"],
    "U16",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u16__as__U16$3e$__["U16"],
    "U256",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u256__as__U256$3e$__["U256"],
    "U32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u32__as__U32$3e$__["U32"],
    "U64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__["U64"],
    "U8",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u8__as__U8$3e$__["U8"],
    "USize",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$USize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__usize__as__USize$3e$__["USize"],
    "bool",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bool"],
    "f32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["f32"],
    "f64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["f64"],
    "i128",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i128"],
    "i16",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i16"],
    "i256",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i256"],
    "i32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i32"],
    "i64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i64"],
    "i8",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i8"],
    "isize",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$ISize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isize"],
    "u128",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u128"],
    "u16",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u16"],
    "u256",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u256"],
    "u32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u32"],
    "u64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u64"],
    "u8",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8"],
    "usize",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$USize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["usize"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/primitive/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$BitVec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/BitVec.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__bool__as__Bool$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Bool.js [app-ssr] (ecmascript) <export bool as Bool>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Bool.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Bytes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/Bytes.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__f32__as__F32$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/F32.js [app-ssr] (ecmascript) <export f32 as F32>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/F32.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__f64__as__F64$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/F64.js [app-ssr] (ecmascript) <export f64 as F64>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/F64.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i8__as__I8$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I8.js [app-ssr] (ecmascript) <export i8 as I8>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I8.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i16__as__I16$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I16.js [app-ssr] (ecmascript) <export i16 as I16>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I16.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i32__as__I32$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I32.js [app-ssr] (ecmascript) <export i32 as I32>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I32.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i64__as__I64$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I64.js [app-ssr] (ecmascript) <export i64 as I64>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I64.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i128__as__I128$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I128.js [app-ssr] (ecmascript) <export i128 as I128>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I128.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__i256__as__I256$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I256.js [app-ssr] (ecmascript) <export i256 as I256>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I256.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$ISize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__isize__as__ISize$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/ISize.js [app-ssr] (ecmascript) <export isize as ISize>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$ISize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/ISize.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Null.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$OptionBool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/OptionBool.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Text$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Text.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/Type.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u8__as__U8$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U8.js [app-ssr] (ecmascript) <export u8 as U8>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U8.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u16__as__U16$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U16.js [app-ssr] (ecmascript) <export u16 as U16>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U16.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u32__as__U32$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U32.js [app-ssr] (ecmascript) <export u32 as U32>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U32.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u64__as__U64$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U64.js [app-ssr] (ecmascript) <export u64 as U64>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U64.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u128__as__U128$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U128.js [app-ssr] (ecmascript) <export u128 as U128>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U128.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__u256__as__U256$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U256.js [app-ssr] (ecmascript) <export u256 as U256>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U256.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$USize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__usize__as__USize$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/USize.js [app-ssr] (ecmascript) <export usize as USize>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$USize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/USize.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$Data$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/primitive/Data.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$StorageKey$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/primitive/StorageKey.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types/index.types.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BitVec",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BitVec"],
    "Bool",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Bool"],
    "Bytes",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Bytes"],
    "Data",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Data"],
    "F32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["F32"],
    "F64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["F64"],
    "GeneralExtrinsic",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GeneralExtrinsic"],
    "GenericAccountId",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountId"],
    "GenericAccountId32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountId32"],
    "GenericAccountId33",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountId33"],
    "GenericAccountIndex",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAccountIndex"],
    "GenericAddress",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericAddress"],
    "GenericBlock",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericBlock"],
    "GenericCall",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericCall"],
    "GenericChainProperties",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericChainProperties"],
    "GenericConsensusEngineId",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericConsensusEngineId"],
    "GenericEthereumAccountId",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEthereumAccountId"],
    "GenericEthereumLookupSource",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEthereumLookupSource"],
    "GenericEvent",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEvent"],
    "GenericEventData",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEventData"],
    "GenericExtrinsic",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsic"],
    "GenericExtrinsicEra",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicEra"],
    "GenericExtrinsicPayload",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayload"],
    "GenericExtrinsicPayloadUnknown",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayloadUnknown"],
    "GenericExtrinsicPayloadV4",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayloadV4"],
    "GenericExtrinsicPayloadV5",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicPayloadV5"],
    "GenericExtrinsicSignatureV4",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicSignatureV4"],
    "GenericExtrinsicSignatureV5",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicSignatureV5"],
    "GenericExtrinsicUnknown",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicUnknown"],
    "GenericExtrinsicV4",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicV4"],
    "GenericExtrinsicV5",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericExtrinsicV5"],
    "GenericImmortalEra",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericImmortalEra"],
    "GenericLookupSource",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericLookupSource"],
    "GenericMortalEra",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericMortalEra"],
    "GenericMultiAddress",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericMultiAddress"],
    "GenericSignerPayload",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericSignerPayload"],
    "GenericVote",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericVote"],
    "I128",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["I128"],
    "I16",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["I16"],
    "I256",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["I256"],
    "I32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["I32"],
    "I64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["I64"],
    "I8",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["I8"],
    "ISize",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ISize"],
    "Null",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Null"],
    "OptionBool",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["OptionBool"],
    "StorageKey",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StorageKey"],
    "Text",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Text"],
    "Type",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Type"],
    "U128",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U128"],
    "U16",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U16"],
    "U256",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U256"],
    "U32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U32"],
    "U64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U64"],
    "U8",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U8"],
    "USize",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["USize"],
    "bool",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bool"],
    "f32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["f32"],
    "f64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["f64"],
    "i128",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i128"],
    "i16",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i16"],
    "i256",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i256"],
    "i32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i32"],
    "i64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i64"],
    "i8",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i8"],
    "isize",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isize"],
    "u128",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u128"],
    "u16",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u16"],
    "u256",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u256"],
    "u32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u32"],
    "u64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u64"],
    "u8",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8"],
    "usize",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["usize"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$index$2e$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/index.types.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$primitive$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/primitive/index.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types/interfaces/definitions.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([]);
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
}),
"[project]/node_modules/@polkadot/types/interfaces/essentials.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([]);
;
;
;
}),
"[project]/node_modules/@polkadot/types/interfaces/metadata/hashers.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/* eslint-disable sort-keys */ __turbopack_context__.s([
    "AllHashers",
    ()=>AllHashers
]);
const AllHashers = {
    Blake2_128: null,
    Blake2_256: null,
    Blake2_128Concat: null,
    Twox128: null,
    Twox256: null,
    Twox64Concat: null,
    // new in v11
    Identity: null
};
}),
"[project]/node_modules/@polkadot/types/interfaces/metadata/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const META_V1_TO_V2 = {
    metadata: {
        description: 'Returns the metadata of a runtime',
        params: [],
        type: 'OpaqueMetadata'
    }
};
const runtime = {
    Metadata: [
        {
            methods: {
                metadata_at_version: {
                    description: 'Returns the metadata at a given version.',
                    params: [
                        {
                            name: 'version',
                            type: 'u32'
                        }
                    ],
                    type: 'Option<OpaqueMetadata>'
                },
                metadata_versions: {
                    description: 'Returns the supported metadata versions.',
                    params: [],
                    type: 'Vec<u32>'
                },
                ...META_V1_TO_V2
            },
            version: 2
        },
        {
            methods: {
                ...META_V1_TO_V2
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/metadata/v9.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v9",
    ()=>v9
]);
const v9 = {
    // v9
    ErrorMetadataV9: {
        name: 'Text',
        docs: 'Vec<Text>'
    },
    EventMetadataV9: {
        name: 'Text',
        args: 'Vec<Type>',
        docs: 'Vec<Text>'
    },
    FunctionArgumentMetadataV9: {
        name: 'Text',
        type: 'Type'
    },
    FunctionMetadataV9: {
        name: 'Text',
        args: 'Vec<FunctionArgumentMetadataV9>',
        docs: 'Vec<Text>'
    },
    MetadataV9: {
        modules: 'Vec<ModuleMetadataV9>'
    },
    ModuleConstantMetadataV9: {
        name: 'Text',
        type: 'Type',
        value: 'Bytes',
        docs: 'Vec<Text>'
    },
    ModuleMetadataV9: {
        name: 'Text',
        storage: 'Option<StorageMetadataV9>',
        calls: 'Option<Vec<FunctionMetadataV9>>',
        events: 'Option<Vec<EventMetadataV9>>',
        constants: 'Vec<ModuleConstantMetadataV9>',
        errors: 'Vec<ErrorMetadataV9>'
    },
    StorageEntryMetadataV9: {
        name: 'Text',
        modifier: 'StorageEntryModifierV9',
        type: 'StorageEntryTypeV9',
        fallback: 'Bytes',
        docs: 'Vec<Text>'
    },
    StorageEntryModifierV9: {
        _enum: [
            'Optional',
            'Default',
            'Required'
        ]
    },
    StorageEntryTypeV9: {
        _enum: {
            Plain: 'Type',
            Map: {
                hasher: 'StorageHasherV9',
                key: 'Type',
                value: 'Type',
                linked: 'bool'
            },
            DoubleMap: {
                hasher: 'StorageHasherV9',
                key1: 'Type',
                key2: 'Type',
                value: 'Type',
                key2Hasher: 'StorageHasherV9'
            }
        }
    },
    StorageHasherV9: {
        _enum: {
            Blake2_128: null,
            Blake2_256: null,
            Twox128: null,
            Twox256: null,
            Twox64Concat: null
        }
    },
    StorageMetadataV9: {
        prefix: 'Text',
        items: 'Vec<StorageEntryMetadataV9>'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/metadata/v10.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v10",
    ()=>v10
]);
const v10 = {
    // v10
    ErrorMetadataV10: 'ErrorMetadataV9',
    EventMetadataV10: 'EventMetadataV9',
    FunctionArgumentMetadataV10: 'FunctionArgumentMetadataV9',
    FunctionMetadataV10: 'FunctionMetadataV9',
    MetadataV10: {
        modules: 'Vec<ModuleMetadataV10>'
    },
    ModuleConstantMetadataV10: 'ModuleConstantMetadataV9',
    ModuleMetadataV10: {
        name: 'Text',
        storage: 'Option<StorageMetadataV10>',
        calls: 'Option<Vec<FunctionMetadataV10>>',
        events: 'Option<Vec<EventMetadataV10>>',
        constants: 'Vec<ModuleConstantMetadataV10>',
        errors: 'Vec<ErrorMetadataV10>'
    },
    StorageEntryModifierV10: 'StorageEntryModifierV9',
    StorageEntryMetadataV10: {
        name: 'Text',
        modifier: 'StorageEntryModifierV10',
        type: 'StorageEntryTypeV10',
        fallback: 'Bytes',
        docs: 'Vec<Text>'
    },
    StorageEntryTypeV10: {
        _enum: {
            Plain: 'Type',
            Map: {
                hasher: 'StorageHasherV10',
                key: 'Type',
                value: 'Type',
                linked: 'bool'
            },
            DoubleMap: {
                hasher: 'StorageHasherV10',
                key1: 'Type',
                key2: 'Type',
                value: 'Type',
                key2Hasher: 'StorageHasherV10'
            }
        }
    },
    StorageMetadataV10: {
        prefix: 'Text',
        items: 'Vec<StorageEntryMetadataV10>'
    },
    StorageHasherV10: {
        _enum: {
            Blake2_128: null,
            Blake2_256: null,
            Blake2_128Concat: null,
            Twox128: null,
            Twox256: null,
            Twox64Concat: null
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/metadata/v11.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v11",
    ()=>v11
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$hashers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/hashers.js [app-ssr] (ecmascript)");
;
const v11 = {
    // v11
    ErrorMetadataV11: 'ErrorMetadataV10',
    EventMetadataV11: 'EventMetadataV10',
    ExtrinsicMetadataV11: {
        version: 'u8',
        signedExtensions: 'Vec<Text>'
    },
    FunctionArgumentMetadataV11: 'FunctionArgumentMetadataV10',
    FunctionMetadataV11: 'FunctionMetadataV10',
    MetadataV11: {
        modules: 'Vec<ModuleMetadataV11>',
        extrinsic: 'ExtrinsicMetadataV11'
    },
    ModuleConstantMetadataV11: 'ModuleConstantMetadataV10',
    ModuleMetadataV11: {
        name: 'Text',
        storage: 'Option<StorageMetadataV11>',
        calls: 'Option<Vec<FunctionMetadataV11>>',
        events: 'Option<Vec<EventMetadataV11>>',
        constants: 'Vec<ModuleConstantMetadataV11>',
        errors: 'Vec<ErrorMetadataV11>'
    },
    StorageEntryModifierV11: 'StorageEntryModifierV10',
    StorageEntryMetadataV11: {
        name: 'Text',
        modifier: 'StorageEntryModifierV11',
        type: 'StorageEntryTypeV11',
        fallback: 'Bytes',
        docs: 'Vec<Text>'
    },
    StorageEntryTypeV11: {
        _enum: {
            Plain: 'Type',
            Map: {
                hasher: 'StorageHasherV11',
                key: 'Type',
                value: 'Type',
                linked: 'bool'
            },
            DoubleMap: {
                hasher: 'StorageHasherV11',
                key1: 'Type',
                key2: 'Type',
                value: 'Type',
                key2Hasher: 'StorageHasherV11'
            }
        }
    },
    StorageMetadataV11: {
        prefix: 'Text',
        items: 'Vec<StorageEntryMetadataV11>'
    },
    StorageHasherV11: {
        _enum: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$hashers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AllHashers"]
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/metadata/v12.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v12",
    ()=>v12
]);
const v12 = {
    // v12
    ErrorMetadataV12: 'ErrorMetadataV11',
    EventMetadataV12: 'EventMetadataV11',
    ExtrinsicMetadataV12: 'ExtrinsicMetadataV11',
    FunctionArgumentMetadataV12: 'FunctionArgumentMetadataV11',
    FunctionMetadataV12: 'FunctionMetadataV11',
    MetadataV12: {
        modules: 'Vec<ModuleMetadataV12>',
        extrinsic: 'ExtrinsicMetadataV12'
    },
    ModuleConstantMetadataV12: 'ModuleConstantMetadataV11',
    ModuleMetadataV12: {
        name: 'Text',
        storage: 'Option<StorageMetadataV12>',
        calls: 'Option<Vec<FunctionMetadataV12>>',
        events: 'Option<Vec<EventMetadataV12>>',
        constants: 'Vec<ModuleConstantMetadataV12>',
        errors: 'Vec<ErrorMetadataV12>',
        index: 'u8'
    },
    StorageEntryModifierV12: 'StorageEntryModifierV11',
    StorageEntryMetadataV12: 'StorageEntryMetadataV11',
    StorageEntryTypeV12: 'StorageEntryTypeV11',
    StorageMetadataV12: 'StorageMetadataV11',
    StorageHasherV12: 'StorageHasherV11'
};
}),
"[project]/node_modules/@polkadot/types/interfaces/metadata/v13.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v13",
    ()=>v13
]);
const v13 = {
    // v13
    ErrorMetadataV13: 'ErrorMetadataV12',
    EventMetadataV13: 'EventMetadataV12',
    ExtrinsicMetadataV13: 'ExtrinsicMetadataV12',
    FunctionArgumentMetadataV13: 'FunctionArgumentMetadataV12',
    FunctionMetadataV13: 'FunctionMetadataV12',
    MetadataV13: {
        modules: 'Vec<ModuleMetadataV13>',
        extrinsic: 'ExtrinsicMetadataV13'
    },
    ModuleConstantMetadataV13: 'ModuleConstantMetadataV12',
    ModuleMetadataV13: {
        name: 'Text',
        storage: 'Option<StorageMetadataV13>',
        calls: 'Option<Vec<FunctionMetadataV13>>',
        events: 'Option<Vec<EventMetadataV13>>',
        constants: 'Vec<ModuleConstantMetadataV13>',
        errors: 'Vec<ErrorMetadataV13>',
        index: 'u8'
    },
    StorageEntryModifierV13: 'StorageEntryModifierV12',
    StorageEntryMetadataV13: {
        name: 'Text',
        modifier: 'StorageEntryModifierV13',
        type: 'StorageEntryTypeV13',
        fallback: 'Bytes',
        docs: 'Vec<Text>'
    },
    StorageEntryTypeV13: {
        _enum: {
            Plain: 'Type',
            Map: {
                hasher: 'StorageHasherV13',
                key: 'Type',
                value: 'Type',
                linked: 'bool'
            },
            DoubleMap: {
                hasher: 'StorageHasherV13',
                key1: 'Type',
                key2: 'Type',
                value: 'Type',
                key2Hasher: 'StorageHasherV13'
            },
            NMap: {
                keyVec: 'Vec<Type>',
                hashers: 'Vec<StorageHasherV13>',
                value: 'Type'
            }
        }
    },
    StorageMetadataV13: {
        prefix: 'Text',
        items: 'Vec<StorageEntryMetadataV13>'
    },
    StorageHasherV13: 'StorageHasherV12'
};
}),
"[project]/node_modules/@polkadot/types/interfaces/scaleInfo/v1.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/* eslint-disable sort-keys */ __turbopack_context__.s([
    "Si1Variant",
    ()=>Si1Variant,
    "v1",
    ()=>v1
]);
const Si1Variant = {
    name: 'Text',
    fields: 'Vec<Si1Field>',
    index: 'u8',
    docs: 'Vec<Text>'
};
const v1 = {
    Si1Field: {
        name: 'Option<Text>',
        type: 'Si1LookupTypeId',
        typeName: 'Option<Text>',
        docs: 'Vec<Text>'
    },
    Si1LookupTypeId: 'Compact<u32>',
    Si1Path: 'Si0Path',
    Si1Type: {
        path: 'Si1Path',
        params: 'Vec<Si1TypeParameter>',
        def: 'Si1TypeDef',
        docs: 'Vec<Text>'
    },
    Si1TypeDef: {
        _enum: {
            Composite: 'Si1TypeDefComposite',
            Variant: 'Si1TypeDefVariant',
            Sequence: 'Si1TypeDefSequence',
            Array: 'Si1TypeDefArray',
            Tuple: 'Si1TypeDefTuple',
            Primitive: 'Si1TypeDefPrimitive',
            Compact: 'Si1TypeDefCompact',
            BitSequence: 'Si1TypeDefBitSequence',
            // NOTE: This is specific to the implementation for pre-v14 metadata
            // compatibility (always keep this as the last entry in the enum)
            HistoricMetaCompat: 'Type'
        }
    },
    Si1TypeDefArray: {
        len: 'u32',
        type: 'Si1LookupTypeId'
    },
    Si1TypeDefBitSequence: {
        bitStoreType: 'Si1LookupTypeId',
        bitOrderType: 'Si1LookupTypeId'
    },
    Si1TypeDefCompact: {
        type: 'Si1LookupTypeId'
    },
    Si1TypeDefComposite: {
        fields: 'Vec<Si1Field>'
    },
    Si1TypeDefPrimitive: 'Si0TypeDefPrimitive',
    Si1TypeDefSequence: {
        type: 'Si1LookupTypeId'
    },
    Si1TypeDefTuple: 'Vec<Si1LookupTypeId>',
    Si1TypeParameter: {
        name: 'Text',
        type: 'Option<Si1LookupTypeId>'
    },
    Si1TypeDefVariant: {
        variants: 'Vec<Si1Variant>'
    },
    Si1Variant
};
}),
"[project]/node_modules/@polkadot/types/interfaces/metadata/v14.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v14",
    ()=>v14
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scaleInfo$2f$v1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/scaleInfo/v1.js [app-ssr] (ecmascript)");
;
const v14 = {
    // registry
    PortableTypeV14: {
        id: 'Si1LookupTypeId',
        type: 'Si1Type'
    },
    // compatibility with earlier layouts, i.e. don't break previous users
    ErrorMetadataV14: {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scaleInfo$2f$v1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Si1Variant"],
        args: 'Vec<Type>'
    },
    EventMetadataV14: {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scaleInfo$2f$v1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Si1Variant"],
        args: 'Vec<Type>'
    },
    FunctionArgumentMetadataV14: {
        name: 'Text',
        type: 'Type',
        typeName: 'Option<Type>'
    },
    FunctionMetadataV14: {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scaleInfo$2f$v1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Si1Variant"],
        args: 'Vec<FunctionArgumentMetadataV14>'
    },
    // V14
    ExtrinsicMetadataV14: {
        type: 'SiLookupTypeId',
        version: 'u8',
        signedExtensions: 'Vec<SignedExtensionMetadataV14>'
    },
    MetadataV14: {
        lookup: 'PortableRegistry',
        pallets: 'Vec<PalletMetadataV14>',
        extrinsic: 'ExtrinsicMetadataV14',
        type: 'SiLookupTypeId'
    },
    PalletCallMetadataV14: {
        type: 'SiLookupTypeId'
    },
    PalletConstantMetadataV14: {
        name: 'Text',
        type: 'SiLookupTypeId',
        value: 'Bytes',
        docs: 'Vec<Text>'
    },
    PalletErrorMetadataV14: {
        type: 'SiLookupTypeId'
    },
    PalletEventMetadataV14: {
        type: 'SiLookupTypeId'
    },
    PalletMetadataV14: {
        name: 'Text',
        storage: 'Option<PalletStorageMetadataV14>',
        calls: 'Option<PalletCallMetadataV14>',
        events: 'Option<PalletEventMetadataV14>',
        constants: 'Vec<PalletConstantMetadataV14>',
        errors: 'Option<PalletErrorMetadataV14>',
        index: 'u8'
    },
    PalletStorageMetadataV14: {
        prefix: 'Text',
        // NOTE: Renamed from entries
        items: 'Vec<StorageEntryMetadataV14>'
    },
    SignedExtensionMetadataV14: {
        identifier: 'Text',
        type: 'SiLookupTypeId',
        additionalSigned: 'SiLookupTypeId'
    },
    StorageEntryMetadataV14: {
        name: 'Text',
        modifier: 'StorageEntryModifierV14',
        type: 'StorageEntryTypeV14',
        fallback: 'Bytes',
        docs: 'Vec<Text>'
    },
    StorageEntryModifierV14: 'StorageEntryModifierV13',
    StorageEntryTypeV14: {
        _enum: {
            Plain: 'SiLookupTypeId',
            Map: {
                hashers: 'Vec<StorageHasherV14>',
                key: 'SiLookupTypeId',
                value: 'SiLookupTypeId'
            }
        }
    },
    StorageHasherV14: 'StorageHasherV13'
};
}),
"[project]/node_modules/@polkadot/types/interfaces/metadata/v15.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v15",
    ()=>v15
]);
const v15 = {
    // new/adjusted in v15
    CustomMetadata15: {
        map: 'BTreeMap<Text, CustomValueMetadata15>'
    },
    CustomValueMetadata15: {
        type: 'SiLookupTypeId',
        value: 'Bytes'
    },
    ExtrinsicMetadataV15: {
        version: 'u8',
        addressType: 'SiLookupTypeId',
        callType: 'SiLookupTypeId',
        signatureType: 'SiLookupTypeId',
        extraType: 'SiLookupTypeId',
        signedExtensions: 'Vec<SignedExtensionMetadataV14>'
    },
    OuterEnums15: {
        callType: 'SiLookupTypeId',
        eventType: 'SiLookupTypeId',
        errorType: 'SiLookupTypeId'
    },
    PalletMetadataV15: {
        name: 'Text',
        storage: 'Option<PalletStorageMetadataV14>',
        calls: 'Option<PalletCallMetadataV14>',
        events: 'Option<PalletEventMetadataV14>',
        constants: 'Vec<PalletConstantMetadataV14>',
        errors: 'Option<PalletErrorMetadataV14>',
        index: 'u8',
        docs: 'Vec<Text>'
    },
    RuntimeApiMetadataV15: {
        name: 'Text',
        methods: 'Vec<RuntimeApiMethodMetadataV15>',
        docs: 'Vec<Text>'
    },
    RuntimeApiMethodMetadataV15: {
        name: 'Text',
        inputs: 'Vec<RuntimeApiMethodParamMetadataV15>',
        output: 'SiLookupTypeId',
        docs: 'Vec<Text>'
    },
    RuntimeApiMethodParamMetadataV15: {
        name: 'Text',
        type: 'SiLookupTypeId'
    },
    // actual v15 definition
    MetadataV15: {
        lookup: 'PortableRegistry',
        pallets: 'Vec<PalletMetadataV15>',
        extrinsic: 'ExtrinsicMetadataV15',
        type: 'SiLookupTypeId',
        apis: 'Vec<RuntimeApiMetadataV15>',
        outerEnums: 'OuterEnums15',
        custom: 'CustomMetadata15'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/metadata/v16.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v16",
    ()=>v16
]);
const v16 = {
    // actual v16 definition
    MetadataV16: {
        lookup: 'PortableRegistry',
        pallets: 'Vec<PalletMetadataV16>',
        extrinsic: 'ExtrinsicMetadataV16',
        apis: 'Vec<RuntimeApiMetadataV16>',
        outerEnums: 'OuterEnums15',
        custom: 'CustomMetadata15'
    },
    // ---- Pallet definitions ----
    PalletMetadataV16: {
        name: 'Text',
        storage: 'Option<PalletStorageMetadataV16>',
        calls: 'Option<PalletCallMetadataV16>',
        events: 'Option<PalletEventMetadataV16>',
        constants: 'Vec<PalletConstantMetadataV16>',
        errors: 'Option<PalletErrorMetadataV16>',
        associatedTypes: 'Vec<PalletAssociatedTypeMetadataV16>',
        viewFunctions: 'Vec<PalletViewFunctionMetadataV16>',
        index: 'u8',
        docs: 'Vec<Text>',
        // Deprecation info
        deprecationInfo: 'ItemDeprecationInfoV16'
    },
    PalletStorageMetadataV16: {
        prefix: 'Text',
        items: 'Vec<StorageEntryMetadataV16>'
    },
    StorageEntryMetadataV16: {
        name: 'Text',
        modifier: 'StorageEntryModifierV14',
        type: 'StorageEntryTypeV14',
        fallback: 'Bytes',
        docs: 'Vec<Text>',
        deprecationInfo: 'ItemDeprecationInfoV16'
    },
    ItemDeprecationInfoV16: {
        _enum: {
            // Item is not deprecated.
            NotDeprecated: 'Null',
            // Item is fully deprecated without a note.
            DeprecatedWithoutNote: 'Null',
            // Item is fully deprecated with a note and an optional `since` field.
            Deprecated: {
                // Note explaining the deprecation
                note: 'Text',
                // Optional value for noting the version when the deprecation occurred.
                since: 'Option<Text>'
            }
        }
    },
    PalletCallMetadataV16: {
        type: 'SiLookupTypeId',
        // Deprecation status of the pallet call
        deprecationInfo: 'EnumDeprecationInfoV16'
    },
    // Deprecation information for enums in which specific variants can be deprecated.
    // If the map is empty, then nothing is deprecated.
    EnumDeprecationInfoV16: 'BTreeMap<u8, VariantDeprecationInfoV16>',
    VariantDeprecationInfoV16: {
        _enum: {
            // Dummy variant, just here to force DeprecatedWithoutNote
            // to have index 1 and Deprecated to have index 2
            DummyVariant: 'Null',
            // Variant is deprecated without a note.
            DeprecatedWithoutNote: 'Null',
            // Variant is deprecated with a note and an optional `since` field.
            Deprecated: {
                // Note explaining the deprecation
                note: 'Text',
                // Optional value for noting the version when the deprecation occurred.
                since: 'Option<Text>'
            }
        }
    },
    PalletEventMetadataV16: {
        type: 'SiLookupTypeId',
        // Deprecation info
        deprecationInfo: 'EnumDeprecationInfoV16'
    },
    PalletConstantMetadataV16: {
        name: 'Text',
        type: 'SiLookupTypeId',
        value: 'Bytes',
        docs: 'Vec<Text>',
        // Deprecation info
        deprecationInfo: 'ItemDeprecationInfoV16'
    },
    PalletErrorMetadataV16: {
        type: 'SiLookupTypeId',
        // Deprecation info
        deprecationInfo: 'EnumDeprecationInfoV16'
    },
    PalletAssociatedTypeMetadataV16: {
        name: 'Text',
        type: 'SiLookupTypeId',
        docs: 'Vec<Text>'
    },
    PalletViewFunctionMetadataV16: {
        id: '[u8; 32]',
        // Method name.
        name: 'Text',
        // Method par  ameters.
        inputs: 'Vec<RuntimeApiMethodParamMetadataV15>',
        // Method output.
        output: 'SiLookupTypeId',
        // Method documentation.
        docs: 'Vec<T::String>',
        // Deprecation info
        deprecationInfo: 'ItemDeprecationInfoV16'
    },
    // ---- Extrinsic definitions ----
    ExtrinsicMetadataV16: {
        // Extrinsic versions supported by the runtime.
        versions: 'Vec<u8>',
        // The type of the address that signs the extrinsic
        addressType: 'SiLookupTypeId',
        // The type of the outermost Call enum.
        callType: 'SiLookupTypeId',
        // The type of the extrinsic's signature.
        signatureType: 'SiLookupTypeId',
        // A mapping of supported transaction extrinsic versions to their respective transaction extension indexes.
        //
        // For each supported version number, list the indexes, in order, of the extensions used.
        transactionExtensionsByVersion: 'BTreeMap<u8, Vec<Compact<u32>>>',
        // The transaction extensions in the order they appear in the extrinsic.
        transactionExtensions: 'Vec<TransactionExtensionMetadataV16>'
    },
    TransactionExtensionMetadataV16: {
        // The unique transaction extension identifier, which may be different from the type name.
        identifier: 'Text',
        // The type of the transaction extension, with the data to be included in the extrinsic.
        type: 'SiLookupTypeId',
        // The type of the implicit data, with the data to be included in the signed payload.
        implicit: 'SiLookupTypeId'
    },
    // ---- Runtime Api definitions ----
    RuntimeApiMetadataV16: {
        name: 'Text',
        methods: 'Vec<RuntimeApiMethodMetadataV16>',
        docs: 'Vec<Text>',
        // Runtime API version.
        version: 'Compact<u32>',
        // Deprecation info
        deprecationInfo: 'ItemDeprecationInfoV16'
    },
    RuntimeApiMethodMetadataV16: {
        name: 'Text',
        inputs: 'Vec<RuntimeApiMethodParamMetadataV15>',
        output: 'SiLookupTypeId',
        docs: 'Vec<Text>',
        // Deprecation info
        deprecationInfo: 'ItemDeprecationInfoV16'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/metadata/definitions.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$hashers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/hashers.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v9$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/v9.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v10$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/v10.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v11$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/v11.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v12$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/v12.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v13$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/v13.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v14$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/v14.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v15$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/v15.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/v16.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        // all known
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v9$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v9"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v10$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v10"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v11$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v11"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v12$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v12"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v13$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v13"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v14$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v14"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v15$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v15"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$v16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v16"],
        // latest mappings
        // NOTE: For v15, we only added the runtime defintions,
        // hence latest for most pointing to the previous V14
        ErrorMetadataLatest: 'ErrorMetadataV14',
        EventMetadataLatest: 'EventMetadataV14',
        ExtrinsicMetadataLatest: 'ExtrinsicMetadataV16',
        FunctionArgumentMetadataLatest: 'FunctionArgumentMetadataV14',
        FunctionMetadataLatest: 'FunctionMetadataV14',
        MetadataLatest: 'MetadataV16',
        PalletCallMetadataLatest: 'PalletCallMetadataV16',
        PalletConstantMetadataLatest: 'PalletConstantMetadataV16',
        PalletErrorMetadataLatest: 'PalletErrorMetadataV16',
        PalletEventMetadataLatest: 'PalletEventMetadataV16',
        PalletMetadataLatest: 'PalletMetadataV16',
        PalletStorageMetadataLatest: 'PalletStorageMetadataV16',
        PortableType: 'PortableTypeV14',
        RuntimeApiMetadataLatest: 'RuntimeApiMetadataV16',
        SignedExtensionMetadataLatest: 'SignedExtensionMetadataV14',
        TransactionExtensionMetadataLatest: 'TransactionExtensionMetadataV16',
        StorageEntryMetadataLatest: 'StorageEntryMetadataV16',
        StorageEntryModifierLatest: 'StorageEntryModifierV14',
        StorageEntryTypeLatest: 'StorageEntryTypeV14',
        StorageHasher: 'StorageHasherV14',
        // additional types
        OpaqueMetadata: 'Opaque<Bytes>',
        // the enum containing all the mappings
        MetadataAll: {
            _enum: {
                V0: 'DoNotConstruct<MetadataV0>',
                V1: 'DoNotConstruct<MetadataV1>',
                V2: 'DoNotConstruct<MetadataV2>',
                V3: 'DoNotConstruct<MetadataV3>',
                V4: 'DoNotConstruct<MetadataV4>',
                V5: 'DoNotConstruct<MetadataV5>',
                V6: 'DoNotConstruct<MetadataV6>',
                V7: 'DoNotConstruct<MetadataV7>',
                V8: 'DoNotConstruct<MetadataV8>',
                // First version on Kusama in V9, dropping will be problematic
                V9: 'MetadataV9',
                V10: 'MetadataV10',
                V11: 'MetadataV11',
                V12: 'MetadataV12',
                V13: 'MetadataV13',
                V14: 'MetadataV14',
                V15: 'MetadataV15',
                V16: 'MetadataV16'
            }
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/scaleInfo/v0.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/* eslint-disable sort-keys */ __turbopack_context__.s([
    "v0",
    ()=>v0
]);
const v0 = {
    Si0Field: {
        name: 'Option<Text>',
        type: 'Si0LookupTypeId',
        typeName: 'Option<Text>',
        docs: 'Vec<Text>'
    },
    Si0LookupTypeId: 'u32',
    Si0Path: 'Vec<Text>',
    Si0Type: {
        path: 'Si0Path',
        params: 'Vec<Si0LookupTypeId>',
        def: 'Si0TypeDef'
    },
    Si0TypeDef: {
        _enum: {
            Composite: 'Si0TypeDefComposite',
            Variant: 'Si0TypeDefVariant',
            Sequence: 'Si0TypeDefSequence',
            Array: 'Si0TypeDefArray',
            Tuple: 'Si0TypeDefTuple',
            Primitive: 'Si0TypeDefPrimitive',
            Compact: 'Si0TypeDefCompact',
            Phantom: 'Si0TypeDefPhantom',
            BitSequence: 'Si0TypeDefBitSequence'
        }
    },
    Si0TypeDefArray: {
        len: 'u32',
        type: 'Si0LookupTypeId'
    },
    Si0TypeDefBitSequence: {
        bitStoreType: 'Si0LookupTypeId',
        bitOrderType: 'Si0LookupTypeId'
    },
    Si0TypeDefCompact: {
        type: 'Si0LookupTypeId'
    },
    Si0TypeDefComposite: {
        fields: 'Vec<Si0Field>'
    },
    Si0TypeDefPhantom: 'Null',
    Si0TypeDefVariant: {
        variants: 'Vec<Si0Variant>'
    },
    Si0TypeDefPrimitive: {
        _enum: [
            'Bool',
            'Char',
            'Str',
            'U8',
            'U16',
            'U32',
            'U64',
            'U128',
            'U256',
            'I8',
            'I16',
            'I32',
            'I64',
            'I128',
            'I256'
        ]
    },
    Si0TypeDefSequence: {
        type: 'Si0LookupTypeId'
    },
    Si0TypeDefTuple: 'Vec<Si0LookupTypeId>',
    Si0TypeParameter: {
        name: 'Text',
        type: 'Option<Si0LookupTypeId>'
    },
    Si0Variant: {
        name: 'Text',
        fields: 'Vec<Si0Field>',
        index: 'Option<u8>',
        discriminant: 'Option<u64>',
        docs: 'Vec<Text>'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/scaleInfo/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scaleInfo$2f$v0$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/scaleInfo/v0.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scaleInfo$2f$v1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/scaleInfo/v1.js [app-ssr] (ecmascript)");
;
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scaleInfo$2f$v0$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v0"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scaleInfo$2f$v1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v1"],
        // latest mappings
        SiField: 'Si1Field',
        SiLookupTypeId: 'Si1LookupTypeId',
        SiPath: 'Si1Path',
        SiType: 'Si1Type',
        SiTypeDef: 'Si1TypeDef',
        SiTypeDefArray: 'Si1TypeDefArray',
        SiTypeDefBitSequence: 'Si1TypeDefBitSequence',
        SiTypeDefCompact: 'Si1TypeDefCompact',
        SiTypeDefComposite: 'Si1TypeDefComposite',
        SiTypeDefPrimitive: 'Si1TypeDefPrimitive',
        SiTypeDefSequence: 'Si1TypeDefSequence',
        SiTypeDefTuple: 'Si1TypeDefTuple',
        SiTypeParameter: 'Si1TypeParameter',
        SiTypeDefVariant: 'Si1TypeDefVariant',
        SiVariant: 'Si1Variant'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/essentials.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "metadata",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["default"],
    "runtime",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$runtime$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "scaleInfo",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scaleInfo$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$essentials$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/essentials.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$metadata$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/metadata/definitions.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$runtime$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/runtime/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scaleInfo$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/scaleInfo/definitions.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types/interfaces/assetConversion/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    AssetConversionApi: [
        {
            methods: {
                get_reserves: {
                    description: 'Get pool reserves',
                    params: [
                        {
                            name: 'asset1',
                            type: 'StagingXcmV3MultiLocation'
                        },
                        {
                            name: 'asset2',
                            type: 'StagingXcmV3MultiLocation'
                        }
                    ],
                    type: 'Option<(Balance,Balance)>'
                },
                quote_price_exact_tokens_for_tokens: {
                    description: 'Quote price: exact tokens for tokens',
                    params: [
                        {
                            name: 'asset1',
                            type: 'StagingXcmV3MultiLocation'
                        },
                        {
                            name: 'asset2',
                            type: 'StagingXcmV3MultiLocation'
                        },
                        {
                            name: 'amount',
                            type: 'u128'
                        },
                        {
                            name: 'include_fee',
                            type: 'bool'
                        }
                    ],
                    type: 'Option<(Balance)>'
                },
                quote_price_tokens_for_exact_tokens: {
                    description: 'Quote price: tokens for exact tokens',
                    params: [
                        {
                            name: 'asset1',
                            type: 'StagingXcmV3MultiLocation'
                        },
                        {
                            name: 'asset2',
                            type: 'StagingXcmV3MultiLocation'
                        },
                        {
                            name: 'amount',
                            type: 'u128'
                        },
                        {
                            name: 'include_fee',
                            type: 'bool'
                        }
                    ],
                    type: 'Option<(Balance)>'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/assetConversion/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$assetConversion$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/assetConversion/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$assetConversion$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        TAssetConversion: 'Option<MultiLocation>'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/assets/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    AssetsApi: [
        {
            methods: {
                account_balances: {
                    description: 'Return the current set of authorities.',
                    params: [
                        {
                            name: 'account',
                            type: 'AccountId'
                        }
                    ],
                    type: 'Vec<(u32, TAssetBalance)>'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/assets/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$assets$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/assets/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$assets$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        AssetApprovalKey: {
            owner: 'AccountId',
            delegate: 'AccountId'
        },
        AssetApproval: {
            amount: 'TAssetBalance',
            deposit: 'TAssetDepositBalance'
        },
        AssetBalance: {
            balance: 'TAssetBalance',
            isFrozen: 'bool',
            isSufficient: 'bool'
        },
        AssetDestroyWitness: {
            accounts: 'Compact<u32>',
            sufficients: 'Compact<u32>',
            approvals: 'Compact<u32>'
        },
        AssetDetails: {
            owner: 'AccountId',
            issuer: 'AccountId',
            admin: 'AccountId',
            freezer: 'AccountId',
            supply: 'TAssetBalance',
            deposit: 'TAssetDepositBalance',
            minBalance: 'TAssetBalance',
            isSufficient: 'bool',
            accounts: 'u32',
            sufficients: 'u32',
            approvals: 'u32',
            isFrozen: 'bool'
        },
        AssetMetadata: {
            deposit: 'TAssetDepositBalance',
            name: 'Vec<u8>',
            symbol: 'Vec<u8>',
            decimals: 'u8',
            isFrozen: 'bool'
        },
        TAssetBalance: 'u64',
        TAssetDepositBalance: 'BalanceOf'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/aura/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    AuraApi: [
        {
            methods: {
                authorities: {
                    description: 'Return the current set of authorities.',
                    params: [],
                    type: 'Vec<AuthorityId>'
                },
                slot_duration: {
                    description: 'Returns the slot duration for Aura.',
                    params: [],
                    type: 'SlotDuration'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/aura/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$aura$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/aura/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$aura$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        RawAuraPreDigest: {
            slotNumber: 'u64'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/authorship/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        UncleEntryItem: {
            _enum: {
                InclusionHeight: 'BlockNumber',
                Uncle: '(Hash, Option<AccountId>)'
            }
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/babe/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    epochAuthorship: {
        description: 'Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore',
        isUnsafe: true,
        params: [],
        type: 'HashMap<AuthorityId, EpochAuthorship>'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/babe/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const V1_V2_SHARED = {
    current_epoch: {
        description: 'Returns information regarding the current epoch.',
        params: [],
        type: 'Epoch'
    },
    current_epoch_start: {
        description: 'Returns the slot that started the current epoch.',
        params: [],
        type: 'Slot'
    },
    generate_key_ownership_proof: {
        description: 'Generates a proof of key ownership for the given authority in the current epoch.',
        params: [
            {
                name: 'slot',
                type: 'Slot'
            },
            {
                name: 'authorityId',
                type: 'AuthorityId'
            }
        ],
        type: 'Option<OpaqueKeyOwnershipProof>'
    },
    next_epoch: {
        description: 'Returns information regarding the next epoch (which was already previously announced).',
        params: [],
        type: 'Epoch'
    },
    submit_report_equivocation_unsigned_extrinsic: {
        description: 'Submits an unsigned extrinsic to report an equivocation.',
        params: [
            {
                name: 'equivocationProof',
                type: 'BabeEquivocationProof'
            },
            {
                name: 'keyOwnerProof',
                type: 'OpaqueKeyOwnershipProof'
            }
        ],
        type: 'Option<Null>'
    }
};
const runtime = {
    BabeApi: [
        {
            methods: {
                configuration: {
                    description: 'Return the genesis configuration for BABE. The configuration is only read on genesis.',
                    params: [],
                    type: 'BabeGenesisConfiguration'
                },
                ...V1_V2_SHARED
            },
            version: 2
        },
        {
            methods: {
                configuration: {
                    description: 'Return the configuration for BABE. Version 1.',
                    params: [],
                    type: 'BabeGenesisConfigurationV1'
                },
                ...V1_V2_SHARED
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/babe/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$babe$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/babe/rpc.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$babe$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/babe/runtime.js [app-ssr] (ecmascript)");
;
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$babe$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$babe$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        AllowedSlots: {
            _enum: [
                'PrimarySlots',
                'PrimaryAndSecondaryPlainSlots',
                'PrimaryAndSecondaryVRFSlots'
            ]
        },
        BabeAuthorityWeight: 'u64',
        BabeEpochConfiguration: {
            c: '(u64, u64)',
            allowedSlots: 'AllowedSlots'
        },
        BabeBlockWeight: 'u32',
        BabeEquivocationProof: {
            offender: 'AuthorityId',
            slotNumber: 'SlotNumber',
            firstHeader: 'Header',
            secondHeader: 'Header'
        },
        BabeGenesisConfiguration: {
            slotDuration: 'u64',
            epochLength: 'u64',
            c: '(u64, u64)',
            genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',
            randomness: 'Randomness',
            allowedSlots: 'AllowedSlots'
        },
        BabeGenesisConfigurationV1: {
            slotDuration: 'u64',
            epochLength: 'u64',
            c: '(u64, u64)',
            genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',
            randomness: 'Randomness',
            secondarySlots: 'bool'
        },
        BabeWeight: 'u64',
        MaybeRandomness: 'Option<Randomness>',
        MaybeVrf: 'Option<VrfData>',
        Epoch: {
            epochIndex: 'u64',
            startSlot: 'Slot',
            duration: 'u64',
            authorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',
            randomness: 'Hash',
            config: 'BabeEpochConfiguration'
        },
        EpochAuthorship: {
            primary: 'Vec<u64>',
            secondary: 'Vec<u64>',
            secondary_vrf: 'Vec<u64>'
        },
        NextConfigDescriptor: {
            _enum: {
                V0: 'Null',
                V1: 'NextConfigDescriptorV1'
            }
        },
        NextConfigDescriptorV1: {
            c: '(u64, u64)',
            allowedSlots: 'AllowedSlots'
        },
        OpaqueKeyOwnershipProof: 'Bytes',
        Randomness: 'Hash',
        RawBabePreDigest: {
            _enum: {
                Phantom: 'Null',
                Primary: 'RawBabePreDigestPrimary',
                SecondaryPlain: 'RawBabePreDigestSecondaryPlain',
                SecondaryVRF: 'RawBabePreDigestSecondaryVRF'
            }
        },
        RawBabePreDigestPrimary: {
            authorityIndex: 'u32',
            slotNumber: 'SlotNumber',
            vrfOutput: 'VrfOutput',
            vrfProof: 'VrfProof'
        },
        RawBabePreDigestSecondaryPlain: {
            authorityIndex: 'u32',
            slotNumber: 'SlotNumber'
        },
        RawBabePreDigestSecondaryVRF: {
            authorityIndex: 'u32',
            slotNumber: 'SlotNumber',
            vrfOutput: 'VrfOutput',
            vrfProof: 'VrfProof'
        },
        RawBabePreDigestTo159: {
            _enum: {
                Primary: 'RawBabePreDigestPrimaryTo159',
                Secondary: 'RawBabePreDigestSecondaryTo159'
            }
        },
        RawBabePreDigestPrimaryTo159: {
            authorityIndex: 'u32',
            slotNumber: 'SlotNumber',
            weight: 'BabeBlockWeight',
            vrfOutput: 'VrfOutput',
            vrfProof: 'VrfProof'
        },
        RawBabePreDigestSecondaryTo159: {
            authorityIndex: 'u32',
            slotNumber: 'SlotNumber',
            weight: 'BabeBlockWeight'
        },
        // a cross old/new compatible version of the digest, that is _only_ useful
        // for partial parsing and extraction of the author. This assumes that all
        // entries has the authorityIndex in the first position - and that it is all
        // we are interested in
        RawBabePreDigestCompat: {
            _enum: {
                Zero: 'u32',
                One: 'u32',
                Two: 'u32',
                Three: 'u32'
            }
        },
        SlotNumber: 'u64',
        VrfData: '[u8; 32]',
        VrfOutput: '[u8; 32]',
        VrfProof: '[u8; 64]'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/balances/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        AccountData: {
            free: 'Balance',
            reserved: 'Balance',
            miscFrozen: 'Balance',
            feeFrozen: 'Balance'
        },
        BalanceLockTo212: {
            id: 'LockIdentifier',
            amount: 'Balance',
            until: 'BlockNumber',
            reasons: 'WithdrawReasons'
        },
        BalanceLock: {
            id: 'LockIdentifier',
            amount: 'Balance',
            reasons: 'Reasons'
        },
        BalanceStatus: {
            _enum: [
                'Free',
                'Reserved'
            ]
        },
        Reasons: {
            _enum: [
                'Fee',
                'Misc',
                'All'
            ]
        },
        ReserveData: {
            id: 'ReserveIdentifier',
            amount: 'Balance'
        },
        ReserveIdentifier: '[u8; 8]',
        VestingSchedule: {
            offset: 'Balance',
            perBlock: 'Balance',
            startingBlock: 'BlockNumber'
        },
        WithdrawReasons: {
            _set: {
                TransactionPayment: 0b0000_0001,
                Transfer: 0b0000_0010,
                Reserve: 0b0000_0100,
                Fee: 0b0000_1000,
                Tip: 0b0001_0000
            }
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/beefy/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    getFinalizedHead: {
        description: 'Returns hash of the latest BEEFY finalized block as seen by this client.',
        params: [],
        type: 'H256'
    },
    subscribeJustifications: {
        description: 'Returns the block most recently finalized by BEEFY, alongside its justification.',
        params: [],
        pubsub: [
            'justifications',
            'subscribeJustifications',
            'unsubscribeJustifications'
        ],
        type: 'BeefyVersionedFinalityProof'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/beefy/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const BEEFY_V3 = {
    beefy_genesis: {
        description: 'Return the block number where BEEFY consensus is enabled/started',
        params: [],
        type: 'Option<BlockNumber>'
    },
    generate_key_ownership_proof: {
        description: 'Generates a proof of key ownership for the given authority in the given set.',
        params: [
            {
                name: 'setId',
                type: 'ValidatorSetId'
            },
            {
                name: 'authorityId',
                type: 'AuthorityId'
            }
        ],
        type: 'Option<OpaqueKeyOwnershipProof>'
    },
    validator_set: {
        description: 'Return the current active BEEFY validator set',
        params: [],
        type: 'Option<ValidatorSet>'
    }
};
const BEEFY_V1_V3 = {
    ...BEEFY_V3,
    submit_report_equivocation_unsigned_extrinsic: {
        description: 'Submits an unsigned extrinsic to report an equivocation.',
        params: [
            {
                name: 'equivocationProof',
                type: 'BeefyEquivocationProof'
            },
            {
                name: 'keyOwnerProof',
                type: 'OpaqueKeyOwnershipProof'
            }
        ],
        type: 'Option<Null>'
    }
};
const BEEFY_V4 = {
    ...BEEFY_V3,
    submit_report_double_voting_unsigned_extrinsic: {
        description: 'Submits an unsigned extrinsic to report a double voting equivocation.',
        params: [
            {
                name: 'equivocationProof',
                type: 'SpConsensusBeefyDoubleVotingProof'
            },
            {
                name: 'keyOwnerProof',
                type: 'OpaqueKeyOwnershipProof'
            }
        ],
        type: 'Option<Null>'
    }
};
const BEEFY_MMR_V1 = {
    authority_set_proof: {
        description: 'Return the currently active BEEFY authority set proof.',
        params: [],
        type: 'BeefyAuthoritySet'
    },
    next_authority_set_proof: {
        description: 'Return the next/queued BEEFY authority set proof.',
        params: [],
        type: 'BeefyNextAuthoritySet'
    }
};
const runtime = {
    BeefyApi: [
        {
            methods: BEEFY_V4,
            version: 4
        },
        {
            methods: BEEFY_V1_V3,
            version: 3
        },
        {
            methods: BEEFY_V1_V3,
            version: 2
        },
        {
            methods: BEEFY_V1_V3,
            version: 1
        }
    ],
    BeefyMmrApi: [
        {
            methods: BEEFY_MMR_V1,
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/beefy/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$beefy$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/beefy/rpc.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$beefy$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/beefy/runtime.js [app-ssr] (ecmascript)");
;
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$beefy$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$beefy$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        BeefyAuthoritySet: {
            id: 'u64',
            len: 'u32',
            root: 'H256'
        },
        BeefyCommitment: {
            payload: 'BeefyPayload',
            blockNumber: 'BlockNumber',
            validatorSetId: 'ValidatorSetId'
        },
        BeefyId: '[u8; 33]',
        BeefyEquivocationProof: {
            first: 'BeefyVoteMessage',
            second: 'BeefyVoteMessage'
        },
        BeefyCompactSignedCommitment: {
            commitment: 'BeefyCommitment',
            signaturesFrom: 'Vec<u8>',
            validatorSetLen: 'u32',
            signaturesCompact: 'Vec<EcdsaSignature>'
        },
        BeefySignedCommitment: {
            commitment: 'BeefyCommitment',
            signatures: 'Vec<Option<EcdsaSignature>>'
        },
        BeefyVersionedFinalityProof: {
            _enum: {
                V0: 'Null',
                V1: 'BeefyCompactSignedCommitment'
            }
        },
        BeefyNextAuthoritySet: {
            id: 'u64',
            len: 'u32',
            root: 'H256'
        },
        BeefyPayload: 'Vec<(BeefyPayloadId, Bytes)>',
        BeefyPayloadId: '[u8;2]',
        BeefyVoteMessage: {
            commitment: 'BeefyCommitment',
            id: 'AuthorityId',
            signature: 'Signature'
        },
        MmrRootHash: 'H256',
        ValidatorSetId: 'u64',
        ValidatorSet: {
            validators: 'Vec<AuthorityId>',
            id: 'ValidatorSetId'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/benchmark/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    Benchmark: [
        {
            methods: {
                benchmark_metadata: {
                    description: 'Get the benchmark metadata available for this runtime.',
                    params: [
                        {
                            name: 'extra',
                            type: 'bool'
                        }
                    ],
                    type: '(Vec<BenchmarkList>, Vec<StorageInfo>)'
                },
                dispatch_benchmark: {
                    description: 'Dispatch the given benchmark.',
                    params: [
                        {
                            name: 'config',
                            type: 'BenchmarkConfig'
                        }
                    ],
                    type: 'Result<Vec<BenchmarkBatch>, Text>'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/benchmark/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$benchmark$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/benchmark/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$benchmark$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        BenchmarkBatch: {
            pallet: 'Text',
            instance: 'Text',
            benchmark: 'Text',
            results: 'Vec<BenchmarkResult>'
        },
        BenchmarkConfig: {
            pallet: 'Bytes',
            benchmark: 'Bytes',
            selectedComponents: 'Vec<(BenchmarkParameter, u32)>',
            verify: 'bool',
            internalRepeats: 'u32'
        },
        BenchmarkList: {
            pallet: 'Bytes',
            instance: 'Bytes',
            benchmarks: 'Vec<BenchmarkMetadata>'
        },
        BenchmarkMetadata: {
            name: 'Bytes',
            components: 'Vec<(BenchmarkParameter, u32, u32)>'
        },
        BenchmarkParameter: {
            _enum: [
                'a',
                'b',
                'c',
                'd',
                'e',
                'f',
                'g',
                'h',
                'i',
                'j',
                'k',
                'l',
                'm',
                'n',
                'o',
                'p',
                'q',
                'r',
                's',
                't',
                'u',
                'v',
                'w',
                'x',
                'y',
                'z'
            ]
        },
        BenchmarkResult: {
            components: 'Vec<(BenchmarkParameter, u32)>',
            extrinsicTime: 'u128',
            storageRootTime: 'u128',
            reads: 'u32',
            repeatReads: 'u32',
            writes: 'u32',
            repeatWrites: 'u32',
            proofSize: 'u32',
            benchKeys: 'Vec<(Vec<u8>, u32, u32, bool)>'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/blockbuilder/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const BB_V2_TO_V4 = {
    // this was removed after V4
    random_seed: {
        description: 'Generate a random seed.',
        params: [],
        type: 'Hash'
    }
};
const BB_V2_TO_V5 = {
    apply_extrinsic: {
        description: 'Apply the given extrinsic.',
        params: [
            {
                name: 'extrinsic',
                type: 'Extrinsic'
            }
        ],
        type: 'ApplyExtrinsicResultPre6'
    }
};
const BB_V2_TO_V6 = {
    check_inherents: {
        description: 'Check that the inherents are valid.',
        params: [
            {
                name: 'block',
                type: 'Block'
            },
            {
                name: 'data',
                type: 'InherentData'
            }
        ],
        type: 'CheckInherentsResult'
    },
    inherent_extrinsics: {
        description: 'Generate inherent extrinsics.',
        params: [
            {
                name: 'inherent',
                type: 'InherentData'
            }
        ],
        type: 'Vec<Extrinsic>'
    }
};
const BB_V3_TO_V6 = {
    // renamed in v3 from finalize_block
    finalize_block: {
        description: 'Finish the current block.',
        params: [],
        type: 'Header'
    }
};
const runtime = {
    BlockBuilder: [
        {
            methods: {
                apply_extrinsic: {
                    description: 'Apply the given extrinsic.',
                    params: [
                        {
                            name: 'extrinsic',
                            type: 'Extrinsic'
                        }
                    ],
                    type: 'ApplyExtrinsicResult'
                },
                ...BB_V2_TO_V6,
                ...BB_V3_TO_V6
            },
            version: 6
        },
        {
            methods: {
                // apply_extrinsic result changed in 6
                ...BB_V2_TO_V5,
                ...BB_V2_TO_V6,
                ...BB_V3_TO_V6
            },
            version: 5
        },
        {
            methods: {
                // random_seed removed
                ...BB_V2_TO_V4,
                ...BB_V2_TO_V5,
                ...BB_V2_TO_V6,
                ...BB_V3_TO_V6
            },
            version: 4
        },
        {
            methods: {
                // finalize_block renamed
                ...BB_V2_TO_V4,
                ...BB_V2_TO_V6,
                ...BB_V3_TO_V6
            },
            version: 3
        },
        {
            methods: {
                finalise_block: {
                    description: 'Finish the current block.',
                    params: [],
                    type: 'Header'
                },
                ...BB_V2_TO_V4,
                ...BB_V2_TO_V6
            },
            version: 2
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/blockbuilder/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$blockbuilder$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/blockbuilder/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$blockbuilder$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        CheckInherentsResult: {
            okay: 'bool',
            fatalError: 'bool',
            errors: 'InherentData'
        },
        InherentData: {
            data: 'BTreeMap<InherentIdentifier, Bytes>'
        },
        InherentIdentifier: '[u8; 8]'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/collective/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        CollectiveOrigin: {
            _enum: {
                Members: '(MemberCount, MemberCount)',
                Member: 'AccountId'
            }
        },
        MemberCount: 'u32',
        ProposalIndex: 'u32',
        VotesTo230: {
            index: 'ProposalIndex',
            threshold: 'MemberCount',
            ayes: 'Vec<AccountId>',
            nays: 'Vec<AccountId>'
        },
        Votes: {
            index: 'ProposalIndex',
            threshold: 'MemberCount',
            ayes: 'Vec<AccountId>',
            nays: 'Vec<AccountId>',
            end: 'BlockNumber'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/consensus/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        AuthorityId: 'AccountId',
        RawVRFOutput: '[u8; 32]'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/contracts/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    call: {
        deprecated: 'Use the runtime interface `api.call.contractsApi.call` instead',
        description: 'Executes a call to a contract',
        params: [
            {
                name: 'callRequest',
                type: 'ContractCallRequest'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'ContractExecResult'
    },
    getStorage: {
        deprecated: 'Use the runtime interface `api.call.contractsApi.getStorage` instead',
        description: 'Returns the value under a specified storage key in a contract',
        params: [
            {
                name: 'address',
                type: 'AccountId'
            },
            {
                name: 'key',
                type: 'H256'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Option<Bytes>'
    },
    instantiate: {
        deprecated: 'Use the runtime interface `api.call.contractsApi.instantiate` instead',
        description: 'Instantiate a new contract',
        params: [
            {
                name: 'request',
                type: 'InstantiateRequestV1'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'ContractInstantiateResult'
    },
    rentProjection: {
        deprecated: 'Not available in newer versions of the contracts interfaces',
        description: 'Returns the projected time a given contract will be able to sustain paying its rent',
        params: [
            {
                name: 'address',
                type: 'AccountId'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Option<BlockNumber>'
    },
    uploadCode: {
        deprecated: 'Use the runtime interface `api.call.contractsApi.uploadCode` instead',
        description: 'Upload new code without instantiating a contract from it',
        // The RPC here is terribly misnamed - somebody forgot how the RPCs
        // are actually done, ie. <module>_<camelCasedMethod>
        endpoint: 'contracts_upload_code',
        params: [
            {
                name: 'uploadRequest',
                type: 'CodeUploadRequest'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'CodeUploadResult'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/contracts/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const SHARED_V1_V2 = {
    get_storage: {
        description: 'Query a given storage key in a given contract.',
        params: [
            {
                name: 'address',
                type: 'AccountId'
            },
            {
                name: 'key',
                type: 'Bytes'
            }
        ],
        type: 'Option<Bytes>'
    },
    upload_code: {
        description: 'Upload new code without instantiating a contract from it.',
        params: [
            {
                name: 'origin',
                type: 'AccountId'
            },
            {
                name: 'code',
                type: 'Bytes'
            },
            {
                name: 'storageDepositLimit',
                type: 'Option<Balance>'
            }
        ],
        type: 'CodeUploadResult'
    }
};
const runtime = {
    ContractsApi: [
        {
            methods: {
                call: {
                    description: 'Perform a call from a specified account to a given contract.',
                    params: [
                        {
                            name: 'origin',
                            type: 'AccountId'
                        },
                        {
                            name: 'dest',
                            type: 'AccountId'
                        },
                        {
                            name: 'value',
                            type: 'Balance'
                        },
                        {
                            name: 'gasLimit',
                            type: 'Option<WeightV2>'
                        },
                        {
                            name: 'storageDepositLimit',
                            type: 'Option<Balance>'
                        },
                        {
                            name: 'inputData',
                            type: 'Vec<u8>'
                        }
                    ],
                    type: 'ContractExecResult'
                },
                instantiate: {
                    description: 'Instantiate a new contract.',
                    params: [
                        {
                            name: 'origin',
                            type: 'AccountId'
                        },
                        {
                            name: 'value',
                            type: 'Balance'
                        },
                        {
                            name: 'gasLimit',
                            type: 'Option<WeightV2>'
                        },
                        {
                            name: 'storageDepositLimit',
                            type: 'Option<Balance>'
                        },
                        {
                            name: 'code',
                            type: 'CodeSource'
                        },
                        {
                            name: 'data',
                            type: 'Bytes'
                        },
                        {
                            name: 'salt',
                            type: 'Bytes'
                        }
                    ],
                    type: 'ContractInstantiateResult'
                },
                ...SHARED_V1_V2
            },
            version: 2
        },
        {
            methods: {
                call: {
                    description: 'Perform a call from a specified account to a given contract.',
                    params: [
                        {
                            name: 'origin',
                            type: 'AccountId'
                        },
                        {
                            name: 'dest',
                            type: 'AccountId'
                        },
                        {
                            name: 'value',
                            type: 'Balance'
                        },
                        {
                            name: 'gasLimit',
                            type: 'u64'
                        },
                        {
                            name: 'storageDepositLimit',
                            type: 'Option<Balance>'
                        },
                        {
                            name: 'inputData',
                            type: 'Vec<u8>'
                        }
                    ],
                    type: 'ContractExecResultU64'
                },
                instantiate: {
                    description: 'Instantiate a new contract.',
                    params: [
                        {
                            name: 'origin',
                            type: 'AccountId'
                        },
                        {
                            name: 'value',
                            type: 'Balance'
                        },
                        {
                            name: 'gasLimit',
                            type: 'u64'
                        },
                        {
                            name: 'storageDepositLimit',
                            type: 'Option<Balance>'
                        },
                        {
                            name: 'code',
                            type: 'CodeSource'
                        },
                        {
                            name: 'data',
                            type: 'Bytes'
                        },
                        {
                            name: 'salt',
                            type: 'Bytes'
                        }
                    ],
                    type: 'ContractInstantiateResultU64'
                },
                ...SHARED_V1_V2
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/contracts/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$contracts$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/contracts/rpc.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$contracts$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/contracts/runtime.js [app-ssr] (ecmascript)");
;
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$contracts$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$contracts$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        AliveContractInfo: {
            trieId: 'TrieId',
            storageSize: 'u32',
            pairCount: 'u32',
            codeHash: 'CodeHash',
            rentAllowance: 'Balance',
            rentPaid: 'Balance',
            deductBlock: 'BlockNumber',
            lastWrite: 'Option<BlockNumber>',
            _reserved: 'Option<Null>'
        },
        CodeHash: 'Hash',
        CodeSource: {
            _enum: {
                Upload: 'Bytes',
                Existing: 'Hash'
            }
        },
        CodeUploadRequest: {
            origin: 'AccountId',
            code: 'Bytes',
            storageDepositLimit: 'Option<Balance>'
        },
        CodeUploadResult: 'Result<CodeUploadResultValue, DispatchError>',
        CodeUploadResultValue: {
            codeHash: 'CodeHash',
            deposit: 'Balance'
        },
        ContractCallRequest: {
            origin: 'AccountId',
            dest: 'AccountId',
            value: 'Balance',
            gasLimit: 'u64',
            storageDepositLimit: 'Option<Balance>',
            inputData: 'Bytes'
        },
        ContractExecResultSuccessTo255: {
            status: 'u8',
            data: 'Raw'
        },
        ContractExecResultTo255: {
            _enum: {
                Success: 'ContractExecResultSuccessTo255',
                Error: 'Null'
            }
        },
        ContractExecResultSuccessTo260: {
            flags: 'ContractReturnFlags',
            data: 'Bytes',
            gasConsumed: 'u64'
        },
        ContractExecResultTo260: {
            _enum: {
                Success: 'ContractExecResultSuccessTo260',
                Error: 'Null'
            }
        },
        ContractExecResultOk: {
            flags: 'ContractReturnFlags',
            data: 'Bytes'
        },
        ContractExecResultResult: 'Result<ContractExecResultOk, DispatchError>',
        ContractExecResultTo267: {
            gasConsumed: 'u64',
            debugMessage: 'Text',
            result: 'ContractExecResultResult'
        },
        ContractExecResult: {
            gasConsumed: 'Weight',
            gasRequired: 'Weight',
            storageDeposit: 'StorageDeposit',
            debugMessage: 'Text',
            result: 'ContractExecResultResult'
        },
        ContractExecResultU64: {
            gasConsumed: 'u64',
            gasRequired: 'u64',
            storageDeposit: 'StorageDeposit',
            debugMessage: 'Text',
            result: 'ContractExecResultResult'
        },
        ContractInfo: {
            _enum: {
                Alive: 'AliveContractInfo',
                Tombstone: 'TombstoneContractInfo'
            }
        },
        ContractCallFlags: {
            _set: {
                _bitLength: 32,
                ForwardInput: 0b0000_0001,
                CloneInput: 0b0000_0010,
                TailCall: 0b0000_0100,
                AllowReentry: 0b0000_1000
            }
        },
        ContractReturnFlags: {
            _set: {
                _bitLength: 32,
                Revert: 0x0000_0001
            }
        },
        ContractStorageKey: '[u8; 32]',
        DeletedContract: {
            pairCount: 'u32',
            trieId: 'TrieId'
        },
        ExecReturnValue: {
            flags: 'ContractReturnFlags',
            data: 'Bytes'
        },
        Gas: 'u64',
        HostFnWeightsTo264: {
            caller: 'Weight',
            address: 'Weight',
            gasLeft: 'Weight',
            balance: 'Weight',
            valueTransferred: 'Weight',
            minimumBalance: 'Weight',
            tombstoneDeposit: 'Weight',
            rentAllowance: 'Weight',
            blockNumber: 'Weight',
            now: 'Weight',
            weightToFee: 'Weight',
            gas: 'Weight',
            input: 'Weight',
            inputPerByte: 'Weight',
            return: 'Weight',
            returnPerByte: 'Weight',
            terminate: 'Weight',
            restoreTo: 'Weight',
            restoreToPerDelta: 'Weight',
            random: 'Weight',
            depositEvent: 'Weight',
            depositEventPerTopic: 'Weight',
            depositEventPerByte: 'Weight',
            setRentAllowance: 'Weight',
            setStorage: 'Weight',
            setStoragePerByte: 'Weight',
            clearStorage: 'Weight',
            getStorage: 'Weight',
            getStoragePerByte: 'Weight',
            transfer: 'Weight',
            call: 'Weight',
            callTransferSurcharge: 'Weight',
            callPerInputByte: 'Weight',
            callPerOutputByte: 'Weight',
            instantiate: 'Weight',
            instantiatePerInputByte: 'Weight',
            instantiatePerOutputByte: 'Weight',
            hashSha2256: 'Weight',
            hashSha2256PerByte: 'Weight',
            hashKeccak256: 'Weight',
            hashKeccak256PerByte: 'Weight',
            hashBlake2256: 'Weight',
            hashBlake2256PerByte: 'Weight',
            hashBlake2128: 'Weight',
            hashBlake2128PerByte: 'Weight'
        },
        HostFnWeights: {
            caller: 'Weight',
            address: 'Weight',
            gasLeft: 'Weight',
            balance: 'Weight',
            valueTransferred: 'Weight',
            minimumBalance: 'Weight',
            tombstoneDeposit: 'Weight',
            rentAllowance: 'Weight',
            blockNumber: 'Weight',
            now: 'Weight',
            weightToFee: 'Weight',
            gas: 'Weight',
            input: 'Weight',
            inputPerByte: 'Weight',
            return: 'Weight',
            returnPerByte: 'Weight',
            terminate: 'Weight',
            terminatePerCodeByte: 'Weight',
            restoreTo: 'Weight',
            restoreToPerCallerCodeByte: 'Weight',
            restoreToPerTombstoneCodeByte: 'Weight',
            restoreToPerDelta: 'Weight',
            random: 'Weight',
            depositEvent: 'Weight',
            depositEventPerTopic: 'Weight',
            depositEventPerByte: 'Weight',
            setRentAllowance: 'Weight',
            setStorage: 'Weight',
            setStoragePerByte: 'Weight',
            clearStorage: 'Weight',
            getStorage: 'Weight',
            getStoragePerByte: 'Weight',
            transfer: 'Weight',
            call: 'Weight',
            callPerCodeByte: 'Weight',
            callTransferSurcharge: 'Weight',
            callPerInputByte: 'Weight',
            callPerOutputByte: 'Weight',
            instantiate: 'Weight',
            instantiatePerCodeByte: 'Weight',
            instantiatePerInputByte: 'Weight',
            instantiatePerOutputByte: 'Weight',
            instantiatePerSaltByte: 'Weight',
            hashSha2256: 'Weight',
            hashSha2256PerByte: 'Weight',
            hashKeccak256: 'Weight',
            hashKeccak256PerByte: 'Weight',
            hashBlake2256: 'Weight',
            hashBlake2256PerByte: 'Weight',
            hashBlake2128: 'Weight',
            hashBlake2128PerByte: 'Weight',
            rentParams: 'Weight'
        },
        InstantiateRequestV1: {
            origin: 'AccountId',
            value: 'Balance',
            gasLimit: 'Gas',
            code: 'Bytes',
            data: 'Bytes',
            salt: 'Bytes'
        },
        InstantiateRequestV2: {
            _fallback: 'InstantiateRequestV1',
            origin: 'AccountId',
            value: 'Balance',
            gasLimit: 'Gas',
            storageDepositLimit: 'Option<Balance>',
            code: 'Bytes',
            data: 'Bytes',
            salt: 'Bytes'
        },
        InstantiateRequest: {
            _fallback: 'InstantiateRequestV2',
            origin: 'AccountId',
            value: 'Balance',
            gasLimit: 'Gas',
            storageDepositLimit: 'Option<Balance>',
            code: 'CodeSource',
            data: 'Bytes',
            salt: 'Bytes'
        },
        ContractInstantiateResultTo267: 'Result<InstantiateReturnValueTo267, Null>',
        ContractInstantiateResultTo299: 'Result<InstantiateReturnValueOk, Null>',
        ContractInstantiateResult: {
            gasConsumed: 'WeightV2',
            gasRequired: 'WeightV2',
            storageDeposit: 'StorageDeposit',
            debugMessage: 'Text',
            result: 'InstantiateReturnValue'
        },
        ContractInstantiateResultU64: {
            // only this one can fail, the current version (above) _should_ be correctly
            // versioned now, aka no more deprecated RPCs involved, only runtime calls
            _fallback: 'ContractInstantiateResultTo299',
            gasConsumed: 'u64',
            gasRequired: 'u64',
            storageDeposit: 'StorageDeposit',
            debugMessage: 'Text',
            result: 'InstantiateReturnValue'
        },
        InstantiateReturnValueTo267: {
            result: 'ExecReturnValue',
            accountId: 'AccountId',
            rentProjection: 'Option<RentProjection>'
        },
        InstantiateReturnValueOk: {
            result: 'ExecReturnValue',
            accountId: 'AccountId'
        },
        InstantiateReturnValue: 'Result<InstantiateReturnValueOk, DispatchError>',
        InstructionWeights: {
            i64const: 'u32',
            i64load: 'u32',
            i64store: 'u32',
            select: 'u32',
            rIf: 'u32',
            br: 'u32',
            brIf: 'u32',
            brIable: 'u32',
            brIablePerEntry: 'u32',
            call: 'u32',
            callIndirect: 'u32',
            callIndirectPerParam: 'u32',
            localGet: 'u32',
            localSet: 'u32',
            local_tee: 'u32',
            globalGet: 'u32',
            globalSet: 'u32',
            memoryCurrent: 'u32',
            memoryGrow: 'u32',
            i64clz: 'u32',
            i64ctz: 'u32',
            i64popcnt: 'u32',
            i64eqz: 'u32',
            i64extendsi32: 'u32',
            i64extendui32: 'u32',
            i32wrapi64: 'u32',
            i64eq: 'u32',
            i64ne: 'u32',
            i64lts: 'u32',
            i64ltu: 'u32',
            i64gts: 'u32',
            i64gtu: 'u32',
            i64les: 'u32',
            i64leu: 'u32',
            i64ges: 'u32',
            i64geu: 'u32',
            i64add: 'u32',
            i64sub: 'u32',
            i64mul: 'u32',
            i64divs: 'u32',
            i64divu: 'u32',
            i64rems: 'u32',
            i64remu: 'u32',
            i64and: 'u32',
            i64or: 'u32',
            i64xor: 'u32',
            i64shl: 'u32',
            i64shrs: 'u32',
            i64shru: 'u32',
            i64rotl: 'u32',
            i64rotr: 'u32'
        },
        LimitsTo264: {
            eventTopics: 'u32',
            stackHeight: 'u32',
            globals: 'u32',
            parameters: 'u32',
            memoryPages: 'u32',
            tableSize: 'u32',
            brTableSize: 'u32',
            subjectLen: 'u32',
            codeSize: 'u32'
        },
        Limits: {
            eventTopics: 'u32',
            stackHeight: 'u32',
            globals: 'u32',
            parameters: 'u32',
            memoryPages: 'u32',
            tableSize: 'u32',
            brTableSize: 'u32',
            subjectLen: 'u32'
        },
        PrefabWasmModule: {
            scheduleVersion: 'Compact<u32>',
            initial: 'Compact<u32>',
            maximum: 'Compact<u32>',
            refcount: 'Compact<u64>',
            _reserved: 'Option<Null>',
            code: 'Bytes',
            originalCodeLen: 'u32'
        },
        RentProjection: {
            _enum: {
                EvictionAt: 'BlockNumber',
                NoEviction: 'Null'
            }
        },
        ScheduleTo212: {
            version: 'u32',
            putCodePerByteCost: 'Gas',
            growMemCost: 'Gas',
            regularOpCost: 'Gas',
            returnDataPerByteCost: 'Gas',
            eventDataPerByteCost: 'Gas',
            eventPerTopicCost: 'Gas',
            eventBaseCost: 'Gas',
            sandboxDataReadCost: 'Gas',
            sandboxDataWriteCost: 'Gas',
            maxEventTopics: 'u32',
            maxStackHeight: 'u32',
            maxMemoryPages: 'u32',
            enablePrintln: 'bool',
            maxSubjectLen: 'u32'
        },
        ScheduleTo258: {
            version: 'u32',
            putCodePerByteCost: 'Gas',
            growMemCost: 'Gas',
            regularOpCost: 'Gas',
            returnDataPerByteCost: 'Gas',
            eventDataPerByteCost: 'Gas',
            eventPerTopicCost: 'Gas',
            eventBaseCost: 'Gas',
            sandboxDataReadCost: 'Gas',
            sandboxDataWriteCost: 'Gas',
            transferCost: 'Gas',
            maxEventTopics: 'u32',
            maxStackHeight: 'u32',
            maxMemoryPages: 'u32',
            enablePrintln: 'bool',
            maxSubjectLen: 'u32'
        },
        ScheduleTo264: {
            version: 'u32',
            enablePrintln: 'bool',
            limits: 'LimitsTo264',
            instructionWeights: 'InstructionWeights',
            hostFnWeights: 'HostFnWeightsTo264'
        },
        Schedule: {
            version: 'u32',
            enablePrintln: 'bool',
            limits: 'Limits',
            instructionWeights: 'InstructionWeights',
            hostFnWeights: 'HostFnWeights'
        },
        SeedOf: 'Hash',
        StorageDeposit: {
            _enum: {
                Refund: 'Balance',
                Charge: 'Balance'
            }
        },
        TombstoneContractInfo: 'Hash',
        TrieId: 'Bytes'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/democracy/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "AllConvictions",
    ()=>AllConvictions,
    "default",
    ()=>__TURBOPACK__default__export__
]);
const AllConvictions = [
    // 0.1x votes, unlocked.
    'None',
    // 1x votes, locked for an enactment period following a successful vote.
    'Locked1x',
    // 2x votes, locked for 2x enactment periods following a successful vote.
    'Locked2x',
    // 3x votes, locked for 4x...
    'Locked3x',
    // 4x votes, locked for 8x...
    'Locked4x',
    // 5x votes, locked for 16x...
    'Locked5x',
    // 6x votes, locked for 32x...
    'Locked6x'
];
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        AccountVote: {
            _enum: {
                Standard: 'AccountVoteStandard',
                Split: 'AccountVoteSplit'
            }
        },
        AccountVoteSplit: {
            aye: 'Balance',
            nay: 'Balance'
        },
        AccountVoteStandard: {
            vote: 'Vote',
            balance: 'Balance'
        },
        Conviction: {
            _enum: AllConvictions
        },
        Delegations: {
            votes: 'Balance',
            capital: 'Balance'
        },
        PreimageStatus: {
            _enum: {
                Missing: 'BlockNumber',
                Available: 'PreimageStatusAvailable'
            }
        },
        PreimageStatusAvailable: {
            data: 'Bytes',
            provider: 'AccountId',
            deposit: 'Balance',
            since: 'BlockNumber',
            expiry: 'Option<BlockNumber>'
        },
        PriorLock: '(BlockNumber, Balance)',
        PropIndex: 'u32',
        Proposal: 'Call',
        ProxyState: {
            _enum: {
                Open: 'AccountId',
                Active: 'AccountId'
            }
        },
        ReferendumIndex: 'u32',
        ReferendumInfoTo239: {
            end: 'BlockNumber',
            proposalHash: 'Hash',
            threshold: 'VoteThreshold',
            delay: 'BlockNumber'
        },
        ReferendumInfo: {
            _enum: {
                Ongoing: 'ReferendumStatus',
                Finished: 'ReferendumInfoFinished'
            }
        },
        ReferendumInfoFinished: {
            approved: 'bool',
            end: 'BlockNumber'
        },
        ReferendumStatus: {
            end: 'BlockNumber',
            proposalHash: 'Hash',
            threshold: 'VoteThreshold',
            delay: 'BlockNumber',
            tally: 'Tally'
        },
        Tally: {
            ayes: 'Balance',
            nays: 'Balance',
            turnout: 'Balance'
        },
        Voting: {
            _enum: {
                Direct: 'VotingDirect',
                Delegating: 'VotingDelegating'
            }
        },
        VotingDirect: {
            votes: 'Vec<VotingDirectVote>',
            delegations: 'Delegations',
            prior: 'PriorLock'
        },
        VotingDirectVote: '(ReferendumIndex, AccountVote)',
        VotingDelegating: {
            balance: 'Balance',
            target: 'AccountId',
            conviction: 'Conviction',
            delegations: 'Delegations',
            prior: 'PriorLock'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/dev/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    getBlockStats: {
        description: 'Reexecute the specified `block_hash` and gather statistics while doing so',
        isUnsafe: true,
        params: [
            {
                isHistoric: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Option<BlockStats>'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/dev/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$dev$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/dev/rpc.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$dev$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    types: {
        BlockStats: {
            witnessLen: 'u64',
            witnessCompactLen: 'u64',
            blockLen: 'u64',
            blockNumExtrinsics: 'u64'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/discovery/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    AuthorityDiscoveryApi: [
        {
            methods: {
                authorities: {
                    description: 'Retrieve authority identifiers of the current and next authority set.',
                    params: [],
                    type: 'Vec<AuthorityId>'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/discovery/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$discovery$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/discovery/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$discovery$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {}
};
}),
"[project]/node_modules/@polkadot/types/interfaces/elections/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        ApprovalFlag: 'u32',
        DefunctVoter: {
            who: 'AccountId',
            voteCount: 'Compact<u32>',
            candidateCount: 'Compact<u32>'
        },
        Renouncing: {
            _enum: {
                Member: 'Null',
                RunnerUp: 'Null',
                Candidate: 'Compact<u32>'
            }
        },
        SetIndex: 'u32',
        Vote: 'GenericVote',
        VoteIndex: 'u32',
        VoterInfo: {
            lastActive: 'VoteIndex',
            lastWin: 'VoteIndex',
            pot: 'Balance',
            stake: 'Balance'
        },
        VoteThreshold: {
            _enum: [
                'Super Majority Approve',
                'Super Majority Against',
                'Simple Majority'
            ]
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/engine/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    createBlock: {
        description: 'Instructs the manual-seal authorship task to create a new block',
        params: [
            {
                name: 'createEmpty',
                type: 'bool'
            },
            {
                name: 'finalize',
                type: 'bool'
            },
            {
                isOptional: true,
                name: 'parentHash',
                type: 'BlockHash'
            }
        ],
        type: 'CreatedBlock'
    },
    finalizeBlock: {
        description: 'Instructs the manual-seal authorship task to finalize a block',
        params: [
            {
                name: 'hash',
                type: 'BlockHash'
            },
            {
                isOptional: true,
                name: 'justification',
                type: 'Justification'
            }
        ],
        type: 'bool'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/engine/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$engine$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/engine/rpc.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$engine$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    types: {
        CreatedBlock: {
            _alias: {
                blockHash: 'hash'
            },
            blockHash: 'BlockHash',
            aux: 'ImportedAux'
        },
        ImportedAux: {
            headerOnly: 'bool',
            clearJustificationRequests: 'bool',
            needsJustification: 'bool',
            badJustification: 'bool',
            needsFinalityProof: 'bool',
            isNewBest: 'bool'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/evm/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        EvmAccount: {
            nonce: 'u256',
            balance: 'u256'
        },
        EvmCallInfo: {
            exitReason: 'ExitReason',
            value: 'Bytes',
            usedGas: 'U256',
            logs: 'Vec<EvmLog>'
        },
        EvmCreateInfo: {
            exitReason: 'ExitReason',
            value: 'H160',
            usedGas: 'U256',
            logs: 'Vec<EvmLog>'
        },
        EvmCallInfoV2: {
            exitReason: 'ExitReason',
            value: 'Bytes',
            usedGas: 'U256',
            weightInfo: 'Option<EvmWeightInfo>',
            logs: 'Vec<EvmLog>'
        },
        EvmCreateInfoV2: {
            exitReason: 'ExitReason',
            value: 'H160',
            usedGas: 'U256',
            weightInfo: 'Option<EvmWeightInfo>',
            logs: 'Vec<EvmLog>'
        },
        EvmLog: {
            address: 'H160',
            topics: 'Vec<H256>',
            data: 'Bytes'
        },
        EvmVicinity: {
            gasPrice: 'u256',
            origin: 'H160'
        },
        EvmWeightInfo: {
            refTimeLimit: 'Option<u64>',
            proofSizeLimit: 'Option<u64>',
            refTimeUsage: 'Option<u64>',
            proofSizeUsage: 'Option<u64>'
        },
        ExitError: {
            _enum: {
                StackUnderflow: 'Null',
                StackOverflow: 'Null',
                InvalidJump: 'Null',
                InvalidRange: 'Null',
                DesignatedInvalid: 'Null',
                CallTooDeep: 'Null',
                CreateCollision: 'Null',
                CreateContractLimit: 'Null',
                OutOfOffset: 'Null',
                OutOfGas: 'Null',
                OutOfFund: 'Null',
                PCUnderflow: 'Null',
                CreateEmpty: 'Null',
                Other: 'Text'
            }
        },
        ExitFatal: {
            _enum: {
                NotSupported: 'Null',
                UnhandledInterrupt: 'Null',
                CallErrorAsFatal: 'ExitError',
                Other: 'Text'
            }
        },
        ExitReason: {
            _enum: {
                Succeed: 'ExitSucceed',
                Error: 'ExitError',
                Revert: 'ExitRevert',
                Fatal: 'ExitFatal'
            }
        },
        ExitRevert: {
            _enum: [
                'Reverted'
            ]
        },
        ExitSucceed: {
            _enum: [
                'Stopped',
                'Returned',
                'Suicided'
            ]
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/extrinsics/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        Extrinsic: 'GenericExtrinsic',
        ExtrinsicEra: 'GenericExtrinsicEra',
        ExtrinsicPayload: 'GenericExtrinsicPayload',
        ExtrinsicSignature: 'MultiSignature',
        ExtrinsicV4: 'GenericExtrinsicV4',
        ExtrinsicPayloadV4: 'GenericExtrinsicPayloadV4',
        ExtrinsicSignatureV4: 'GenericExtrinsicSignatureV4',
        ExtrinsicUnknown: 'GenericExtrinsicUnknown',
        ExtrinsicPayloadUnknown: 'GenericExtrinsicPayloadUnknown',
        ExtrinsicV5: 'GenericExtrinsicV5',
        ExtrinsicPayloadV5: 'GenericExtrinsicPayloadV5',
        ExtrinsicSignatureV5: 'GenericExtrinsicSignatureV5',
        // eras
        Era: 'ExtrinsicEra',
        ImmortalEra: 'GenericImmortalEra',
        MortalEra: 'GenericMortalEra',
        // signatures & signer
        AnySignature: 'H512',
        MultiSignature: {
            _enum: {
                Ed25519: 'Ed25519Signature',
                Sr25519: 'Sr25519Signature',
                Ecdsa: 'EcdsaSignature'
            }
        },
        Signature: 'H512',
        SignerPayload: 'GenericSignerPayload',
        EcdsaSignature: '[u8; 65]',
        Ed25519Signature: 'H512',
        Sr25519Signature: 'H512'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/fungibles/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    FungiblesApi: [
        {
            methods: {
                query_account_balances: {
                    description: 'Returns the list of all `MultiAsset` that an `AccountId` has',
                    params: [
                        {
                            name: 'account',
                            type: 'AccountId'
                        }
                    ],
                    type: 'Result<Vec<XcmV3MultiAsset>, FungiblesAccessError>'
                }
            },
            version: 1
        },
        {
            methods: {
                query_account_balances: {
                    description: 'Returns the list of all `MultiAsset` that an `AccountId` has',
                    params: [
                        {
                            name: 'account',
                            type: 'AccountId'
                        }
                    ],
                    type: 'Result<XcmVersionedAssets, FungiblesAccessError>'
                }
            },
            version: 2
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/fungibles/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$fungibles$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/fungibles/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$fungibles$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        FungiblesAccessError: {
            _enum: [
                'AssetIdConversionFailed',
                'AmountToBalanceConversionFailed'
            ]
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/genericAsset/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        AssetOptions: {
            initalIssuance: 'Compact<Balance>',
            permissions: 'PermissionLatest'
        },
        Owner: {
            _enum: {
                None: 'Null',
                Address: 'AccountId'
            }
        },
        PermissionsV1: {
            update: 'Owner',
            mint: 'Owner',
            burn: 'Owner'
        },
        PermissionVersions: {
            _enum: {
                V1: 'PermissionsV1'
            }
        },
        PermissionLatest: 'PermissionsV1'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/genesisBuilder/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    GenesisBuilder: [
        {
            methods: {
                build_config: {
                    description: 'Build `RuntimeGenesisConfig` from a JSON blob not using any defaults and store it in the storage.',
                    params: [
                        {
                            name: 'json',
                            type: 'Vec<u8>'
                        }
                    ],
                    type: 'Result<(), GenesisBuildErr>'
                },
                create_default_config: {
                    description: 'Creates the default `RuntimeGenesisConfig` and returns it as a JSON blob.',
                    params: [],
                    type: 'Vec<u8>'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/genesisBuilder/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$genesisBuilder$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/genesisBuilder/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$genesisBuilder$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        GenesisBuildErr: 'Text'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/gilt/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        ActiveGilt: {
            proportion: 'Perquintill',
            amount: 'Balance',
            who: 'AccountId',
            expiry: 'BlockNumber'
        },
        ActiveGiltsTotal: {
            frozen: 'Balance',
            proportion: 'Perquintill',
            index: 'ActiveIndex',
            target: 'Perquintill'
        },
        ActiveIndex: 'u32',
        GiltBid: {
            amount: 'Balance',
            who: 'AccountId'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/grandpa/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    proveFinality: {
        description: 'Prove finality for the given block number, returning the Justification for the last block in the set.',
        params: [
            {
                name: 'blockNumber',
                type: 'BlockNumber'
            }
        ],
        type: 'Option<EncodedFinalityProofs>'
    },
    roundState: {
        description: 'Returns the state of the current best round state as well as the ongoing background rounds',
        params: [],
        type: 'ReportedRoundStates'
    },
    subscribeJustifications: {
        description: 'Subscribes to grandpa justifications',
        params: [],
        pubsub: [
            'justifications',
            'subscribeJustifications',
            'unsubscribeJustifications'
        ],
        type: 'JustificationNotification'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/grandpa/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const GRANDPA_V2_V3 = {
    generate_key_ownership_proof: {
        description: 'Generates a proof of key ownership for the given authority in the given set.',
        params: [
            {
                name: 'setId',
                type: 'SetId'
            },
            {
                name: 'authorityId',
                type: 'AuthorityId'
            }
        ],
        type: 'Option<OpaqueKeyOwnershipProof>'
    },
    grandpa_authorities: {
        description: 'Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.',
        params: [],
        type: 'AuthorityList'
    },
    submit_report_equivocation_unsigned_extrinsic: {
        description: 'Submits an unsigned extrinsic to report an equivocation.',
        params: [
            {
                name: 'equivocationProof',
                type: 'GrandpaEquivocationProof'
            },
            {
                name: 'keyOwnerProof',
                type: 'OpaqueKeyOwnershipProof'
            }
        ],
        type: 'Option<Null>'
    }
};
const runtime = {
    GrandpaApi: [
        {
            methods: {
                current_set_id: {
                    description: 'Get current GRANDPA authority set id.',
                    params: [],
                    type: 'SetId'
                },
                ...GRANDPA_V2_V3
            },
            version: 3
        },
        {
            methods: GRANDPA_V2_V3,
            version: 2
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/grandpa/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$grandpa$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/grandpa/rpc.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$grandpa$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/grandpa/runtime.js [app-ssr] (ecmascript)");
;
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$grandpa$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$grandpa$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        AuthorityIndex: 'u64',
        AuthorityList: 'Vec<NextAuthority>',
        AuthoritySet: {
            currentAuthorities: 'AuthorityList',
            setId: 'u64',
            pendingStandardChanges: 'ForkTreePendingChange',
            pendingForcedChanges: 'Vec<PendingChange>',
            authoritySetChanges: 'AuthoritySetChanges'
        },
        ForkTreePendingChange: {
            roots: 'Vec<ForkTreePendingChangeNode>',
            bestFinalizedNumber: 'Option<BlockNumber>'
        },
        ForkTreePendingChangeNode: {
            hash: 'BlockHash',
            number: 'BlockNumber',
            data: 'PendingChange',
            children: 'Vec<ForkTreePendingChangeNode>'
        },
        AuthoritySetChange: '(U64, BlockNumber)',
        AuthoritySetChanges: 'Vec<AuthoritySetChange>',
        AuthorityWeight: 'u64',
        DelayKind: {
            _enum: {
                Finalized: 'Null',
                Best: 'DelayKindBest'
            }
        },
        DelayKindBest: {
            medianLastFinalized: 'BlockNumber'
        },
        EncodedFinalityProofs: 'Bytes',
        GrandpaEquivocation: {
            _enum: {
                Prevote: 'GrandpaEquivocationValue',
                Precommit: 'GrandpaEquivocationValue'
            }
        },
        GrandpaEquivocationProof: {
            setId: 'SetId',
            equivocation: 'GrandpaEquivocation'
        },
        GrandpaEquivocationValue: {
            roundNumber: 'u64',
            identity: 'AuthorityId',
            first: '(GrandpaPrevote, AuthoritySignature)',
            second: '(GrandpaPrevote, AuthoritySignature)'
        },
        GrandpaPrevote: {
            targetHash: 'Hash',
            targetNumber: 'BlockNumber'
        },
        GrandpaCommit: {
            targetHash: 'BlockHash',
            targetNumber: 'BlockNumber',
            precommits: 'Vec<GrandpaSignedPrecommit>'
        },
        GrandpaPrecommit: {
            targetHash: 'BlockHash',
            targetNumber: 'BlockNumber'
        },
        GrandpaSignedPrecommit: {
            precommit: 'GrandpaPrecommit',
            signature: 'AuthoritySignature',
            id: 'AuthorityId'
        },
        GrandpaJustification: {
            round: 'u64',
            commit: 'GrandpaCommit',
            votesAncestries: 'Vec<Header>'
        },
        JustificationNotification: 'Bytes',
        KeyOwnerProof: 'MembershipProof',
        NextAuthority: '(AuthorityId, AuthorityWeight)',
        PendingChange: {
            nextAuthorities: 'AuthorityList',
            delay: 'BlockNumber',
            canonHeight: 'BlockNumber',
            canonHash: 'BlockHash',
            delayKind: 'DelayKind'
        },
        PendingPause: {
            scheduledAt: 'BlockNumber',
            delay: 'BlockNumber'
        },
        PendingResume: {
            scheduledAt: 'BlockNumber',
            delay: 'BlockNumber'
        },
        Precommits: {
            currentWeight: 'u32',
            missing: 'BTreeSet<AuthorityId>'
        },
        Prevotes: {
            currentWeight: 'u32',
            missing: 'BTreeSet<AuthorityId>'
        },
        ReportedRoundStates: {
            setId: 'u32',
            best: 'RoundState',
            background: 'Vec<RoundState>'
        },
        RoundState: {
            round: 'u32',
            totalWeight: 'u32',
            thresholdWeight: 'u32',
            prevotes: 'Prevotes',
            precommits: 'Precommits'
        },
        SetId: 'u64',
        StoredPendingChange: {
            scheduledAt: 'BlockNumber',
            delay: 'BlockNumber',
            nextAuthorities: 'AuthorityList'
        },
        StoredState: {
            _enum: {
                Live: 'Null',
                PendingPause: 'PendingPause',
                Paused: 'Null',
                PendingResume: 'PendingResume'
            }
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/identity/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        IdentityFields: {
            _set: {
                _bitLength: 64,
                // Mapped here to 32 bits, in Rust these are 64-bit values
                Display: 0b00000000_00000000_00000000_0000_0001,
                Legal: 0b00000000_00000000_00000000_0000_0010,
                Web: 0b00000000_00000000_00000000_0000_0100,
                Riot: 0b00000000_00000000_00000000_0000_1000,
                Email: 0b00000000_00000000_00000000_0001_0000,
                PgpFingerprint: 0b00000000_00000000_00000000_0010_0000,
                Image: 0b00000000_00000000_00000000_0100_0000,
                Twitter: 0b00000000_00000000_00000000_1000_0000
            }
        },
        IdentityInfoAdditional: '(Data, Data)',
        IdentityInfoTo198: {
            additional: 'Vec<IdentityInfoAdditional>',
            display: 'Data',
            legal: 'Data',
            web: 'Data',
            riot: 'Data',
            email: 'Data',
            pgpFingerprint: 'Option<H160>',
            image: 'Data'
        },
        IdentityInfo: {
            _fallback: 'IdentityInfoTo198',
            additional: 'Vec<IdentityInfoAdditional>',
            display: 'Data',
            legal: 'Data',
            web: 'Data',
            riot: 'Data',
            email: 'Data',
            pgpFingerprint: 'Option<H160>',
            image: 'Data',
            twitter: 'Data'
        },
        IdentityJudgement: {
            _enum: {
                Unknown: 'Null',
                FeePaid: 'Balance',
                Reasonable: 'Null',
                KnownGood: 'Null',
                OutOfDate: 'Null',
                LowQuality: 'Null',
                Erroneous: 'Null'
            }
        },
        RegistrationJudgement: '(RegistrarIndex, IdentityJudgement)',
        RegistrationTo198: {
            judgements: 'Vec<RegistrationJudgement>',
            deposit: 'Balance',
            info: 'IdentityInfoTo198'
        },
        Registration: {
            _fallback: 'RegistrationTo198',
            judgements: 'Vec<RegistrationJudgement>',
            deposit: 'Balance',
            info: 'IdentityInfo'
        },
        RegistrarIndex: 'u32',
        RegistrarInfo: {
            account: 'AccountId',
            fee: 'Balance',
            fields: 'IdentityFields'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/imOnline/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        AuthIndex: 'u32',
        AuthoritySignature: 'Signature',
        Heartbeat: {
            blockNumber: 'BlockNumber',
            networkState: 'OpaqueNetworkState',
            sessionIndex: 'SessionIndex',
            authorityIndex: 'AuthIndex',
            validatorsLen: 'u32'
        },
        HeartbeatTo244: {
            blockNumber: 'BlockNumber',
            networkState: 'OpaqueNetworkState',
            sessionIndex: 'SessionIndex',
            authorityIndex: 'AuthIndex'
        },
        OpaqueMultiaddr: 'Opaque<Bytes>',
        OpaquePeerId: 'Opaque<Bytes>',
        OpaqueNetworkState: {
            peerId: 'OpaquePeerId',
            externalAddresses: 'Vec<OpaqueMultiaddr>'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/lottery/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        CallIndex: '(u8, u8)',
        LotteryConfig: {
            price: 'Balance',
            start: 'BlockNumber',
            length: 'BlockNumber',
            delay: 'BlockNumber',
            repeat: 'bool'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/mixnet/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    MixnetApi: [
        {
            methods: {
                current_mixnodes: {
                    description: 'Get the index and phase of the current session.',
                    params: [],
                    type: 'Result<Mixnode, MixnodesErr>'
                },
                maybe_register: {
                    description: 'Try to register a mixnode for the next session.',
                    params: [
                        {
                            name: 'session_index',
                            type: 'u32'
                        },
                        {
                            name: 'mixnode',
                            type: 'Mixnode'
                        }
                    ],
                    type: 'bool'
                },
                prev_mixnodes: {
                    description: 'Get the index and phase of the current session.',
                    params: [],
                    type: 'Result<Mixnode, MixnodesErr>'
                },
                session_status: {
                    description: 'Get the index and phase of the current session.',
                    params: [],
                    type: 'SessionStatus'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/mixnet/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$mixnet$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/mixnet/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$mixnet$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        Mixnode: {
            externalAddresses: 'Vec<Bytes>',
            kxPublic: '[u8; 32]',
            peerId: '[u8; 32]'
        },
        MixnodesErr: {
            _enum: {
                InsufficientRegistrations: {
                    min: 'u32',
                    num: 'u32'
                }
            }
        },
        SessionPhase: {
            _enum: [
                'CoverToCurrent',
                'RequestsToCurrent',
                'CoverToPrev',
                'DisconnectFromPrev'
            ]
        },
        SessionStatus: {
            currentIndex: 'u32',
            phase: 'SessionPhase'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/mmr/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    generateProof: {
        description: 'Generate MMR proof for the given block numbers.',
        params: [
            {
                name: 'blockNumbers',
                type: 'Vec<u64>'
            },
            {
                isOptional: true,
                name: 'bestKnownBlockNumber',
                type: 'u64'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'MmrLeafBatchProof'
    },
    root: {
        description: 'Get the MMR root hash for the current best block.',
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'MmrHash'
    },
    verifyProof: {
        description: 'Verify an MMR proof',
        params: [
            {
                name: 'proof',
                type: 'MmrLeafBatchProof'
            }
        ],
        type: 'bool'
    },
    verifyProofStateless: {
        description: 'Verify an MMR proof statelessly given an mmr_root',
        params: [
            {
                name: 'root',
                type: 'MmrHash'
            },
            {
                name: 'proof',
                type: 'MmrLeafBatchProof'
            }
        ],
        type: 'bool'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/mmr/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const MMR_V2 = {
    generate_proof: {
        description: 'Generate MMR proof for the given block numbers.',
        params: [
            {
                name: 'blockNumbers',
                type: 'Vec<BlockNumber>'
            },
            {
                name: 'bestKnownBlockNumber',
                type: 'Option<BlockNumber>'
            }
        ],
        type: 'Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>'
    },
    mmr_leaf_count: {
        description: 'Return the number of MMR blocks in the chain.',
        params: [],
        type: 'Result<U64, MmrError>'
    },
    mmr_root: {
        description: 'Return the on-chain MMR root hash.',
        params: [],
        type: 'Result<Hash, MmrError>'
    },
    verify_proof: {
        description: 'Verify MMR proof against on-chain MMR.',
        params: [
            {
                name: 'leaves',
                type: 'Vec<MmrEncodableOpaqueLeaf>'
            },
            {
                name: 'proof',
                type: 'MmrBatchProof'
            }
        ],
        type: 'Result<(), MmrError>'
    },
    verify_proof_stateless: {
        description: 'Verify MMR proof against given root hash.',
        params: [
            {
                name: 'root',
                type: 'Hash'
            },
            {
                name: 'leaves',
                type: 'Vec<MmrEncodableOpaqueLeaf>'
            },
            {
                name: 'proof',
                type: 'MmrBatchProof'
            }
        ],
        type: 'Result<(), MmrError>'
    }
};
const MMR_V1 = {
    generate_batch_proof: {
        description: 'Generate MMR proof for a series of leaves under given indices.',
        params: [
            {
                name: 'leafIndices',
                type: 'Vec<MmrLeafIndex>'
            }
        ],
        type: 'Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>'
    },
    generate_proof: {
        description: 'Generate MMR proof for a leaf under given index.',
        params: [
            {
                name: 'leafIndex',
                type: 'MmrLeafIndex'
            }
        ],
        type: 'Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>'
    },
    mmr_root: {
        description: 'Return the on-chain MMR root hash.',
        params: [],
        type: 'Result<Hash, MmrError>'
    },
    verify_batch_proof: {
        description: 'Verify MMR proof against on-chain MMR for a batch of leaves.',
        params: [
            {
                name: 'leaves',
                type: 'Vec<MmrEncodableOpaqueLeaf>'
            },
            {
                name: 'proof',
                type: 'MmrBatchProof'
            }
        ],
        type: 'Result<(), MmrError>'
    },
    verify_batch_proof_stateless: {
        description: 'Verify MMR proof against given root hash or a batch of leaves.',
        params: [
            {
                name: 'root',
                type: 'Hash'
            },
            {
                name: 'leaves',
                type: 'Vec<MmrEncodableOpaqueLeaf>'
            },
            {
                name: 'proof',
                type: 'MmrBatchProof'
            }
        ],
        type: 'Result<(), MmrError>'
    },
    verify_proof: {
        description: 'Verify MMR proof against on-chain MMR.',
        params: [
            {
                name: 'leaf',
                type: 'MmrEncodableOpaqueLeaf'
            },
            {
                name: 'proof',
                type: 'MmrProof'
            }
        ],
        type: 'Result<(), MmrError>'
    },
    verify_proof_stateless: {
        description: 'Verify MMR proof against given root hash.',
        params: [
            {
                name: 'root',
                type: 'Hash'
            },
            {
                name: 'leaf',
                type: 'MmrEncodableOpaqueLeaf'
            },
            {
                name: 'proof',
                type: 'MmrProof'
            }
        ],
        type: 'Result<(), MmrError>'
    }
};
const runtime = {
    MmrApi: [
        {
            methods: MMR_V2,
            version: 2
        },
        {
            methods: MMR_V1,
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/mmr/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$mmr$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/mmr/rpc.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$mmr$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/mmr/runtime.js [app-ssr] (ecmascript)");
;
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$mmr$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$mmr$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        MmrBatchProof: {
            leafIndices: 'Vec<MmrLeafIndex>',
            leafCount: 'MmrNodeIndex',
            items: 'Vec<Hash>'
        },
        MmrEncodableOpaqueLeaf: 'Bytes',
        MmrError: {
            _enum: [
                'InvalidNumericOp',
                'Push',
                'GetRoot',
                'Commit',
                'GenerateProof',
                'Verify',
                'LeafNotFound',
                ' PalletNotIncluded',
                'InvalidLeafIndex',
                'InvalidBestKnownBlock'
            ]
        },
        MmrHash: 'Hash',
        MmrLeafBatchProof: {
            blockHash: 'BlockHash',
            leaves: 'Bytes',
            proof: 'Bytes'
        },
        MmrLeafIndex: 'u64',
        MmrLeafProof: {
            blockHash: 'BlockHash',
            leaf: 'Bytes',
            proof: 'Bytes'
        },
        MmrNodeIndex: 'u64',
        MmrProof: {
            leafIndex: 'MmrLeafIndex',
            leafCount: 'MmrNodeIndex',
            items: 'Vec<Hash>'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/nfts/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    NftsApi: [
        {
            methods: {
                attribute: {
                    description: 'An attribute',
                    params: [
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        },
                        {
                            name: 'item',
                            type: 'NftItemId'
                        },
                        {
                            name: 'key',
                            type: 'Bytes'
                        }
                    ],
                    type: 'Option<Bytes>'
                },
                collection_attribute: {
                    description: 'A collection attribute',
                    params: [
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        },
                        {
                            name: 'key',
                            type: 'Bytes'
                        }
                    ],
                    type: 'Option<Bytes>'
                },
                collection_owner: {
                    description: 'A collection owner',
                    params: [
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        }
                    ],
                    type: 'Option<AccountId>'
                },
                custom_attribute: {
                    description: 'A custom attribute',
                    params: [
                        {
                            name: 'account',
                            type: 'AccountId'
                        },
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        },
                        {
                            name: 'item',
                            type: 'NftItemId'
                        },
                        {
                            name: 'key',
                            type: 'Bytes'
                        }
                    ],
                    type: 'Option<Bytes>'
                },
                owner: {
                    description: 'Collection owner',
                    params: [
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        },
                        {
                            name: 'item',
                            type: 'NftItemId'
                        }
                    ],
                    type: 'Option<AccountId>'
                },
                system_attribute: {
                    description: 'System attribute',
                    params: [
                        {
                            name: 'collection',
                            type: 'NftCollectionId'
                        },
                        {
                            name: 'item',
                            type: 'NftItemId'
                        },
                        {
                            name: 'key',
                            type: 'Bytes'
                        }
                    ],
                    type: 'Option<Bytes>'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/nfts/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nfts$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/nfts/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nfts$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        NftCollectionId: 'u32',
        NftItemId: 'u32'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/nompools/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    NominationPoolsApi: [
        {
            methods: {
                balance_to_points: {
                    description: 'Returns the equivalent points of `new_funds` for a given pool.',
                    params: [
                        {
                            name: 'poolId',
                            type: 'NpPoolId'
                        },
                        {
                            name: 'newFunds',
                            type: 'Balance'
                        }
                    ],
                    type: 'Balance'
                },
                pending_rewards: {
                    description: 'Returns the pending rewards for the given member.',
                    params: [
                        {
                            name: 'member',
                            type: 'AccountId'
                        }
                    ],
                    type: 'Balance'
                },
                points_to_balance: {
                    description: 'Returns the equivalent balance of `points` for a given pool.',
                    params: [
                        {
                            name: 'poolId',
                            type: 'NpPoolId'
                        },
                        {
                            name: 'points',
                            type: 'Balance'
                        }
                    ],
                    type: 'Balance'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/nompools/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nompools$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/nompools/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nompools$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        NpApiError: {
            _enum: [
                'MemberNotFound',
                'OverflowInPendingRewards'
            ]
        },
        NpPoolId: 'u32'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/offences/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        DeferredOffenceOf: '(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)',
        Kind: '[u8; 16]',
        OffenceDetails: {
            offender: 'Offender',
            reporters: 'Vec<Reporter>'
        },
        Offender: 'IdentificationTuple',
        OpaqueTimeSlot: 'Bytes',
        ReportIdOf: 'Hash',
        Reporter: 'AccountId'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/pow/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    DifficultyApi: [
        {
            methods: {
                difficulty: {
                    description: 'Return the target difficulty of the next block.',
                    params: [],
                    // This is Difficulty in the original, however this is chain-specific
                    type: 'Raw'
                }
            },
            version: 1
        }
    ],
    TimestampApi: [
        {
            methods: {
                timestamp: {
                    description: 'API necessary for timestamp-based difficulty adjustment algorithms.',
                    params: [],
                    type: 'Moment'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/pow/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$pow$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/pow/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$pow$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {}
};
}),
"[project]/node_modules/@polkadot/types/interfaces/proxy/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        ProxyDefinition: {
            delegate: 'AccountId',
            proxyType: 'ProxyType',
            delay: 'BlockNumber'
        },
        ProxyType: {
            _enum: [
                'Any',
                'NonTransfer',
                'Governance',
                'Staking'
            ]
        },
        ProxyAnnouncement: {
            real: 'AccountId',
            callHash: 'Hash',
            height: 'BlockNumber'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/recovery/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        ActiveRecovery: {
            created: 'BlockNumber',
            deposit: 'Balance',
            friends: 'Vec<AccountId>'
        },
        RecoveryConfig: {
            delayPeriod: 'BlockNumber',
            deposit: 'Balance',
            friends: 'Vec<AccountId>',
            threshold: 'u16'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/scheduler/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        Period: '(BlockNumber, u32)',
        Priority: 'u8',
        SchedulePeriod: 'Period',
        SchedulePriority: 'Priority',
        Scheduled: {
            maybeId: 'Option<Bytes>',
            priority: 'SchedulePriority',
            call: 'Call',
            maybePeriodic: 'Option<SchedulePeriod>',
            origin: 'PalletsOrigin'
        },
        ScheduledTo254: {
            maybeId: 'Option<Bytes>',
            priority: 'SchedulePriority',
            call: 'Call',
            maybePeriodic: 'Option<SchedulePeriod>'
        },
        TaskAddress: '(BlockNumber, u32)'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/session/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    SessionKeys: [
        {
            methods: {
                decode_session_keys: {
                    description: 'Decode the given public session keys.',
                    params: [
                        {
                            name: 'encoded',
                            type: 'Bytes'
                        }
                    ],
                    type: 'Option<Vec<(Bytes, KeyTypeId)>>'
                },
                generate_session_keys: {
                    description: 'Generate a set of session keys with optionally using the given seed.',
                    params: [
                        {
                            name: 'seed',
                            type: 'Option<Bytes>'
                        }
                    ],
                    type: 'Bytes'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/session/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$session$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/session/runtime.js [app-ssr] (ecmascript)");
;
const keyTypes = {
    // key for beefy
    BeefyKey: '[u8; 33]',
    // default to Substrate master defaults, 4 keys (polkadot master, 5 keys)
    Keys: 'SessionKeys4',
    SessionKeys1: '(AccountId)',
    SessionKeys2: '(AccountId, AccountId)',
    SessionKeys3: '(AccountId, AccountId, AccountId)',
    SessionKeys4: '(AccountId, AccountId, AccountId, AccountId)',
    SessionKeys5: '(AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys6: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys6B: '(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
    SessionKeys7: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys7B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
    SessionKeys8: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys8B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
    SessionKeys9: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys9B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)',
    SessionKeys10: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)',
    SessionKeys10B: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)'
};
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$session$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        ...keyTypes,
        FullIdentification: 'Exposure',
        IdentificationTuple: '(ValidatorId, FullIdentification)',
        MembershipProof: {
            session: 'SessionIndex',
            trieNodes: 'Vec<Bytes>',
            validatorCount: 'ValidatorCount'
        },
        SessionIndex: 'u32',
        ValidatorCount: 'u32'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/society/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        Bid: {
            who: 'AccountId',
            kind: 'BidKind',
            value: 'Balance'
        },
        BidKind: {
            _enum: {
                Deposit: 'Balance',
                Vouch: '(AccountId, Balance)'
            }
        },
        // a society-specific Judgement (not the same as identity Judgement)
        SocietyJudgement: {
            _enum: [
                'Rebid',
                'Reject',
                'Approve'
            ]
        },
        // a society-specific Vote
        SocietyVote: {
            _enum: [
                'Skeptic',
                'Reject',
                'Approve'
            ]
        },
        StrikeCount: 'u32',
        VouchingStatus: {
            _enum: [
                'Vouching',
                'Banned'
            ]
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/staking/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    StakingApi: [
        {
            methods: {
                nominations_quota: {
                    description: 'Returns the nominations quota for a nominator with a given balance.',
                    params: [
                        {
                            name: 'balance',
                            type: 'Balance'
                        }
                    ],
                    type: 'u32'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/staking/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$staking$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/staking/runtime.js [app-ssr] (ecmascript)");
;
const deprecated = {
    Points: 'u32',
    EraPoints: {
        total: 'Points',
        individual: 'Vec<Points>'
    }
};
const phragmen = {
    CompactAssignments: 'CompactAssignmentsWith16',
    CompactAssignmentsWith16: {
        votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',
        votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',
        votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',
        votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',
        votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',
        votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',
        votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',
        votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',
        votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',
        votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',
        votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',
        votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',
        votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',
        votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',
        votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',
        votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>'
    },
    CompactAssignmentsWith24: {
        votes1: 'Vec<(NominatorIndexCompact, ValidatorIndexCompact)>',
        votes2: 'Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>',
        votes3: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>',
        votes4: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>',
        votes5: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>',
        votes6: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>',
        votes7: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>',
        votes8: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>',
        votes9: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>',
        votes10: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>',
        votes11: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>',
        votes12: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>',
        votes13: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>',
        votes14: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>',
        votes15: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>',
        votes16: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>',
        votes17: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>',
        votes18: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>',
        votes19: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>',
        votes20: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>',
        votes21: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>',
        votes22: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>',
        votes23: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>',
        votes24: 'Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>'
    },
    CompactAssignmentsTo265: 'CompactAssignmentsWith16',
    CompactAssignmentsTo257: {
        votes1: 'Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>',
        votes2: 'Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>',
        votes3: 'Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>',
        votes4: 'Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>',
        votes5: 'Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>',
        votes6: 'Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>',
        votes7: 'Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>',
        votes8: 'Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>',
        votes9: 'Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>',
        votes10: 'Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>',
        votes11: 'Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>',
        votes12: 'Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>',
        votes13: 'Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>',
        votes14: 'Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>',
        votes15: 'Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>',
        votes16: 'Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>'
    },
    CompactScore: '(ValidatorIndex, OffchainAccuracy)',
    CompactScoreCompact: '(ValidatorIndexCompact, OffchainAccuracyCompact)',
    ElectionCompute: {
        // in previous versions the last entry was "AuthorityId"
        // (since no data attached, and it is via SCALE can rename)
        _enum: [
            'OnChain',
            'Signed',
            'Unsigned'
        ]
    },
    ElectionPhase: {
        _enum: {
            Off: null,
            Signed: null,
            Unsigned: '(bool, BlockNumber)',
            Emergency: null
        }
    },
    ElectionResult: {
        compute: 'ElectionCompute',
        slotStake: 'Balance',
        electedStashes: 'Vec<AccountId>',
        exposures: 'Vec<(AccountId, Exposure)>'
    },
    ElectionResultToSpec10: {
        electedStashes: 'Vec<AccountId>',
        exposures: 'Vec<(AccountId, Exposure<AccountId, Balance>)>',
        compute: 'ElectionCompute'
    },
    ElectionScore: '[u128; 3]',
    ElectionSize: {
        validators: 'Compact<ValidatorIndex>',
        nominators: 'Compact<NominatorIndex>'
    },
    ElectionStatus: {
        _enum: {
            Close: 'Null',
            Open: 'BlockNumber'
        }
    },
    ExtendedBalance: 'u128',
    RawSolution: 'RawSolutionWith16',
    RawSolutionWith16: {
        compact: 'CompactAssignmentsWith16',
        score: 'ElectionScore',
        round: 'u32'
    },
    RawSolutionWith24: {
        compact: 'CompactAssignmentsWith24',
        score: 'ElectionScore',
        round: 'u32'
    },
    RawSolutionTo265: 'RawSolutionWith16',
    ReadySolution: {
        supports: 'SolutionSupports',
        score: 'ElectionScore',
        compute: 'ElectionCompute'
    },
    RoundSnapshot: {
        voters: 'Vec<(AccountId, VoteWeight, Vec<AccountId>)>',
        targets: 'Vec<AccountId>'
    },
    SeatHolder: {
        who: 'AccountId',
        stake: 'Balance',
        deposit: 'Balance'
    },
    SignedSubmission: {
        _fallback: 'SignedSubmissionTo276',
        who: 'AccountId',
        deposit: 'Balance',
        solution: 'RawSolution',
        reward: 'Balance'
    },
    SignedSubmissionTo276: {
        who: 'AccountId',
        deposit: 'Balance',
        solution: 'RawSolution'
    },
    SignedSubmissionOf: 'SignedSubmission',
    SolutionOrSnapshotSize: {
        voters: 'Compact<u32>',
        targets: 'Compact<u32>'
    },
    SolutionSupport: {
        total: 'ExtendedBalance',
        voters: 'Vec<(AccountId, ExtendedBalance)>'
    },
    SolutionSupports: 'Vec<(AccountId, SolutionSupport)>',
    Supports: 'SolutionSupports',
    SubmissionIndicesOf: 'BTreeMap<ElectionScore, u32>',
    Voter: {
        votes: 'Vec<AccountId>',
        stake: 'Balance',
        deposit: 'Balance'
    },
    VoteWeight: 'u64'
};
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$staking$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        ...deprecated,
        ...phragmen,
        ActiveEraInfo: {
            index: 'EraIndex',
            start: 'Option<Moment>'
        },
        EraIndex: 'u32',
        EraRewardPoints: {
            total: 'RewardPoint',
            individual: 'BTreeMap<AccountId, RewardPoint>'
        },
        EraRewards: {
            total: 'u32',
            rewards: 'Vec<u32>'
        },
        Exposure: {
            total: 'Compact<Balance>',
            own: 'Compact<Balance>',
            others: 'Vec<IndividualExposure>'
        },
        Forcing: {
            _enum: [
                'NotForcing',
                'ForceNew',
                'ForceNone',
                'ForceAlways'
            ]
        },
        IndividualExposure: {
            who: 'AccountId',
            value: 'Compact<Balance>'
        },
        KeyType: 'AccountId',
        MomentOf: 'Moment',
        Nominations: {
            targets: 'Vec<AccountId>',
            submittedIn: 'EraIndex',
            suppressed: 'bool'
        },
        NominatorIndex: 'u32',
        NominatorIndexCompact: 'Compact<NominatorIndex>',
        OffchainAccuracy: 'PerU16',
        OffchainAccuracyCompact: 'Compact<OffchainAccuracy>',
        PhragmenScore: '[u128; 3]',
        Points: 'u32',
        RewardDestination: {
            _enum: {
                Staked: 'Null',
                Stash: 'Null',
                Controller: 'Null',
                Account: 'AccountId',
                None: 'Null'
            }
        },
        RewardPoint: 'u32',
        SlashJournalEntry: {
            who: 'AccountId',
            amount: 'Balance',
            ownSlash: 'Balance'
        },
        SlashingSpansTo204: {
            spanIndex: 'SpanIndex',
            lastStart: 'EraIndex',
            prior: 'Vec<EraIndex>'
        },
        SlashingSpans: {
            spanIndex: 'SpanIndex',
            lastStart: 'EraIndex',
            lastNonzeroSlash: 'EraIndex',
            prior: 'Vec<EraIndex>'
        },
        SpanIndex: 'u32',
        SpanRecord: {
            slashed: 'Balance',
            paidOut: 'Balance'
        },
        StakingLedgerTo223: {
            stash: 'AccountId',
            total: 'Compact<Balance>',
            active: 'Compact<Balance>',
            unlocking: 'Vec<UnlockChunk>'
        },
        StakingLedgerTo240: {
            _fallback: 'StakingLedgerTo223',
            stash: 'AccountId',
            total: 'Compact<Balance>',
            active: 'Compact<Balance>',
            unlocking: 'Vec<UnlockChunk>',
            lastReward: 'Option<EraIndex>'
        },
        StakingLedger: {
            stash: 'AccountId',
            total: 'Compact<Balance>',
            active: 'Compact<Balance>',
            unlocking: 'Vec<UnlockChunk>',
            claimedRewards: 'Vec<EraIndex>'
        },
        UnappliedSlashOther: '(AccountId, Balance)',
        UnappliedSlash: {
            validator: 'AccountId',
            own: 'Balance',
            others: 'Vec<UnappliedSlashOther>',
            reporters: 'Vec<AccountId>',
            payout: 'Balance'
        },
        UnlockChunk: {
            value: 'Compact<Balance>',
            era: 'Compact<BlockNumber>'
        },
        ValidatorIndex: 'u16',
        ValidatorIndexCompact: 'Compact<ValidatorIndex>',
        ValidatorPrefs: 'ValidatorPrefsWithBlocked',
        ValidatorPrefsWithCommission: {
            commission: 'Compact<Perbill>'
        },
        ValidatorPrefsWithBlocked: {
            commission: 'Compact<Perbill>',
            blocked: 'bool'
        },
        ValidatorPrefsTo196: {
            validatorPayment: 'Compact<Balance>'
        },
        ValidatorPrefsTo145: {
            unstakeThreshold: 'Compact<u32>',
            validatorPayment: 'Compact<Balance>'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/statement/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    ValidateStatement: [
        {
            methods: {
                valdate_statement: {
                    description: 'Validate the statement.',
                    params: [
                        {
                            name: 'source',
                            type: 'StatementStoreStatementSource'
                        },
                        {
                            name: 'statement',
                            type: 'SpStatementStoreStatement'
                        }
                    ],
                    type: 'Result<StatementStoreValidStatement, StatementStoreInvalidStatement>'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/statement/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$statement$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/statement/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$statement$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        StatementStoreStatementSource: {
            _enum: [
                'Chain',
                'Network',
                'Local'
            ]
        },
        StatementStoreValidStatement: {
            maxCount: 'u32',
            maxSize: 'u32'
        },
        StatementStoreInvalidStatement: {
            _enum: [
                'BadProof',
                'NoProof',
                'InternalError'
            ]
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/support/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        WeightToFeeCoefficient: {
            coeffInteger: 'Balance',
            coeffFrac: 'Perbill',
            negative: 'bool',
            degree: 'u8'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/syncstate/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    genSyncSpec: {
        description: 'Returns the json-serialized chainspec running the node, with a sync state.',
        endpoint: 'sync_state_genSyncSpec',
        params: [
            {
                name: 'raw',
                type: 'bool'
            }
        ],
        type: 'Json'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/syncstate/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$syncstate$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/syncstate/rpc.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$syncstate$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    types: {}
};
}),
"[project]/node_modules/@polkadot/types/interfaces/system/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    accountNextIndex: {
        alias: [
            'account_nextIndex'
        ],
        description: 'Retrieves the next accountIndex as available on the node',
        params: [
            {
                name: 'accountId',
                type: 'AccountId'
            }
        ],
        type: 'Index'
    },
    addLogFilter: {
        description: 'Adds the supplied directives to the current log filter',
        isUnsafe: true,
        params: [
            {
                name: 'directives',
                type: 'Text'
            }
        ],
        type: 'Null'
    },
    addReservedPeer: {
        description: 'Adds a reserved peer',
        isUnsafe: true,
        params: [
            {
                name: 'peer',
                type: 'Text'
            }
        ],
        type: 'Text'
    },
    chain: {
        description: 'Retrieves the chain',
        params: [],
        type: 'Text'
    },
    chainType: {
        description: 'Retrieves the chain type',
        params: [],
        type: 'ChainType'
    },
    dryRun: {
        alias: [
            'system_dryRunAt'
        ],
        description: 'Dry run an extrinsic at a given block',
        isUnsafe: true,
        params: [
            {
                name: 'extrinsic',
                type: 'Bytes'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'ApplyExtrinsicResult'
    },
    health: {
        description: 'Return health status of the node',
        noErrorLog: true,
        params: [],
        type: 'Health'
    },
    localListenAddresses: {
        description: 'The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example',
        params: [],
        type: 'Vec<Text>'
    },
    localPeerId: {
        description: 'Returns the base58-encoded PeerId of the node',
        params: [],
        type: 'Text'
    },
    name: {
        description: 'Retrieves the node name',
        params: [],
        type: 'Text'
    },
    networkState: {
        alias: [
            'system_unstable_networkState'
        ],
        description: 'Returns current state of the network',
        isUnsafe: true,
        params: [],
        type: 'NetworkState'
    },
    nodeRoles: {
        description: 'Returns the roles the node is running as',
        params: [],
        type: 'Vec<NodeRole>'
    },
    peers: {
        description: 'Returns the currently connected peers',
        isUnsafe: true,
        params: [],
        type: 'Vec<PeerInfo>'
    },
    properties: {
        description: 'Get a custom set of properties as a JSON object, defined in the chain spec',
        params: [],
        type: 'ChainProperties'
    },
    removeReservedPeer: {
        description: 'Remove a reserved peer',
        isUnsafe: true,
        params: [
            {
                name: 'peerId',
                type: 'Text'
            }
        ],
        type: 'Text'
    },
    reservedPeers: {
        description: 'Returns the list of reserved peers',
        params: [],
        type: 'Vec<Text>'
    },
    resetLogFilter: {
        description: 'Resets the log filter to Substrate defaults',
        isUnsafe: true,
        params: [],
        type: 'Null'
    },
    syncState: {
        description: 'Returns the state of the syncing of the node',
        params: [],
        type: 'SyncState'
    },
    version: {
        description: 'Retrieves the version of the node',
        params: [],
        type: 'Text'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/system/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    AccountNonceApi: [
        {
            methods: {
                account_nonce: {
                    description: 'The API to query account nonce (aka transaction index)',
                    params: [
                        {
                            name: 'accountId',
                            type: 'AccountId'
                        }
                    ],
                    type: 'Index'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/system/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$system$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/system/rpc.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$system$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/system/runtime.js [app-ssr] (ecmascript)");
;
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$system$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$system$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        AccountInfo: 'AccountInfoWithTripleRefCount',
        AccountInfoWithRefCountU8: {
            nonce: 'Index',
            refcount: 'u8',
            data: 'AccountData'
        },
        AccountInfoWithRefCount: {
            _fallback: 'AccountInfoWithRefCountU8',
            nonce: 'Index',
            refcount: 'RefCount',
            data: 'AccountData'
        },
        AccountInfoWithDualRefCount: {
            _fallback: 'AccountInfoWithRefCount',
            nonce: 'Index',
            consumers: 'RefCount',
            providers: 'RefCount',
            data: 'AccountData'
        },
        // original naming
        AccountInfoWithProviders: 'AccountInfoWithDualRefCount',
        AccountInfoWithTripleRefCount: {
            _fallback: 'AccountInfoWithDualRefCount',
            nonce: 'Index',
            consumers: 'RefCount',
            providers: 'RefCount',
            sufficients: 'RefCount',
            data: 'AccountData'
        },
        ApplyExtrinsicResult: 'Result<DispatchOutcome, TransactionValidityError>',
        ApplyExtrinsicResultPre6: 'Result<DispatchOutcomePre6, TransactionValidityError>',
        ArithmeticError: {
            _enum: [
                'Underflow',
                'Overflow',
                'DivisionByZero'
            ]
        },
        BlockLength: {
            max: 'PerDispatchClassU32'
        },
        BlockWeights: {
            baseBlock: 'Weight',
            maxBlock: 'Weight',
            perClass: 'PerDispatchClassWeightsPerClass'
        },
        ChainProperties: 'GenericChainProperties',
        ChainType: {
            _enum: {
                Development: 'Null',
                Local: 'Null',
                Live: 'Null',
                Custom: 'Text'
            }
        },
        ConsumedWeight: 'PerDispatchClassWeight',
        DigestOf: 'Digest',
        DispatchClass: {
            _enum: [
                'Normal',
                'Operational',
                'Mandatory'
            ]
        },
        DispatchError: {
            _enum: {
                Other: 'Null',
                CannotLookup: 'Null',
                BadOrigin: 'Null',
                Module: 'DispatchErrorModule',
                ConsumerRemaining: 'Null',
                NoProviders: 'Null',
                TooManyConsumers: 'Null',
                Token: 'TokenError',
                Arithmetic: 'ArithmeticError',
                Transactional: 'TransactionalError',
                Exhausted: 'Null',
                Corruption: 'Null',
                Unavailable: 'Null'
            }
        },
        DispatchErrorPre6: {
            _enum: {
                Other: 'Null',
                CannotLookup: 'Null',
                BadOrigin: 'Null',
                Module: 'DispatchErrorModulePre6',
                ConsumerRemaining: 'Null',
                NoProviders: 'Null',
                TooManyConsumers: 'Null',
                Token: 'TokenError',
                Arithmetic: 'ArithmeticError',
                Transactional: 'TransactionalError'
            }
        },
        DispatchErrorPre6First: {
            // The enum was modified mid-flight, affecting asset chains -
            // https://github.com/paritytech/substrate/pull/10382/files#diff-e4e016b33a82268b6208dc974eea841bad47597865a749fee2f937eb6fdf67b4R498
            _enum: {
                Other: 'Null',
                CannotLookup: 'Null',
                BadOrigin: 'Null',
                Module: 'DispatchErrorModulePre6',
                ConsumerRemaining: 'Null',
                NoProviders: 'Null',
                Token: 'TokenError',
                Arithmetic: 'ArithmeticError',
                Transactional: 'TransactionalError'
            }
        },
        DispatchErrorModuleU8: {
            index: 'u8',
            error: 'u8'
        },
        DispatchErrorModuleU8a: {
            index: 'u8',
            error: '[u8; 4]'
        },
        DispatchErrorModule: 'DispatchErrorModuleU8a',
        DispatchErrorModulePre6: 'DispatchErrorModuleU8',
        DispatchErrorTo198: {
            module: 'Option<u8>',
            error: 'u8'
        },
        DispatchInfo: {
            weight: 'Weight',
            class: 'DispatchClass',
            paysFee: 'Pays'
        },
        DispatchInfoTo190: {
            weight: 'Weight',
            class: 'DispatchClass'
        },
        DispatchInfoTo244: {
            weight: 'Weight',
            class: 'DispatchClass',
            paysFee: 'bool'
        },
        DispatchOutcome: 'Result<(), DispatchError>',
        DispatchOutcomePre6: 'Result<(), DispatchErrorPre6>',
        DispatchResult: 'Result<(), DispatchError>',
        DispatchResultOf: 'DispatchResult',
        DispatchResultTo198: 'Result<(), Text>',
        Event: 'GenericEvent',
        EventId: '[u8; 2]',
        EventIndex: 'u32',
        EventRecord: {
            phase: 'Phase',
            event: 'Event',
            topics: 'Vec<Hash>'
        },
        Health: {
            peers: 'u64',
            isSyncing: 'bool',
            shouldHavePeers: 'bool'
        },
        InvalidTransaction: {
            _enum: {
                Call: 'Null',
                Payment: 'Null',
                Future: 'Null',
                Stale: 'Null',
                BadProof: 'Null',
                AncientBirthBlock: 'Null',
                ExhaustsResources: 'Null',
                Custom: 'u8',
                BadMandatory: 'Null',
                MandatoryDispatch: 'Null',
                BadSigner: 'Null'
            }
        },
        Key: 'Bytes',
        LastRuntimeUpgradeInfo: {
            specVersion: 'Compact<u32>',
            specName: 'Text'
        },
        NetworkState: {
            peerId: 'Text',
            listenedAddresses: 'Vec<Text>',
            externalAddresses: 'Vec<Text>',
            connectedPeers: 'HashMap<Text, Peer>',
            notConnectedPeers: 'HashMap<Text, NotConnectedPeer>',
            averageDownloadPerSec: 'u64',
            averageUploadPerSec: 'u64',
            peerset: 'NetworkStatePeerset'
        },
        NetworkStatePeerset: {
            messageQueue: 'u64',
            nodes: 'HashMap<Text, NetworkStatePeersetInfo>'
        },
        NetworkStatePeersetInfo: {
            connected: 'bool',
            reputation: 'i32'
        },
        NodeRole: {
            _enum: {
                Full: 'Null',
                LightClient: 'Null',
                Authority: 'Null',
                UnknownRole: 'u8'
            }
        },
        NotConnectedPeer: {
            knownAddresses: 'Vec<Text>',
            latestPingTime: 'Option<PeerPing>',
            versionString: 'Option<Text>'
        },
        Peer: {
            enabled: 'bool',
            endpoint: 'PeerEndpoint',
            knownAddresses: 'Vec<Text>',
            latestPingTime: 'PeerPing',
            open: 'bool',
            versionString: 'Text'
        },
        PeerEndpoint: {
            listening: 'PeerEndpointAddr'
        },
        PeerEndpointAddr: {
            _alias: {
                localAddr: 'local_addr',
                sendBackAddr: 'send_back_addr'
            },
            localAddr: 'Text',
            sendBackAddr: 'Text'
        },
        PeerPing: {
            nanos: 'u64',
            secs: 'u64'
        },
        PeerInfo: {
            peerId: 'Text',
            roles: 'Text',
            protocolVersion: 'u32',
            bestHash: 'Hash',
            bestNumber: 'BlockNumber'
        },
        PerDispatchClassU32: {
            normal: 'u32',
            operational: 'u32',
            mandatory: 'u32'
        },
        PerDispatchClassWeight: {
            normal: 'Weight',
            operational: 'Weight',
            mandatory: 'Weight'
        },
        PerDispatchClassWeightsPerClass: {
            normal: 'WeightPerClass',
            operational: 'WeightPerClass',
            mandatory: 'WeightPerClass'
        },
        Phase: {
            _enum: {
                ApplyExtrinsic: 'u32',
                Finalization: 'Null',
                Initialization: 'Null'
            }
        },
        RawOrigin: {
            _enum: {
                Root: 'Null',
                Signed: 'AccountId',
                None: 'Null'
            }
        },
        RefCount: 'u32',
        RefCountTo259: 'u8',
        SyncState: {
            startingBlock: 'BlockNumber',
            currentBlock: 'BlockNumber',
            highestBlock: 'Option<BlockNumber>'
        },
        SystemOrigin: 'RawOrigin',
        TokenError: {
            _enum: [
                'NoFunds',
                'WouldDie',
                'BelowMinimum',
                'CannotCreate',
                'UnknownAsset',
                'Frozen',
                'Unsupported',
                // these are dropped, but still in older versions
                // (if this adjusts, will need to take a re-look)
                'Underflow',
                'Overflow'
            ]
        },
        TransactionValidityError: {
            _enum: {
                Invalid: 'InvalidTransaction',
                Unknown: 'UnknownTransaction'
            }
        },
        TransactionalError: {
            _enum: [
                'LimitReached',
                'NoLayer'
            ]
        },
        UnknownTransaction: {
            _enum: {
                CannotLookup: 'Null',
                NoUnsignedValidator: 'Null',
                Custom: 'u8'
            }
        },
        WeightPerClass: {
            baseExtrinsic: 'Weight',
            maxExtrinsic: 'Option<Weight>',
            maxTotal: 'Option<Weight>',
            reserved: 'Option<Weight>'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/treasury/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        Bounty: {
            proposer: 'AccountId',
            value: 'Balance',
            fee: 'Balance',
            curatorDeposit: 'Balance',
            bond: 'Balance',
            status: 'BountyStatus'
        },
        BountyIndex: 'u32',
        BountyStatus: {
            _enum: {
                Proposed: 'Null',
                Approved: 'Null',
                Funded: 'Null',
                CuratorProposed: 'BountyStatusCuratorProposed',
                Active: 'BountyStatusActive',
                PendingPayout: 'BountyStatusPendingPayout'
            }
        },
        BountyStatusActive: {
            curator: 'AccountId',
            updateDue: 'BlockNumber'
        },
        BountyStatusCuratorProposed: {
            curator: 'AccountId'
        },
        BountyStatusPendingPayout: {
            curator: 'AccountId',
            beneficiary: 'AccountId',
            unlockAt: 'BlockNumber'
        },
        OpenTip: {
            reason: 'Hash',
            who: 'AccountId',
            finder: 'AccountId',
            deposit: 'Balance',
            closes: 'Option<BlockNumber>',
            tips: 'Vec<OpenTipTip>',
            findersFee: 'bool'
        },
        OpenTipTo225: {
            reason: 'Hash',
            who: 'AccountId',
            finder: 'Option<OpenTipFinderTo225>',
            closes: 'Option<BlockNumber>',
            tips: 'Vec<OpenTipTip>'
        },
        OpenTipFinderTo225: '(AccountId, Balance)',
        OpenTipTip: '(AccountId, Balance)',
        TreasuryProposal: {
            proposer: 'AccountId',
            value: 'Balance',
            beneficiary: 'AccountId',
            bond: 'Balance'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/txpayment/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        Multiplier: 'Fixed128'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/txqueue/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    TaggedTransactionQueue: [
        {
            methods: {
                validate_transaction: {
                    description: 'Validate the transaction.',
                    params: [
                        {
                            name: 'source',
                            type: 'TransactionSource'
                        },
                        {
                            name: 'tx',
                            type: 'Extrinsic'
                        },
                        {
                            name: 'blockHash',
                            type: 'BlockHash'
                        }
                    ],
                    type: 'TransactionValidity'
                }
            },
            version: 3
        },
        {
            methods: {
                validate_transaction: {
                    description: 'Validate the transaction.',
                    params: [
                        {
                            name: 'source',
                            type: 'TransactionSource'
                        },
                        {
                            name: 'tx',
                            type: 'Extrinsic'
                        }
                    ],
                    type: 'TransactionValidity'
                }
            },
            version: 2
        },
        {
            methods: {
                validate_transaction: {
                    description: 'Validate the transaction.',
                    params: [
                        {
                            name: 'tx',
                            type: 'Extrinsic'
                        }
                    ],
                    type: 'TransactionValidity'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/txqueue/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$txqueue$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/txqueue/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$txqueue$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        TransactionSource: {
            _enum: [
                'InBlock',
                'Local',
                'External'
            ]
        },
        TransactionValidity: 'Result<ValidTransaction, TransactionValidityError>',
        ValidTransaction: {
            priority: 'TransactionPriority',
            requires: 'Vec<TransactionTag>',
            provides: 'Vec<TransactionTag>',
            longevity: 'TransactionLongevity',
            propagate: 'bool'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/uniques/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        ClassId: 'u32',
        InstanceId: 'u32',
        DepositBalance: 'Balance',
        DepositBalanceOf: 'Balance',
        ClassDetails: {
            owner: 'AccountId',
            issuer: 'AccountId',
            admin: 'AccountId',
            freezer: 'AccountId',
            totalDeposit: 'DepositBalance',
            freeHolding: 'bool',
            instances: 'u32',
            instanceMetadatas: 'u32',
            attributes: 'u32',
            isFrozen: 'bool'
        },
        DestroyWitness: {
            instances: 'Compact<u32>',
            instanceMetadatas: 'Compact<u32>',
            attributes: 'Compact<u32>'
        },
        InstanceDetails: {
            owner: 'AccountId',
            approved: 'Option<AccountId>',
            isFrozen: 'bool',
            deposit: 'DepositBalance'
        },
        ClassMetadata: {
            deposit: 'DepositBalance',
            data: 'Vec<u8>',
            isFrozen: 'bool'
        },
        InstanceMetadata: {
            deposit: 'DepositBalance',
            data: 'Vec<u8>',
            isFrozen: 'bool'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/utility/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        Multisig: {
            when: 'Timepoint',
            deposit: 'Balance',
            depositor: 'AccountId',
            approvals: 'Vec<AccountId>'
        },
        Timepoint: {
            height: 'BlockNumber',
            index: 'u32'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/vesting/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        VestingInfo: {
            locked: 'Balance',
            perBlock: 'Balance',
            startingBlock: 'BlockNumber'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/attestations/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        BlockAttestations: {
            receipt: 'CandidateReceipt',
            valid: 'Vec<AccountId>',
            invalid: 'Vec<AccountId>'
        },
        IncludedBlocks: {
            actualNumber: 'BlockNumber',
            session: 'SessionIndex',
            randomSeed: 'H256',
            activeParachains: 'Vec<ParaId>',
            paraBlocks: 'Vec<Hash>'
        },
        MoreAttestations: {}
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/bridges/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        BridgedBlockHash: 'H256',
        BridgedBlockNumber: 'BlockNumber',
        BridgedHeader: 'Header',
        BridgeMessageId: '(LaneId, MessageNonce)',
        CallOrigin: {
            _enum: {
                SourceRoot: 'Null',
                TargetAccount: '(AccountId, MultiSigner, MultiSignature)',
                SourceAccount: 'AccountId'
            }
        },
        ChainId: '[u8; 4]',
        DeliveredMessages: {
            begin: 'MessageNonce',
            end: 'MessageNonce',
            // pub type DispatchResultsBitVec = BitVec<Msb0, u8>;
            dispatchResults: 'BitVec'
        },
        DispatchFeePayment: {
            _enum: [
                'AtSourceChain',
                'AtTargetChain'
            ]
        },
        InboundLaneData: {
            relayers: 'Vec<UnrewardedRelayer>',
            lastConfirmedNonce: 'MessageNonce'
        },
        InboundRelayer: 'AccountId',
        InitializationData: {
            header: 'Header',
            authorityList: 'AuthorityList',
            setId: 'SetId',
            isHalted: 'bool'
        },
        LaneId: '[u8; 4]',
        MessageData: {
            payload: 'Bytes',
            fee: 'Balance'
        },
        MessagesDeliveryProofOf: {
            bridgedHeaderHash: 'BlockHash',
            storageProof: 'Vec<Bytes>',
            lane: 'LaneId'
        },
        MessageKey: {
            laneId: 'LaneId',
            nonce: 'MessageNonce'
        },
        MessageNonce: 'u64',
        MessagesProofOf: {
            bridgedHeaderHash: 'BridgedBlockHash',
            storageProof: 'Vec<Bytes>',
            lane: 'LaneId',
            noncesStart: 'MessageNonce',
            noncesEnd: 'MessageNonce'
        },
        OperatingMode: {
            _enum: [
                'Normal',
                'RejectingOutboundMessages',
                'Halted'
            ]
        },
        OutboundLaneData: {
            oldestUnprunedNonce: 'MessageNonce',
            latestReceivedNonce: 'MessageNonce',
            latestGeneratedNonce: 'MessageNonce'
        },
        OutboundMessageFee: 'Balance',
        OutboundPayload: {
            specVersion: 'u32',
            weight: 'Weight',
            origin: 'CallOrigin',
            dispatchFeePayment: 'DispatchFeePayment',
            call: 'Bytes'
        },
        Parameter: 'Null',
        RelayerId: 'AccountId',
        UnrewardedRelayer: {
            relayer: 'RelayerId',
            messages: 'DeliveredMessages'
        },
        UnrewardedRelayersState: {
            unrewardedRelayer_Entries: 'MessageNonce',
            messagesInOldestEntry: 'MessageNonce',
            totalMessages: 'MessageNonce'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/claims/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        StatementKind: {
            _enum: [
                'Regular',
                'Saft'
            ]
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/crowdloan/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        FundIndex: 'u32',
        LastContribution: {
            _enum: {
                Never: 'Null',
                PreEnding: 'u32',
                Ending: 'BlockNumber'
            }
        },
        FundInfo: {
            depositor: 'AccountId',
            verifier: 'Option<MultiSigner>',
            deposit: 'Balance',
            raised: 'Balance',
            end: 'BlockNumber',
            cap: 'Balance',
            lastContribution: 'LastContribution',
            firstPeriod: 'LeasePeriod',
            lastPeriod: 'LeasePeriod',
            trieIndex: 'TrieIndex'
        },
        TrieIndex: 'u32'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/cumulus/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    AuraUnincludedSegmentApi: [
        {
            methods: {
                can_build_upon: {
                    description: 'Whether it is legal to extend the chain',
                    params: [
                        {
                            name: 'includedHash',
                            type: 'BlockHash'
                        },
                        {
                            name: 'slot',
                            type: 'Slot'
                        }
                    ],
                    type: 'bool'
                }
            },
            version: 1
        }
    ],
    CollectCollationInfo: [
        {
            methods: {
                collect_collation_info: {
                    description: 'Collect information about a collation.',
                    params: [
                        {
                            name: 'header',
                            type: 'Header'
                        }
                    ],
                    type: 'CollationInfo'
                }
            },
            version: 2
        },
        {
            methods: {
                collect_collation_info: {
                    description: 'Collect information about a collation.',
                    params: [],
                    type: 'CollationInfoV1'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/cumulus/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$cumulus$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/cumulus/runtime.js [app-ssr] (ecmascript)");
;
const dmpQueue = {
    CollationInfo: {
        upwardMessages: 'Vec<UpwardMessage>',
        horizontalMessages: 'Vec<OutboundHrmpMessage>',
        newValidationCode: 'Option<ValidationCode>',
        processedDownwardMessages: 'u32',
        hrmpWatermark: 'RelayBlockNumber',
        headData: 'HeadData'
    },
    CollationInfoV1: {
        upwardMessages: 'Vec<UpwardMessage>',
        horizontalMessages: 'Vec<OutboundHrmpMessage>',
        newValidationCode: 'Option<ValidationCode>',
        processedDownwardMessages: 'u32',
        hrmpWatermark: 'RelayBlockNumber'
    },
    ConfigData: {
        maxIndividual: 'Weight'
    },
    MessageId: '[u8; 32]',
    OverweightIndex: 'u64',
    PageCounter: 'u32',
    PageIndexData: {
        beginUsed: 'PageCounter',
        endUsed: 'PageCounter',
        overweightCount: 'OverweightIndex'
    }
};
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$cumulus$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: dmpQueue
};
}),
"[project]/node_modules/@polkadot/types/interfaces/finality/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const finalityV1 = {
    methods: {
        best_finalized: {
            description: 'Returns number and hash of the best finalized header known to the bridge module.',
            params: [],
            type: '(BlockNumber, Hash)'
        }
    },
    version: 1
};
const runtime = {
    KusamaFinalityApi: [
        finalityV1
    ],
    PolkadotFinalityApi: [
        finalityV1
    ],
    RococoFinalityApi: [
        finalityV1
    ],
    WestendFinalityApi: [
        finalityV1
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/finality/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$finality$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/finality/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$finality$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {}
};
}),
"[project]/node_modules/@polkadot/types/interfaces/parachains/hrmp.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/* eslint-disable sort-keys */ __turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    HrmpChannel: {
        maxCapacity: 'u32',
        maxTotalSize: 'u32',
        maxMessageSize: 'u32',
        msgCount: 'u32',
        totalSize: 'u32',
        mqcHead: 'Option<Hash>',
        senderDeposit: 'Balance',
        recipientDeposit: 'Balance'
    },
    HrmpChannelId: {
        sender: 'u32',
        receiver: 'u32'
    },
    HrmpOpenChannelRequest: {
        confirmed: 'bool',
        age: 'SessionIndex',
        senderDeposit: 'Balance',
        maxMessageSize: 'u32',
        maxCapacity: 'u32',
        maxTotalSize: 'u32'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/parachains/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const PH_V1_TO_V2 = {
    assumed_validation_data: {
        description: 'Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            },
            {
                name: 'hash',
                type: 'Hash'
            }
        ],
        type: 'Option<(PersistedValidationData, ValidationCodeHash)>'
    },
    availability_cores: {
        description: 'Yields information on all availability cores as relevant to the child block.',
        params: [],
        type: 'Vec<CoreState>'
    },
    candidate_events: {
        description: 'Get a vector of events concerning candidates that occurred within a block.',
        params: [],
        type: 'Vec<CandidateEvent>'
    },
    candidate_pending_availability: {
        description: 'Get the receipt of a candidate pending availability.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            }
        ],
        type: 'Option<CommittedCandidateReceipt>'
    },
    check_validation_outputs: {
        description: 'Checks if the given validation outputs pass the acceptance criteria.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            },
            {
                name: 'outputs',
                type: 'CandidateCommitments'
            }
        ],
        type: 'bool'
    },
    dmq_contents: {
        description: 'Get all the pending inbound messages in the downward message queue for a para.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            }
        ],
        type: 'Vec<InboundDownwardMessage>'
    },
    inbound_hrmp_channels_contents: {
        description: 'Get the contents of all channels addressed to the given recipient.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            }
        ],
        type: 'Vec<InboundHrmpMessage>'
    },
    on_chain_votes: {
        description: 'Scrape dispute relevant from on-chain, backing votes and resolved disputes.',
        params: [],
        type: 'Option<ScrapedOnChainVotes>'
    },
    persisted_validation_data: {
        description: 'Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            },
            {
                name: 'assumption',
                type: 'OccupiedCoreAssumption'
            }
        ],
        type: 'Option<PersistedValidationData>'
    },
    session_index_for_child: {
        description: 'Returns the session index expected at a child of the block.',
        params: [],
        type: 'SessionIndex'
    },
    validation_code: {
        description: 'Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            },
            {
                name: 'assumption',
                type: 'OccupiedCoreAssumption'
            }
        ],
        type: 'Option<ValidationCode>'
    },
    validation_code_by_hash: {
        description: 'Get the validation code from its hash.',
        params: [
            {
                name: 'hash',
                type: 'ValidationCodeHash'
            }
        ],
        type: 'Option<ValidationCode>'
    },
    validator_groups: {
        description: 'Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on',
        params: [],
        type: '(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)'
    },
    validators: {
        description: 'Get the current validators.',
        params: [],
        type: 'Vec<ValidatorId>'
    }
};
const PH_V2_TO_V3 = {
    pvfs_require_precheck: {
        description: 'Returns code hashes of PVFs that require pre-checking by validators in the active set.',
        params: [],
        type: 'Vec<ValidationCodeHash>'
    },
    session_info: {
        description: 'Get the session info for the given session, if stored.',
        params: [
            {
                name: 'index',
                type: 'SessionIndex'
            }
        ],
        type: 'Option<SessionInfo>'
    },
    submit_pvf_check_statement: {
        description: 'Submits a PVF pre-checking statement into the transaction pool.',
        params: [
            {
                name: 'stmt',
                type: 'PvfCheckStatement'
            },
            {
                name: 'signature',
                type: 'ValidatorSignature'
            }
        ],
        type: 'Null'
    },
    validation_code_hash: {
        description: 'Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            },
            {
                name: 'assumption',
                type: 'OccupiedCoreAssumption'
            }
        ],
        type: 'Option<ValidationCodeHash>'
    }
};
const PH_V3 = {
    disputes: {
        description: 'Returns all onchain disputes.',
        params: [],
        type: 'Vec<(SessionIndex, CandidateHash, DisputeState)>'
    }
};
const PH_V4 = {
    session_executor_params: {
        description: 'Returns execution parameters for the session.',
        params: [
            {
                name: 'sessionIndex',
                type: 'SessionIndex'
            }
        ],
        type: 'Option<ExecutorParams>'
    }
};
const PH_V5 = {
    key_ownership_proof: {
        description: 'Returns a merkle proof of a validator session key',
        params: [
            {
                name: 'validatorId',
                type: 'ValidatorId'
            }
        ],
        type: 'Option<OpaqueKeyOwnershipProof>'
    },
    submit_report_dispute_lost: {
        description: 'Submit an unsigned extrinsic to slash validators who lost a dispute about a candidate of a past session',
        params: [
            {
                name: 'disputeProof',
                type: 'DisputeProof'
            },
            {
                name: 'keyOwnershipProof',
                type: 'OpaqueKeyOwnershipProof'
            }
        ],
        type: 'Option<Null>'
    },
    unapplied_slashes: {
        description: 'Returns a list of validators that lost a past session dispute and need to be slashed',
        params: [],
        type: 'Vec<(SessionIndex, CandidateHash, PendingSlashes)>'
    }
};
const PH_V6 = {
    minimum_backing_votes: {
        description: 'Get the minimum number of backing votes for a parachain candidate. This is a staging method! Do not use on production runtimes!',
        params: [],
        type: 'u32'
    }
};
const PH_V7 = {
    async_backing_params: {
        description: 'Returns candidate\'s acceptance limitations for asynchronous backing for a relay parent',
        params: [],
        type: 'AsyncBackingParams'
    },
    para_backing_state: {
        description: 'Returns the state of parachain backing for a given para',
        params: [
            {
                name: 'paraId',
                type: 'ParaId'
            }
        ],
        type: 'Option<BackingState>'
    }
};
const PH_V8 = {
    disabled_validators: {
        description: 'Returns a list of all disabled validators at the given block',
        params: [],
        type: 'ValidatorIndex'
    }
};
const PH_V9 = {
    node_features: {
        description: 'Get node features. This is a staging method! Do not use on production runtimes!',
        params: [],
        type: 'NodeFeatures'
    }
};
const PH_V10 = {
    approval_voting_params: {
        description: 'Approval voting configuration parameters',
        params: [],
        type: 'ApprovalVotingParams'
    }
};
const PH_V11 = {
    claim_queue: {
        description: 'Claim queue',
        params: [],
        type: 'BTreeMap<CoreIndex, Vec<u32>>'
    }
};
const runtime = {
    ParachainHost: [
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3,
                ...PH_V4,
                ...PH_V5,
                ...PH_V6,
                ...PH_V7,
                ...PH_V8,
                ...PH_V9,
                ...PH_V10,
                ...PH_V11
            },
            version: 11
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3,
                ...PH_V4,
                ...PH_V5,
                ...PH_V6,
                ...PH_V7,
                ...PH_V8,
                ...PH_V9,
                ...PH_V10
            },
            version: 10
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3,
                ...PH_V4,
                ...PH_V5,
                ...PH_V6,
                ...PH_V7,
                ...PH_V8,
                ...PH_V9
            },
            version: 9
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3,
                ...PH_V4,
                ...PH_V5,
                ...PH_V6,
                ...PH_V7,
                ...PH_V8
            },
            version: 8
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3,
                ...PH_V4,
                ...PH_V5,
                ...PH_V6,
                ...PH_V7
            },
            version: 7
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3,
                ...PH_V4,
                ...PH_V5,
                ...PH_V6
            },
            version: 6
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3,
                ...PH_V4,
                ...PH_V5
            },
            version: 5
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3,
                ...PH_V4
            },
            version: 4
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3,
                ...PH_V3
            },
            version: 3
        },
        {
            methods: {
                ...PH_V1_TO_V2,
                ...PH_V2_TO_V3
            },
            version: 2
        },
        {
            methods: {
                session_info: {
                    description: 'Get the session info for the given session, if stored.',
                    params: [
                        {
                            name: 'index',
                            type: 'SessionIndex'
                        }
                    ],
                    type: 'Option<OldV1SessionInfo>'
                },
                ...PH_V1_TO_V2
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/parachains/slots.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/* eslint-disable sort-keys */ __turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const SlotRange10 = {
    _enum: [
        'ZeroZero',
        'ZeroOne',
        'ZeroTwo',
        'ZeroThree',
        'OneOne',
        'OneTwo',
        'OneThree',
        'TwoTwo',
        'TwoThree',
        'ThreeThree'
    ]
};
const SlotRange = {
    _enum: [
        'ZeroZero',
        'ZeroOne',
        'ZeroTwo',
        'ZeroThree',
        'ZeroFour',
        'ZeroFive',
        'ZeroSix',
        'ZeroSeven',
        'OneOne',
        'OneTwo',
        'OneThree',
        'OneFour',
        'OneFive',
        'OneSix',
        'OneSeven',
        'TwoTwo',
        'TwoThree',
        'TwoFour',
        'TwoFive',
        'TwoSix',
        'TwoSeven',
        'ThreeThree',
        'ThreeFour',
        'ThreeFive',
        'ThreeSix',
        'ThreeSeven',
        'FourFour',
        'FourFive',
        'FourSix',
        'FourSeven',
        'FiveFive',
        'FiveSix',
        'FiveSeven',
        'SixSix',
        'SixSeven',
        'SevenSeven'
    ]
};
const oldTypes = {
    Bidder: {
        _enum: {
            New: 'NewBidder',
            Existing: 'ParaId'
        }
    },
    IncomingParachain: {
        _enum: {
            Unset: 'NewBidder',
            Fixed: 'IncomingParachainFixed',
            Deploy: 'IncomingParachainDeploy'
        }
    },
    IncomingParachainDeploy: {
        code: 'ValidationCode',
        initialHeadData: 'HeadData'
    },
    IncomingParachainFixed: {
        codeHash: 'Hash',
        codeSize: 'u32',
        initialHeadData: 'HeadData'
    },
    NewBidder: {
        who: 'AccountId',
        sub: 'SubId'
    },
    SubId: 'u32'
};
const __TURBOPACK__default__export__ = {
    ...oldTypes,
    AuctionIndex: 'u32',
    LeasePeriod: 'BlockNumber',
    LeasePeriodOf: 'BlockNumber',
    SlotRange10,
    SlotRange,
    WinningData10: `[WinningDataEntry; ${SlotRange10._enum.length}]`,
    WinningData: `[WinningDataEntry; ${SlotRange._enum.length}]`,
    WinningDataEntry: 'Option<(AccountId, ParaId, BalanceOf)>',
    WinnersData10: 'Vec<WinnersDataTuple10>',
    WinnersData: 'Vec<WinnersDataTuple>',
    WinnersDataTuple10: '(AccountId, ParaId, BalanceOf, SlotRange10)',
    WinnersDataTuple: '(AccountId, ParaId, BalanceOf, SlotRange)'
};
}),
"[project]/node_modules/@polkadot/types/interfaces/parachains/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$parachains$2f$hrmp$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/parachains/hrmp.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$parachains$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/parachains/runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$parachains$2f$slots$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/parachains/slots.js [app-ssr] (ecmascript)");
;
;
;
const proposeTypes = {
    ParachainProposal: {
        proposer: 'AccountId',
        genesisHead: 'HeadData',
        validators: 'Vec<ValidatorId>',
        name: 'Bytes',
        balance: 'Balance'
    },
    RegisteredParachainInfo: {
        validators: 'Vec<ValidatorId>',
        proposer: 'AccountId'
    }
};
const cumulusTypes = {
    ServiceQuality: {
        _enum: [
            'Ordered',
            'Fast'
        ]
    }
};
const disputeTypes = {
    DisputeLocation: {
        _enum: [
            'Local',
            'Remote'
        ]
    },
    DisputeResult: {
        _enum: [
            'Valid',
            'Invalid'
        ]
    },
    DisputeState: {
        validatorsFor: 'BitVec',
        validatorsAgainst: 'BitVec',
        start: 'BlockNumber',
        concludedAt: 'Option<BlockNumber>'
    },
    DisputeStatement: {
        _enum: {
            Valid: 'ValidDisputeStatementKind',
            Invalid: 'InvalidDisputeStatementKind'
        }
    },
    DisputeStatementSet: {
        candidateHash: 'CandidateHash',
        session: 'SessionIndex',
        statements: 'Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>'
    },
    ExecutorParam: {
        _enum: {
            Phantom: 'Null',
            MaxMemoryPages: 'u32',
            StackLogicalMax: 'u32',
            StackNativeMax: 'u32',
            PrecheckingMaxMemory: 'u64',
            PvfPrepTimeout: '(PvfPrepTimeoutKind, u64)',
            PvfExecTimeout: '(PvfExecTimeoutKind, u64)'
        }
    },
    ExecutorParamsHash: 'Hash',
    ExecutorParams: 'Vec<ExecutorParam>',
    ExplicitDisputeStatement: {
        valid: 'bool',
        candidateHash: 'CandidateHash',
        session: 'SessionIndex'
    },
    InvalidDisputeStatementKind: {
        _enum: [
            'Explicit'
        ]
    },
    MultiDisputeStatementSet: 'Vec<DisputeStatementSet>',
    PvfExecTimeoutKind: {
        _enum: [
            'Backing',
            'Approval'
        ]
    },
    PvfPrepTimeoutKind: {
        _enum: [
            'Precheck',
            'Lenient'
        ]
    },
    ValidDisputeStatementKind: {
        _enum: {
            Explicit: 'Null',
            BackingSeconded: 'Hash',
            BackingValid: 'Hash',
            ApprovalChecking: 'Null'
        }
    }
};
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$parachains$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        ...cumulusTypes,
        ...disputeTypes,
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$parachains$2f$hrmp$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
        ...proposeTypes,
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$parachains$2f$slots$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
        AbridgedCandidateReceipt: {
            parachainIndex: 'ParaId',
            relayParent: 'Hash',
            headData: 'HeadData',
            collator: 'CollatorId',
            signature: 'CollatorSignature',
            povBlockHash: 'Hash',
            commitments: 'CandidateCommitments'
        },
        AbridgedHostConfiguration: {
            maxCodeSize: 'u32',
            maxHeadDataSize: 'u32',
            maxUpwardQueueCount: 'u32',
            maxUpwardQueueSize: 'u32',
            maxUpwardMessageSize: 'u32',
            maxUpwardMessageNumPerCandidate: 'u32',
            hrmpMaxMessageNumPerCandidate: 'u32',
            validationUpgradeFrequency: 'BlockNumber',
            validationUpgradeDelay: 'BlockNumber'
        },
        AbridgedHrmpChannel: {
            maxCapacity: 'u32',
            maxTotalSize: 'u32',
            maxMessageSize: 'u32',
            msgCount: 'u32',
            totalSize: 'u32',
            mqcHead: 'Option<Hash>'
        },
        ApprovalVotingParams: {
            maxApprovalCoalesceCount: 'u32'
        },
        AssignmentId: 'AccountId',
        AssignmentKind: {
            _enum: {
                Parachain: 'Null',
                Parathread: '(CollatorId, u32)'
            }
        },
        AsyncBackingParams: {
            maxCandidateDepth: 'u32',
            allowedAncestryLen: 'u32'
        },
        AttestedCandidate: {
            candidate: 'AbridgedCandidateReceipt',
            validityVotes: 'Vec<ValidityAttestation>',
            validatorIndices: 'BitVec'
        },
        AuthorityDiscoveryId: 'AccountId',
        AvailabilityBitfield: 'BitVec',
        AvailabilityBitfieldRecord: {
            bitfield: 'AvailabilityBitfield',
            submittedTt: 'BlockNumber'
        },
        BackedCandidate: {
            candidate: 'CommittedCandidateReceipt',
            validityVotes: 'Vec<ValidityAttestation>',
            validatorIndices: 'BitVec'
        },
        BackingState: {
            constraints: 'Constraints',
            pendingAvailability: 'Vec<CandidatePendingAvailability>'
        },
        BufferedSessionChange: {
            applyAt: 'BlockNumber',
            validators: 'Vec<ValidatorId>',
            queued: 'Vec<ValidatorId>',
            sessionIndex: 'SessionIndex'
        },
        CandidateCommitments: {
            upwardMessages: 'Vec<UpwardMessage>',
            horizontalMessages: 'Vec<OutboundHrmpMessage>',
            newValidationCode: 'Option<ValidationCode>',
            headData: 'HeadData',
            processedDownwardMessages: 'u32',
            hrmpWatermark: 'BlockNumber'
        },
        CandidateDescriptor: {
            paraId: 'ParaId',
            relayParent: 'RelayChainHash',
            collatorId: 'CollatorId',
            persistedValidationDataHash: 'Hash',
            povHash: 'Hash',
            erasureRoot: 'Hash',
            signature: 'CollatorSignature',
            paraHead: 'Hash',
            validationCodeHash: 'ValidationCodeHash'
        },
        CandidateEvent: {
            _enum: {
                CandidateBacked: '(CandidateReceipt, HeadData, CoreIndex, GroupIndex)',
                CandidateIncluded: '(CandidateReceipt, HeadData, CoreIndex, GroupIndex)',
                CandidateTimedOut: '(CandidateReceipt, HeadData, CoreIndex)'
            }
        },
        CandidateHash: 'Hash',
        CandidateInfo: {
            who: 'AccountId',
            deposit: 'Balance'
        },
        CandidatePendingAvailability: {
            core: 'CoreIndex',
            hash: 'CandidateHash',
            descriptor: 'CandidateDescriptor',
            availabilityVotes: 'BitVec',
            backers: 'BitVec',
            relayParentNumber: 'BlockNumber',
            backedInNumber: 'BlockNumber',
            backingGroup: 'GroupIndex'
        },
        CandidateReceipt: {
            descriptor: 'CandidateDescriptor',
            commitmentsHash: 'Hash'
        },
        GlobalValidationData: {
            maxCodeSize: 'u32',
            maxHeadDataSize: 'u32',
            blockNumber: 'BlockNumber'
        },
        CollatorId: 'H256',
        CollatorSignature: 'Signature',
        CommittedCandidateReceipt: {
            descriptor: 'CandidateDescriptor',
            commitments: 'CandidateCommitments'
        },
        Constraints: {
            minRelayParentNumber: 'BlockNumber',
            maxPovSize: 'u32',
            maxCodeSize: 'u32',
            umpRemaining: 'u32',
            umpRemainingBytes: 'u32',
            maxUmpNumPerCandidate: 'u32',
            dmpRemainingMessages: 'Vec<BlockNumber>',
            hrmpInbound: 'InboundHrmpLimitations',
            hrmpChannelsOut: 'HashMap<ParaId, OutboundHrmpChannelLimitations>',
            maxHrmpNumPerCandidate: 'u32',
            requiredParent: 'HeadData',
            validationCodeHash: 'ValidationCodeHash',
            upgradeRestriction: 'Option<UpgradeRestriction>',
            futureValidationCode: 'Option<(BlockNumber, ValidationCodeHash)>'
        },
        CoreAssignment: {
            core: 'CoreIndex',
            paraId: 'ParaId',
            kind: 'AssignmentKind',
            groupIdx: 'GroupIndex'
        },
        CoreIndex: 'u32',
        CoreOccupied: {
            _enum: {
                Parathread: 'ParathreadEntry',
                Parachain: 'Null'
            }
        },
        CoreState: {
            _enum: {
                Occupied: 'OccupiedCore',
                Scheduled: 'ScheduledCore',
                Free: 'Null'
            }
        },
        DisputeProof: {
            timeSlot: 'DisputesTimeSlot',
            kind: 'SlashingOffenceKind',
            validatorIndex: 'ValidatorIndex',
            validatorId: 'ValidatorId'
        },
        DisputesTimeSlot: {
            sessionIndex: 'SessionIndex',
            candidateHash: 'CandidateHash'
        },
        DoubleVoteReport: {
            identity: 'ValidatorId',
            first: '(Statement, ValidatorSignature)',
            second: '(Statement, ValidatorSignature)',
            proof: 'MembershipProof',
            signingContext: 'SigningContext'
        },
        DownwardMessage: 'Bytes',
        GroupIndex: 'u32',
        GroupRotationInfo: {
            sessionStartBlock: 'BlockNumber',
            groupRotationFrequency: 'BlockNumber',
            now: 'BlockNumber'
        },
        GlobalValidationSchedule: {
            maxCodeSize: 'u32',
            maxHeadDataSize: 'u32',
            blockNumber: 'BlockNumber'
        },
        HeadData: 'Bytes',
        HostConfiguration: {
            maxCodeSize: 'u32',
            maxHeadDataSize: 'u32',
            maxUpwardQueueCount: 'u32',
            maxUpwardQueueSize: 'u32',
            maxUpwardMessageSize: 'u32',
            maxUpwardMessageNumPerCandidate: 'u32',
            hrmpMaxMessageNumPerCandidate: 'u32',
            validationUpgradeFrequency: 'BlockNumber',
            validationUpgradeDelay: 'BlockNumber',
            maxPovSize: 'u32',
            maxDownwardMessageSize: 'u32',
            preferredDispatchableUpwardMessagesStepWeight: 'Weight',
            hrmpMaxParachainOutboundChannels: 'u32',
            hrmpMaxParathreadOutboundChannels: 'u32',
            hrmpOpenRequestTtl: 'u32',
            hrmpSenderDeposit: 'Balance',
            hrmpRecipientDeposit: 'Balance',
            hrmpChannelMaxCapacity: 'u32',
            hrmpChannelMaxTotalSize: 'u32',
            hrmpMaxParachainInboundChannels: 'u32',
            hrmpMaxParathreadInboundChannels: 'u32',
            hrmpChannelMaxMessageSize: 'u32',
            codeRetentionPeriod: 'BlockNumber',
            parathreadCores: 'u32',
            parathreadRetries: 'u32',
            groupRotationFrequency: 'BlockNumber',
            chainAvailabilityPeriod: 'BlockNumber',
            threadAvailabilityPeriod: 'BlockNumber',
            schedulingLookahead: 'u32',
            maxValidatorsPerCore: 'Option<u32>',
            maxValidators: 'Option<u32>',
            disputePeriod: 'SessionIndex',
            disputePostConclusionAcceptancePeriod: 'BlockNumber',
            disputeMaxSpamSlots: 'u32',
            disputeConclusionByTimeOutPeriod: 'BlockNumber',
            noShowSlots: 'u32',
            nDelayTranches: 'u32',
            zerothDelayTrancheWidth: 'u32',
            neededApprovals: 'u32',
            relayVrfModuloSamples: 'u32'
        },
        InboundDownwardMessage: {
            pubSentAt: 'BlockNumber',
            pubMsg: 'DownwardMessage'
        },
        InboundHrmpMessage: {
            sentAt: 'BlockNumber',
            data: 'Bytes'
        },
        InboundHrmpLimitations: {
            validWatermarks: 'Vec<BlockNumber>'
        },
        InboundHrmpMessages: 'Vec<InboundHrmpMessage>',
        LocalValidationData: {
            parentHead: 'HeadData',
            balance: 'Balance',
            codeUpgradeAllowed: 'Option<BlockNumber>'
        },
        MessageIngestionType: {
            downwardMessages: 'Vec<InboundDownwardMessage>',
            horizontalMessages: 'BTreeMap<ParaId, InboundHrmpMessages>'
        },
        MessageQueueChain: 'RelayChainHash',
        NodeFeatures: 'BitVec',
        OccupiedCore: {
            nextUpOnAvailable: 'Option<ScheduledCore>',
            occupiedSince: 'BlockNumber',
            timeOutAt: 'BlockNumber',
            nextUpOnTimeOut: 'Option<ScheduledCore>',
            availability: 'BitVec',
            groupResponsible: 'GroupIndex',
            candidateHash: 'CandidateHash',
            candidateDescriptor: 'CandidateDescriptor'
        },
        OccupiedCoreAssumption: {
            _enum: [
                'Included,',
                'TimedOut',
                'Free'
            ]
        },
        OutboundHrmpChannelLimitations: {
            bytesRemaining: 'u32',
            messagesRemaining: 'u32'
        },
        OutboundHrmpMessage: {
            recipient: 'u32',
            data: 'Bytes'
        },
        PendingSlashes: {
            _alias: {
                slashKeys: 'keys'
            },
            slashKeys: 'BTreeMap<ValidatorIndex, ValidatorId>',
            kind: 'SlashingOffenceKind'
        },
        ParachainDispatchOrigin: {
            _enum: [
                'Signed',
                'Parachain',
                'Root'
            ]
        },
        ParachainInherentData: {
            validationData: 'PersistedValidationData',
            relayChainState: 'StorageProof',
            downwardMessages: 'Vec<InboundDownwardMessage>',
            horizontalMessages: 'BTreeMap<ParaId, VecInboundHrmpMessage>'
        },
        ParachainsInherentData: {
            bitfields: 'SignedAvailabilityBitfields',
            backedCandidates: 'Vec<BackedCandidate>',
            disputes: 'MultiDisputeStatementSet',
            parentHeader: 'Header'
        },
        ParaGenesisArgs: {
            genesisHead: 'Bytes',
            validationCode: 'Bytes',
            parachain: 'bool'
        },
        ParaId: 'u32',
        ParaInfo: {
            manager: 'AccountId',
            deposit: 'Balance',
            locked: 'bool'
        },
        ParaLifecycle: {
            _enum: [
                'Onboarding',
                'Parathread',
                'Parachain',
                'UpgradingToParachain',
                'DowngradingToParathread',
                'OutgoingParathread',
                'OutgoingParachain'
            ]
        },
        ParaPastCodeMeta: {
            upgradeTimes: 'Vec<ReplacementTimes>',
            lastPruned: 'Option<BlockNumber>'
        },
        ParaScheduling: {
            _enum: [
                'Always',
                'Dynamic'
            ]
        },
        ParathreadClaim: '(ParaId, CollatorId)',
        ParathreadClaimQueue: {
            queue: 'Vec<QueuedParathread>',
            nextCoreOffset: 'u32'
        },
        ParathreadEntry: {
            claim: 'ParathreadClaim',
            retries: 'u32'
        },
        ParaValidatorIndex: 'u32',
        PersistedValidationData: {
            parentHead: 'HeadData',
            relayParentNumber: 'RelayChainBlockNumber',
            relayParentStorageRoot: 'Hash',
            maxPovSize: 'u32'
        },
        PvfCheckStatement: {
            accept: 'bool',
            subject: 'ValidationCodeHash',
            sessionIndex: 'SessionIndex',
            validatorIndex: 'ParaValidatorIndex'
        },
        QueuedParathread: {
            claim: 'ParathreadEntry',
            coreOffset: 'u32'
        },
        RelayBlockNumber: 'u32',
        RelayChainBlockNumber: 'RelayBlockNumber',
        RelayHash: 'Hash',
        RelayChainHash: 'RelayHash',
        Remark: '[u8; 32]',
        ReplacementTimes: {
            expectedAt: 'BlockNumber',
            activatedAt: 'BlockNumber'
        },
        Retriable: {
            _enum: {
                Never: 'Null',
                WithRetries: 'u32'
            }
        },
        ScheduledCore: {
            paraId: 'ParaId',
            collator: 'Option<CollatorId>'
        },
        Scheduling: {
            _enum: [
                'Always',
                'Dynamic'
            ]
        },
        ScrapedOnChainVotes: {
            session: 'SessionIndex',
            backingValidatorsPerCandidate: 'Vec<(CandidateReceipt, Vec<(ParaValidatorIndex, ValidityAttestation)>)>',
            disputes: 'MultiDisputeStatementSet'
        },
        SessionInfo: {
            activeValidatorIndices: 'Vec<ParaValidatorIndex>',
            randomSeed: '[u8; 32]',
            disputePeriod: 'SessionIndex',
            validators: 'Vec<ValidatorId>',
            discoveryKeys: 'Vec<AuthorityDiscoveryId>',
            assignmentKeys: 'Vec<AssignmentId>',
            validatorGroups: 'Vec<Vec<ValidatorIndex>>',
            nCores: 'u32',
            zerothDelayTrancheWidth: 'u32',
            relayVrfModuloSamples: 'u32',
            nDelayTranches: 'u32',
            noShowSlots: 'u32',
            neededApprovals: 'u32'
        },
        OldV1SessionInfo: {
            validators: 'Vec<ValidatorId>',
            discoveryKeys: 'Vec<AuthorityDiscoveryId>',
            assignmentKeys: 'Vec<AssignmentId>',
            validatorGroups: 'Vec<Vec<ParaValidatorIndex>>',
            nCores: 'u32',
            zerothDelayTrancheWidth: 'u32',
            relayVrfModuloSamples: 'u32',
            nDelayTranches: 'u32',
            noShowSlots: 'u32',
            neededApprovals: 'u32'
        },
        SessionInfoValidatorGroup: 'Vec<ParaValidatorIndex>',
        SignedAvailabilityBitfield: {
            payload: 'BitVec',
            validatorIndex: 'ParaValidatorIndex',
            signature: 'ValidatorSignature'
        },
        SignedAvailabilityBitfields: 'Vec<SignedAvailabilityBitfield>',
        SigningContext: {
            sessionIndex: 'SessionIndex',
            parentHash: 'Hash'
        },
        SlashingOffenceKind: {
            _enum: [
                'ForInvalid',
                'AgainstValid'
            ]
        },
        Statement: {
            _enum: {
                Never: 'Null',
                Candidate: 'Hash',
                Valid: 'Hash',
                Invalid: 'Hash'
            }
        },
        TransientValidationData: {
            maxCodeSize: 'u32',
            maxHeadDataSize: 'u32',
            balance: 'Balance',
            codeUpgradeAllowed: 'Option<BlockNumber>',
            dmqLength: 'u32'
        },
        UpgradeGoAhead: {
            _enum: [
                'Abort',
                'GoAhead'
            ]
        },
        UpgradeRestriction: {
            _enum: [
                'Present'
            ]
        },
        UpwardMessage: 'Bytes',
        ValidationFunctionParams: {
            maxCodeSize: 'u32',
            relayChainHeight: 'RelayChainBlockNumber',
            codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'
        },
        ValidationCode: 'Bytes',
        ValidationCodeHash: 'Hash',
        ValidationData: {
            persisted: 'PersistedValidationData',
            transient: 'TransientValidationData'
        },
        ValidationDataType: {
            validationData: 'ValidationData',
            relayChainState: 'Vec<Bytes>'
        },
        ValidatorSignature: 'Signature',
        ValidityAttestation: {
            _enum: {
                Never: 'Null',
                Implicit: 'ValidatorSignature',
                Explicit: 'ValidatorSignature'
            }
        },
        MessagingStateSnapshot: {
            relayDispatchQueueSize: '(u32, u32)',
            egressChannels: 'Vec<MessagingStateSnapshotEgressEntry>'
        },
        MessagingStateSnapshotEgressEntry: '(ParaId, AbridgedHrmpChannel)',
        SystemInherentData: 'ParachainInherentData',
        VecInboundHrmpMessage: 'Vec<InboundHrmpMessage>'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/poll/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        Approvals: '[bool; 4]'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/purchase/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        AccountStatus: {
            validity: 'AccountValidity',
            freeBalance: 'Balance',
            lockedBalance: 'Balance',
            signature: 'Vec<u8>',
            vat: 'Permill'
        },
        AccountValidity: {
            _enum: [
                'Invalid',
                'Initiated',
                'Pending',
                'ValidLow',
                'ValidHigh',
                'Completed'
            ]
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/dryRunApi/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    DryRunApi: [
        {
            methods: {
                dry_run_call: {
                    description: 'Dry run call',
                    params: [
                        {
                            name: 'origin',
                            type: 'OriginCaller'
                        },
                        {
                            name: 'call',
                            type: 'RuntimeCall'
                        }
                    ],
                    type: 'Result<CallDryRunEffects, XcmDryRunApiError>'
                },
                dry_run_xcm: {
                    description: 'Dry run XCM program',
                    params: [
                        {
                            name: 'originLocation',
                            type: 'VersionedMultiLocation'
                        },
                        {
                            name: 'xcm',
                            type: 'VersionedXcm'
                        }
                    ],
                    type: 'Result<XcmDryRunEffects, XcmDryRunApiError>'
                }
            },
            version: 1
        },
        {
            methods: {
                dry_run_call: {
                    description: 'Dry run call',
                    params: [
                        {
                            name: 'origin',
                            type: 'OriginCaller'
                        },
                        {
                            name: 'call',
                            type: 'RuntimeCall'
                        },
                        {
                            name: 'resultXcmsVersion',
                            type: 'u32'
                        }
                    ],
                    type: 'Result<CallDryRunEffects, XcmDryRunApiError>'
                },
                dry_run_xcm: {
                    description: 'Dry run XCM program',
                    params: [
                        {
                            name: 'originLocation',
                            type: 'VersionedMultiLocation'
                        },
                        {
                            name: 'xcm',
                            type: 'VersionedXcm'
                        }
                    ],
                    type: 'Result<XcmDryRunEffects, XcmDryRunApiError>'
                }
            },
            version: 2
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/dryRunApi/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$dryRunApi$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/dryRunApi/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$dryRunApi$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        PostDispatchInfo: {
            actualWeight: 'Option<Weight>',
            paysFee: 'Pays'
        },
        DispatchResultWithPostInfo: 'Result<PostDispatchInfo, DispatchError>',
        CallDryRunEffects: {
            executionResult: 'DispatchResultWithPostInfo',
            emittedEvents: 'Vec<Event>',
            localXcm: 'Option<VersionedXcm>',
            forwardedXcms: 'Vec<(VersionedMultiLocation, Vec<VersionedXcm>)>'
        },
        XcmDryRunEffects: {
            executionResult: 'OutcomeV4',
            emittedEvents: 'Vec<Event>',
            forwardedXcms: 'Vec<(VersionedMultiLocation, Vec<VersionedXcm>)>'
        },
        XcmDryRunApiError: {
            _enum: [
                'Unimplemented',
                'VersionedConversionFailed'
            ]
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/xcm/v0.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v0",
    ()=>v0
]);
const v0 = {
    FungibilityV0: 'FungibilityV1',
    WildFungibilityV0: 'WildFungibilityV1',
    AssetInstanceV0: {
        _enum: {
            Undefined: 'Null',
            Index8: 'u8',
            Index16: 'Compact<u16>',
            Index32: 'Compact<u32>',
            Index64: 'Compact<u64>',
            Index128: 'Compact<u128>',
            Array4: '[u8; 4]',
            Array8: '[u8; 8]',
            Array16: '[u8; 16]',
            Array32: '[u8; 32]',
            Blob: 'Vec<u8>'
        }
    },
    JunctionV0: {
        _enum: {
            Parent: 'Null',
            Parachain: 'Compact<u32>',
            AccountId32: {
                network: 'NetworkId',
                id: 'AccountId'
            },
            AccountIndex64: {
                network: 'NetworkId',
                index: 'Compact<u64>'
            },
            AccountKey20: {
                network: 'NetworkId',
                key: '[u8; 20]'
            },
            PalletInstance: 'u8',
            GeneralIndex: 'Compact<u128>',
            GeneralKey: 'Vec<u8>',
            OnlyChild: 'Null',
            Plurality: {
                id: 'BodyId',
                part: 'BodyPart'
            }
        }
    },
    MultiAssetV0: {
        _enum: {
            None: 'Null',
            All: 'Null',
            AllFungible: 'Null',
            AllNonFungible: 'Null',
            AllAbstractFungible: 'Vec<u8>',
            AllAbstractNonFungible: 'Vec<u8>',
            AllConcreteFungible: 'MultiLocationV0',
            AllConcreteNonFungible: 'MultiLocationV0',
            AbstractFungible: {
                id: 'Vec<u8>',
                instance: 'Compact<u128>'
            },
            AbstractNonFungible: {
                class: 'Vec<u8>',
                instance: 'AssetInstanceV0'
            },
            ConcreteFungible: {
                id: 'MultiLocationV0',
                amount: 'Compact<u128>'
            },
            ConcreteNonFungible: {
                class: 'MultiLocationV0',
                instance: 'AssetInstanceV0'
            }
        }
    },
    MultiLocationV0: {
        _enum: {
            Here: 'Null',
            X1: 'JunctionV0',
            X2: '(JunctionV0, JunctionV0)',
            X3: '(JunctionV0, JunctionV0, JunctionV0)',
            X4: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
            X5: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
            X6: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
            X7: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)',
            X8: '(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)'
        }
    },
    OriginKindV0: {
        _enum: [
            'Native',
            'SovereignAccount',
            'Superuser',
            'Xcm'
        ]
    },
    ResponseV0: {
        _enum: {
            Assets: 'Vec<MultiAssetV0>'
        }
    },
    XcmV0: {
        _enum: {
            WithdrawAsset: {
                assets: 'Vec<MultiAssetV0>',
                effects: 'Vec<XcmOrderV0>'
            },
            ReserveAssetDeposit: {
                assets: 'Vec<MultiAssetV0>',
                effects: 'Vec<XcmOrderV0>'
            },
            ReceiveTeleportedAsset: {
                assets: 'Vec<MultiAssetV0>',
                effects: 'Vec<XcmOrderV0>'
            },
            QueryResponse: {
                queryId: 'Compact<u64>',
                response: 'ResponseV0'
            },
            TransferAsset: {
                assets: 'Vec<MultiAssetV0>',
                dest: 'MultiLocationV0'
            },
            TransferReserveAsset: {
                assets: 'Vec<MultiAssetV0>',
                dest: 'MultiLocationV0',
                effects: 'Vec<XcmOrderV0>'
            },
            Transact: {
                originType: 'XcmOriginKind',
                requireWeightAtMost: 'u64',
                call: 'DoubleEncodedCall'
            },
            HrmpNewChannelOpenRequest: {
                sender: 'Compact<u32>',
                maxMessageSize: 'Compact<u32>',
                maxCapacity: 'Compact<u32>'
            },
            HrmpChannelAccepted: {
                recipient: 'Compact<u32>'
            },
            HrmpChannelClosing: {
                initiator: 'Compact<u32>',
                sender: 'Compact<u32>',
                recipient: 'Compact<u32>'
            },
            RelayedFrom: {
                who: 'MultiLocationV0',
                message: 'XcmV0'
            }
        }
    },
    XcmErrorV0: {
        _enum: {
            Undefined: 'Null',
            Overflow: 'Null',
            Unimplemented: 'Null',
            UnhandledXcmVersion: 'Null',
            UnhandledXcmMessage: 'Null',
            UnhandledEffect: 'Null',
            EscalationOfPrivilege: 'Null',
            UntrustedReserveLocation: 'Null',
            UntrustedTeleportLocation: 'Null',
            DestinationBufferOverflow: 'Null',
            SendFailed: 'Null',
            CannotReachDestination: '(MultiLocation, Xcm)',
            MultiLocationFull: 'Null',
            FailedToDecode: 'Null',
            BadOrigin: 'Null',
            ExceedsMaxMessageSize: 'Null',
            FailedToTransactAsset: 'Null',
            WeightLimitReached: 'Weight',
            Wildcard: 'Null',
            TooMuchWeightRequired: 'Null',
            NotHoldingFees: 'Null',
            WeightNotComputable: 'Null',
            Barrier: 'Null',
            NotWithdrawable: 'Null',
            LocationCannotHold: 'Null',
            TooExpensive: 'Null',
            AssetNotFound: 'Null',
            RecursionLimitReached: 'Null'
        }
    },
    XcmOrderV0: {
        _enum: {
            Null: 'Null',
            DepositAsset: {
                assets: 'Vec<MultiAssetV0>',
                dest: 'MultiLocationV0'
            },
            DepositReserveAsset: {
                assets: 'Vec<MultiAssetV0>',
                dest: 'MultiLocationV0',
                effects: 'Vec<XcmOrderV0>'
            },
            ExchangeAsset: {
                give: 'Vec<MultiAssetV0>',
                receive: 'Vec<MultiAssetV0>'
            },
            InitiateReserveWithdraw: {
                assets: 'Vec<MultiAssetV0>',
                reserve: 'MultiLocationV0',
                effects: 'Vec<XcmOrderV0>'
            },
            InitiateTeleport: {
                assets: 'Vec<MultiAssetV0>',
                dest: 'MultiLocationV0',
                effects: 'Vec<XcmOrderV0>'
            },
            QueryHolding: {
                queryId: 'Compact<u64>',
                dest: 'MultiLocationV0',
                assets: 'Vec<MultiAssetV0>'
            },
            BuyExecution: {
                fees: 'MultiAssetV0',
                weight: 'u64',
                debt: 'u64',
                haltOnError: 'bool',
                xcm: 'Vec<XcmV0>'
            }
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/xcm/v1.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v1",
    ()=>v1
]);
const v1 = {
    AssetInstanceV1: {
        _enum: {
            Undefined: 'Null',
            Index: 'Compact<u128>',
            Array4: '[u8; 4]',
            Array8: '[u8; 8]',
            Array16: '[u8; 16]',
            Array32: '[u8; 32]',
            Blob: 'Bytes'
        }
    },
    FungibilityV1: {
        _enum: {
            Fungible: 'Compact<u128>',
            NonFungible: 'AssetInstanceV1'
        }
    },
    JunctionV1: {
        _enum: {
            Parachain: 'Compact<u32>',
            AccountId32: {
                network: 'NetworkId',
                id: 'AccountId'
            },
            AccountIndex64: {
                network: 'NetworkId',
                index: 'Compact<u64>'
            },
            AccountKey20: {
                network: 'NetworkId',
                key: '[u8; 20]'
            },
            PalletInstance: 'u8',
            GeneralIndex: 'Compact<u128>',
            GeneralKey: 'Vec<u8>',
            OnlyChild: 'Null',
            Plurality: {
                id: 'BodyId',
                part: 'BodyPart'
            }
        }
    },
    JunctionsV1: {
        _enum: {
            Here: 'Null',
            X1: 'JunctionV1',
            X2: '(JunctionV1, JunctionV1)',
            X3: '(JunctionV1, JunctionV1, JunctionV1)',
            X4: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
            X5: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
            X6: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
            X7: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)',
            X8: '(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)'
        }
    },
    MultiAssetsV1: 'Vec<MultiAssetV1>',
    MultiAssetV1: {
        id: 'XcmAssetId',
        fungibility: 'FungibilityV1'
    },
    MultiAssetFilterV1: {
        _enum: {
            Definite: 'MultiAssetsV1',
            Wild: 'WildMultiAssetV1'
        }
    },
    MultiLocationV1: {
        parents: 'u8',
        interior: 'JunctionsV1'
    },
    OriginKindV1: 'OriginKindV0',
    ResponseV1: {
        _enum: {
            Assets: 'MultiAssetsV1'
        }
    },
    WildFungibilityV1: {
        _enum: [
            'Fungible',
            'NonFungible'
        ]
    },
    WildMultiAssetV1: {
        _enum: {
            All: 'Null',
            AllOf: {
                id: 'XcmAssetId',
                fungibility: 'WildFungibilityV1'
            }
        }
    },
    XcmV1: {
        _enum: {
            WithdrawAsset: {
                assets: 'MultiAssetsV1',
                effects: 'Vec<XcmOrderV1>'
            },
            ReserveAssetDeposit: {
                assets: 'MultiAssetsV1',
                effects: 'Vec<XcmOrderV1>'
            },
            ReceiveTeleportedAsset: {
                assets: 'MultiAssetsV1',
                effects: 'Vec<XcmOrderV1>'
            },
            QueryResponse: {
                queryId: 'Compact<u64>',
                response: 'ResponseV1'
            },
            TransferAsset: {
                assets: 'MultiAssetsV1',
                dest: 'MultiLocationV1'
            },
            TransferReserveAsset: {
                assets: 'MultiAssetsV1',
                dest: 'MultiLocationV1',
                effects: 'Vec<XcmOrderV1>'
            },
            Transact: {
                originType: 'XcmOriginKind',
                requireWeightAtMost: 'u64',
                call: 'DoubleEncodedCall'
            },
            HrmpNewChannelOpenRequest: {
                sender: 'Compact<u32>',
                maxMessageSize: 'Compact<u32>',
                maxCapacity: 'Compact<u32>'
            },
            HrmpChannelAccepted: {
                recipient: 'Compact<u32>'
            },
            HrmpChannelClosing: {
                initiator: 'Compact<u32>',
                sender: 'Compact<u32>',
                recipient: 'Compact<u32>'
            },
            RelayedFrom: {
                who: 'MultiLocationV1',
                message: 'XcmV1'
            }
        }
    },
    XcmErrorV1: {
        _enum: {
            Undefined: 'Null',
            Overflow: 'Null',
            Unimplemented: 'Null',
            UnhandledXcmVersion: 'Null',
            UnhandledXcmMessage: 'Null',
            UnhandledEffect: 'Null',
            EscalationOfPrivilege: 'Null',
            UntrustedReserveLocation: 'Null',
            UntrustedTeleportLocation: 'Null',
            DestinationBufferOverflow: 'Null',
            SendFailed: 'Null',
            CannotReachDestination: '(MultiLocationV1, XcmV1)',
            MultiLocationFull: 'Null',
            FailedToDecode: 'Null',
            BadOrigin: 'Null',
            ExceedsMaxMessageSize: 'Null',
            FailedToTransactAsset: 'Null',
            WeightLimitReached: 'Weight',
            Wildcard: 'Null',
            TooMuchWeightRequired: 'Null',
            NotHoldingFees: 'Null',
            WeightNotComputable: 'Null',
            Barrier: 'Null',
            NotWithdrawable: 'Null',
            LocationCannotHold: 'Null',
            TooExpensive: 'Null',
            AssetNotFound: 'Null',
            DestinationUnsupported: 'Null',
            RecursionLimitReached: 'Null'
        }
    },
    XcmOrderV1: {
        _enum: {
            Noop: 'Null',
            DepositAsset: {
                assets: 'MultiAssetFilterV1',
                maxAssets: 'u32',
                beneficiary: 'MultiLocationV1'
            },
            DepositReserveAsset: {
                assets: 'MultiAssetFilterV1',
                maxAssets: 'u32',
                dest: 'MultiLocationV1',
                effects: 'Vec<XcmOrderV1>'
            },
            ExchangeAsset: {
                give: 'MultiAssetFilterV1',
                receive: 'MultiAssetsV1'
            },
            InitiateReserveWithdraw: {
                assets: 'MultiAssetFilterV1',
                reserve: 'MultiLocationV1',
                effects: 'Vec<XcmOrderV1>'
            },
            InitiateTeleport: {
                assets: 'MultiAssetFilterV1',
                dest: 'MultiLocationV1',
                effects: 'Vec<XcmOrderV1>'
            },
            QueryHolding: {
                queryId: 'Compact<u64>',
                dest: 'MultiLocationV1',
                assets: 'MultiAssetFilterV1'
            },
            BuyExecution: {
                fees: 'MultiAssetV1',
                weight: 'u64',
                debt: 'u64',
                haltOnError: 'bool',
                instructions: 'Vec<XcmV1>'
            }
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/xcm/v2.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v2",
    ()=>v2
]);
const v2 = {
    AssetIdV2: {
        _enum: {
            Concrete: 'MultiLocationV2',
            Abstract: 'Bytes'
        }
    },
    AssetInstanceV2: {
        _enum: {
            Undefined: 'Null',
            Index: 'Compact<u128>',
            Array4: '[u8;4]',
            Array8: '[u8;8]',
            Array16: '[u8;16]',
            Array32: '[u8;32]',
            Blob: 'Bytes'
        }
    },
    BodyIdV2: {
        _enum: {
            Unit: 'Null',
            Named: 'Bytes',
            Index: 'Compact<u32>',
            Executive: 'Null',
            Technical: 'Null',
            Legislative: 'Null',
            Judicial: 'Null',
            Defense: 'Null',
            Administration: 'Null',
            Treasury: 'Null'
        }
    },
    BodyPartV2: {
        _enum: {
            Voice: 'Null',
            Members: {
                count: 'Compact<u32>'
            },
            Fraction: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            },
            AtLeastProportion: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            },
            MoreThanProportion: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            }
        }
    },
    NetworkIdV2: {
        _enum: {
            Any: 'Null',
            Named: 'Bytes',
            Polkadot: 'Null',
            Kusama: 'Null'
        }
    },
    JunctionV2: {
        _enum: {
            Parachain: 'Compact<u32>',
            AccountId32: {
                network: 'NetworkIdV2',
                id: '[u8; 32]'
            },
            AccountIndex64: {
                network: 'NetworkIdV2',
                index: 'Compact<u64>'
            },
            AccountKey20: {
                network: 'NetworkIdV2',
                key: '[u8; 20]'
            },
            PalletInstance: 'u8',
            GeneralIndex: 'Compact<u128>',
            GeneralKey: 'Bytes',
            OnlyChild: 'Null',
            Plurality: {
                id: 'BodyIdV2',
                part: 'BodyPartV2'
            }
        }
    },
    JunctionsV2: {
        _enum: {
            Here: 'Null',
            X1: 'JunctionV2',
            X2: '(JunctionV2, JunctionV2)',
            X3: '(JunctionV2, JunctionV2, JunctionV2)',
            X4: '(JunctionV2, JunctionV2, JunctionV2, JunctionV2)',
            X5: '(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)',
            X6: '(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)',
            X7: '(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)',
            X8: '(JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2, JunctionV2)'
        }
    },
    FungibilityV2: {
        _enum: {
            Fungible: 'Compact<u128>',
            NonFungible: 'AssetInstanceV2'
        }
    },
    InteriorMultiLocationV2: 'JunctionsV2',
    MultiAssetV2: {
        id: 'AssetIdV2',
        fun: 'FungibilityV2'
    },
    MultiAssetsV2: 'Vec<MultiAssetV2>',
    MultiAssetFilterV2: {
        _enum: {
            Definite: 'MultiAssetsV2',
            Wild: 'WildMultiAssetV2'
        }
    },
    MultiLocationV2: {
        parents: 'u8',
        interior: 'JunctionsV2'
    },
    OriginKindV2: {
        _enum: {
            Native: 'Null',
            SovereignAccount: 'Null',
            Superuser: 'Null',
            Xcm: 'Null'
        }
    },
    WildFungibilityV2: {
        _enum: {
            Fungible: 'Null',
            NonFungible: 'Null'
        }
    },
    ResponseV2: {
        _enum: {
            Null: 'Null',
            Assets: 'MultiAssetsV2',
            ExecutionResult: 'Option<(u32, XcmErrorV2)>',
            Version: 'u32'
        }
    },
    ResponseV2Error: '(u32, XcmErrorV2)',
    WeightLimitV2: {
        _enum: {
            Unlimited: 'Null',
            Limited: 'Compact<u64>'
        }
    },
    InstructionV2: {
        _enum: {
            WithdrawAsset: 'MultiAssetsV2',
            ReserveAssetDeposited: 'MultiAssetsV2',
            ReceiveTeleportedAsset: 'MultiAssetsV2',
            QueryResponse: {
                queryId: 'Compact<u64>',
                response: 'ResponseV2',
                maxWeight: 'Compact<u64>'
            },
            TransferAsset: {
                assets: 'MultiAssetsV2',
                beneficiary: 'MultiLocationV2'
            },
            TransferReserveAsset: {
                assets: 'MultiAssetsV2',
                dest: 'MultiLocationV2',
                xcm: 'XcmV2'
            },
            Transact: {
                originType: 'XcmOriginKind',
                requireWeightAtMost: 'Compact<u64>',
                call: 'DoubleEncodedCall'
            },
            HrmpNewChannelOpenRequest: {
                sender: 'Compact<u32>',
                maxMessageSize: 'Compact<u32>',
                maxCapacity: 'Compact<u32>'
            },
            HrmpChannelAccepted: {
                recipient: 'Compact<u32>'
            },
            HrmpChannelClosing: {
                initiator: 'Compact<u32>',
                sender: 'Compact<u32>',
                recipient: 'Compact<u32>'
            },
            ClearOrigin: 'Null',
            DescendOrigin: 'InteriorMultiLocationV2',
            ReportError: {
                queryId: 'Compact<u64>',
                dest: 'MultiLocationV2',
                maxResponseWeight: 'Compact<u64>'
            },
            DepositAsset: {
                assets: 'MultiAssetFilterV2',
                maxAssets: 'Compact<u32>',
                beneficiary: 'MultiLocationV2'
            },
            DepositReserveAsset: {
                assets: 'MultiAssetFilterV2',
                maxAssets: 'Compact<u32>',
                dest: 'MultiLocationV2',
                xcm: 'XcmV2'
            },
            ExchangeAsset: {
                give: 'MultiAssetFilterV2',
                receive: 'MultiAssetsV2'
            },
            InitiateReserveWithdraw: {
                assets: 'MultiAssetFilterV2',
                reserve: 'MultiLocationV2',
                xcm: 'XcmV2'
            },
            InitiateTeleport: {
                assets: 'MultiAssetFilterV2',
                dest: 'MultiLocationV2',
                xcm: 'XcmV2'
            },
            QueryHolding: {
                queryId: 'Compact<u64>',
                dest: 'MultiLocationV2',
                assets: 'MultiAssetFilterV2',
                maxResponseWeight: 'Compact<u64>'
            },
            BuyExecution: {
                fees: 'MultiAssetV2',
                weightLimit: 'WeightLimitV2'
            },
            RefundSurplus: 'Null',
            SetErrorHandler: 'XcmV2<RuntimeCall>',
            SetAppendix: 'XcmV2<RuntimeCall>',
            ClearError: 'Null',
            ClaimAsset: {
                assets: 'MultiAssetsV2',
                ticket: 'MultiLocationV2'
            },
            Trap: 'Compact<u64>',
            SubscribeVersion: {
                queryId: 'Compact<u64>',
                maxResponseWeight: 'Compact<u64>'
            },
            UnsubscribeVersion: 'Null'
        }
    },
    WildMultiAssetV2: {
        _enum: {
            All: 'Null',
            AllOf: {
                id: 'AssetIdV2',
                fun: 'WildFungibilityV2'
            }
        }
    },
    XcmV2: 'Vec<InstructionV2>',
    XcmErrorV2: {
        _enum: {
            Overflow: 'Null',
            Unimplemented: 'Null',
            UntrustedReserveLocation: 'Null',
            UntrustedTeleportLocation: 'Null',
            MultiLocationFull: 'Null',
            MultiLocationNotInvertible: 'Null',
            BadOrigin: 'Null',
            InvalidLocation: 'Null',
            AssetNotFound: 'Null',
            FailedToTransactAsset: 'Null',
            NotWithdrawable: 'Null',
            LocationCannotHold: 'Null',
            ExceedsMaxMessageSize: 'Null',
            DestinationUnsupported: 'Null',
            Transport: 'Null',
            Unroutable: 'Null',
            UnknownClaim: 'Null',
            FailedToDecode: 'Null',
            MaxWeightInvalid: 'Null',
            NotHoldingFees: 'Null',
            TooExpensive: 'Null',
            Trap: 'u64',
            UnhandledXcmVersion: 'Null',
            WeightLimitReached: 'Weight',
            Barrier: 'Null',
            WeightNotComputable: 'Null'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/xcm/v3.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v3",
    ()=>v3
]);
const v3 = {
    AssetIdV3: {
        _enum: {
            Concrete: 'MultiLocationV3',
            Abstract: 'Bytes'
        }
    },
    BodyIdV3: {
        _enum: {
            Unit: 'Null',
            Moniker: '[u8;4]',
            Index: 'Compact<u32>',
            Executive: 'Null',
            Technical: 'Null',
            Legislative: 'Null',
            Judicial: 'Null',
            Defense: 'Null',
            Administration: 'Null',
            Treasury: 'Null'
        }
    },
    BodyPartV3: {
        _enum: {
            Voice: 'Null',
            Members: {
                count: 'Compact<u32>'
            },
            Fraction: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            },
            AtLeastProportion: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            },
            MoreThanProportion: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            }
        }
    },
    AssetInstanceV3: {
        _enum: {
            Undefined: 'Null',
            Index: 'Compact<u128>',
            Array4: '[u8;4]',
            Array8: '[u8;8]',
            Array16: '[u8;16]',
            Array32: '[u8;32]'
        }
    },
    FungibilityV3: {
        _enum: {
            Fungible: 'Compact<u128>',
            NonFungible: 'AssetInstanceV3'
        }
    },
    InteriorMultiLocationV3: 'JunctionsV3',
    JunctionV3: {
        _enum: {
            Parachain: 'Compact<u32>',
            AccountId32: {
                network: 'Option<NetworkIdV3>',
                id: '[u8;32]'
            },
            AccountIndex64: {
                network: 'Option<NetworkIdV3>',
                index: 'Compact<u64>'
            },
            AccountKey20: {
                network: 'Option<NetworkIdV3>',
                key: '[u8;20]'
            },
            PalletInstance: 'u8',
            GeneralIndex: 'Compact<u128>',
            GeneralKey: {
                length: 'u8',
                data: '[u8;32]'
            },
            OnlyChild: 'Null',
            Plurality: {
                id: 'BodyIdV3',
                part: 'BodyPartV3'
            },
            GlobalConsensus: 'NetworkIdV3'
        }
    },
    JunctionsV3: {
        _enum: {
            Here: 'Null',
            X1: 'JunctionV3',
            X2: '(JunctionV3, JunctionV3)',
            X3: '(JunctionV3, JunctionV3, JunctionV3)',
            X4: '(JunctionV3, JunctionV3, JunctionV3, JunctionV3)',
            X5: '(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)',
            X6: '(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)',
            X7: '(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)',
            X8: '(JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3, JunctionV3)'
        }
    },
    MaybeErrorCodeV3: {
        _enum: {
            Success: 'Null',
            Error: 'Bytes',
            TruncatedError: 'Bytes'
        }
    },
    MaxPalletsInfo: 'u32',
    MultiAssetV3: {
        id: 'AssetIdV3',
        fun: 'FungibilityV3'
    },
    MultiAssetsV3: 'Vec<MultiAssetV3>',
    MultiAssetFilterV3: {
        _enum: {
            Definite: 'MultiAssetsV3',
            Wild: 'WildMultiAssetV3'
        }
    },
    MultiLocationV3: {
        parents: 'u8',
        interior: 'JunctionsV3'
    },
    MaxPalletNameLen: 'u32',
    NetworkIdV3: {
        _enum: {
            ByGenesis: '[u8;32]',
            ByFork: {
                blockNumber: 'u64',
                blockHash: '[u8;32]'
            },
            Polkadot: 'Null',
            Kusama: 'Null',
            Westend: 'Null',
            Rococo: 'Null',
            Wococo: 'Null',
            Ethereum: {
                chainId: 'Compact<u64>'
            },
            BitcoinCore: 'Null',
            BitcoinCash: 'Null',
            PolkadotBulletin: 'Null'
        }
    },
    OriginKindV3: 'OriginKindV2',
    PalletInfoV3: {
        index: 'Compact<u32>',
        name: 'Bytes',
        moduleName: 'Bytes',
        major: 'Compact<u32>',
        minor: 'Compact<u32>',
        patch: 'Compact<u32>'
    },
    WildFungibilityV3: 'WildFungibilityV2',
    QueryResponseInfoV3: {
        destination: 'MultiLocationV3',
        queryId: 'Compact<u64>',
        maxWeight: 'WeightV2'
    },
    ResponseV3: {
        _enum: {
            Null: 'Null',
            Assets: 'MultiAssetsV3',
            ExecutionResult: 'Option<(u32,XcmErrorV3)>',
            Version: 'u32',
            PalletsInfo: 'Vec<PalletInfoV3>',
            DispatchResult: 'MaybeErrorCodeV3'
        }
    },
    XcmErrorV3: {
        _enum: {
            Overflow: 'Null',
            Unimplemented: 'Null',
            UntrustedReserveLocation: 'Null',
            UntrustedTeleportLocation: 'Null',
            LocationFull: 'Null',
            LocationNotInvertible: 'Null',
            BadOrigin: 'Null',
            InvalidLocation: 'Null',
            AssetNotFound: 'Null',
            FailedToTransactAsset: 'Null',
            NotWithdrawable: 'Null',
            LocationCannotHold: 'Null',
            ExceedsMaxMessageSize: 'Null',
            DestinationUnsupported: 'Null',
            Transport: 'Null',
            Unroutable: 'Null',
            UnknownClaim: 'Null',
            FailedToDecode: 'Null',
            MaxWeightInvalid: 'Null',
            NotHoldingFees: 'Null',
            TooExpensive: 'Null',
            Trap: 'u64',
            ExpectationFalse: 'Null',
            PalletNotFound: 'Null',
            NameMismatch: 'Null',
            VersionIncompatible: 'Null',
            HoldingWouldOverflow: 'Null',
            ExportError: 'Null',
            ReanchorFailed: 'Null',
            NoDeal: 'Null',
            FeesNotMet: 'Null',
            LockError: 'Null',
            NoPermission: 'Null',
            Unanchored: 'Null',
            NotDepositable: 'Null',
            UnhandledXcmVersion: 'Null',
            WeightLimitReached: 'WeightV2',
            Barrier: 'Null',
            ExceedsStackLimit: 'Null'
        }
    },
    ResponseV3Error: '(u32, XcmErrorV3)',
    ResponseV3Result: 'Option<(u32, ResponseV3Error)>',
    WeightLimitV3: {
        _enum: {
            Unlimited: 'Null',
            Limited: 'WeightV2'
        }
    },
    InstructionV3: {
        _enum: {
            WithdrawAsset: 'MultiAssetsV3',
            ReserveAssetDeposited: 'MultiAssetsV3',
            ReceiveTeleportedAsset: 'MultiAssetsV3',
            QueryResponse: {
                queryId: 'Compact<u64>',
                response: 'ResponseV3',
                maxWeight: 'WeightV2',
                querier: 'Option<MultiLocationV3>'
            },
            TransferAsset: {
                assets: 'MultiAssetsV3',
                beneficiary: 'MultiLocationV3'
            },
            TransferReserveAsset: {
                assets: 'MultiAssetsV3',
                dest: 'MultiLocationV3',
                xcm: 'XcmV3'
            },
            Transact: {
                originKind: 'XcmOriginKind',
                requireWeightAtMost: 'WeightV2',
                call: 'DoubleEncodedCall'
            },
            HrmpNewChannelOpenRequest: {
                sender: 'Compact<u32>',
                maxMessageSize: 'Compact<u32>',
                maxCapacity: 'Compact<u32>'
            },
            HrmpChannelAccepted: {
                recipient: 'Compact<u32>'
            },
            HrmpChannelClosing: {
                initiator: 'Compact<u32>',
                sender: 'Compact<u32>',
                recipient: 'Compact<u32>'
            },
            ClearOrigin: 'Null',
            DescendOrigin: 'JunctionsV3',
            ReportError: 'QueryResponseInfoV3',
            DepositAsset: {
                assets: 'MultiAssetFilterV3',
                beneficiary: 'MultiLocationV3'
            },
            DepositReserveAsset: {
                assets: 'MultiAssetFilterV3',
                dest: 'MultiLocationV3',
                xcm: 'XcmV3'
            },
            ExchangeAsset: {
                give: 'MultiAssetFilterV3',
                want: 'MultiAssetsV3',
                maximal: 'bool'
            },
            InitiateReserveWithdraw: {
                assets: 'MultiAssetFilterV3',
                reserve: 'MultiLocationV3',
                xcm: 'XcmV3'
            },
            InitiateTeleport: {
                assets: 'MultiAssetFilterV3',
                dest: 'MultiLocationV3',
                xcm: 'XcmV3'
            },
            ReportHolding: {
                responseInfo: 'QueryResponseInfoV3',
                assets: 'MultiAssetFilterV3'
            },
            BuyExecution: {
                fees: 'MultiAssetV3',
                weightLimit: 'WeightLimitV3'
            },
            RefundSurplus: 'Null',
            SetErrorHandler: 'XcmV3<RuntimeCall>',
            SetAppendix: 'XcmV3<RuntimeCall>',
            ClearError: 'Null',
            ClaimAsset: {
                assets: 'MultiAssetsV3',
                ticket: 'MultiLocationV3'
            },
            Trap: 'Compact<u64>',
            SubscribeVersion: {
                queryId: 'Compact<u64>',
                maxResponseWeight: 'WeightV2'
            },
            UnsubscribeVersion: 'Null',
            BurnAsset: 'MultiAssetsV3',
            ExpectAsset: 'MultiAssetsV3',
            ExpectOrigin: 'Option<MultiLocationV3>',
            ExpectError: 'Option<(u32, XcmErrorV3)>',
            ExpectTransactStatus: 'MaybeErrorCodeV3',
            QueryPallet: {
                moduleName: 'Vec<u8>',
                responseInfo: 'QueryResponseInfoV3'
            },
            ExpectPallet: {
                index: 'Compact<u32>',
                name: 'Vec<u8>',
                moduleName: 'Vec<u8>',
                crateMajor: 'Compact<u32>',
                minCrateMinor: 'Compact<u32>'
            },
            ReportTransactStatus: 'QueryResponseInfoV3',
            ClearTransactStatus: 'Null',
            UniversalOrigin: 'JunctionV3',
            ExportMessage: {
                network: 'NetworkIdV3',
                destination: 'JunctionsV3',
                xcm: 'XcmV3'
            },
            LockAsset: {
                asset: 'MultiAssetV3',
                unlocker: 'MultiLocationV3'
            },
            UnlockAsset: {
                asset: 'MultiAssetV3',
                target: 'MultiLocationV3'
            },
            NoteUnlockable: {
                asset: 'MultiAssetV3',
                owner: 'MultiLocationV3'
            },
            RequestUnlock: {
                asset: 'MultiAssetV3',
                locker: 'MultiLocationV3'
            },
            SetFeesMode: {
                jitWithdraw: 'bool'
            },
            SetTopic: '[u8; 32]',
            ClearTopic: 'Null',
            AliasOrigin: 'MultiLocationV3',
            UnpaidExecution: {
                weightLimit: 'WeightLimitV3',
                checkOrigin: 'Option<MultiLocationV3>'
            }
        }
    },
    WildMultiAssetV3: {
        _enum: {
            All: 'Null',
            AllOf: {
                id: 'AssetIdV3',
                fun: 'WildFungibilityV2'
            },
            AllCounted: 'Compact<u32>',
            AllOfCounted: {
                id: 'AssetIdV3',
                fun: 'WildFungibilityV2',
                count: 'Compact<u32>'
            }
        }
    },
    VersionV3: 'u32',
    XcmV3: 'Vec<InstructionV3>'
};
}),
"[project]/node_modules/@polkadot/types/interfaces/xcm/v4.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v4",
    ()=>v4
]);
const v4 = {
    AssetIdV4: 'MultiLocationV4',
    AssetInstanceV4: {
        _enum: {
            Undefined: 'Null',
            Index: 'Compact<u128>',
            Array4: '[u8;4]',
            Array8: '[u8;8]',
            Array16: '[u8;16]',
            Array32: '[u8;32]'
        }
    },
    FungibilityV4: {
        _enum: {
            Fungible: 'Compact<u128>',
            NonFungible: 'AssetInstanceV4'
        }
    },
    UncheckedFungibilityV4: {
        _enum: {
            Fungible: 'Compact<u128>',
            NonFungible: 'AssetInstanceV4'
        }
    },
    JunctionV4: {
        _enum: {
            Parachain: 'Compact<u32>',
            AccountId32: {
                network: 'Option<NetworkIdV4>',
                id: '[u8;32]'
            },
            AccountIndex64: {
                network: 'Option<NetworkIdV4>',
                index: 'Compact<u64>'
            },
            AccountKey20: {
                network: 'Option<NetworkIdV4>',
                key: '[u8;20]'
            },
            PalletInstance: 'u8',
            GeneralIndex: 'Compact<u128>',
            GeneralKey: {
                length: 'u8',
                data: '[u8;32]'
            },
            OnlyChild: 'Null',
            Plurality: {
                id: 'BodyIdV3',
                part: 'BodyPartV3'
            },
            GlobalConsensus: 'NetworkIdV4'
        }
    },
    JunctionsV4: {
        _enum: {
            Here: 'Null',
            X1: '[JunctionV4;1]',
            X2: '[JunctionV4;2]',
            X3: '[JunctionV4;3]',
            X4: '[JunctionV4;4]',
            X5: '[JunctionV4;5]',
            X6: '[JunctionV4;6]',
            X7: '[JunctionV4;7]',
            X8: '[JunctionV4;8]'
        }
    },
    MaxPalletsInfo: 'u32',
    NetworkIdV4: 'NetworkIdV3',
    MultiAssetV4: {
        id: 'AssetIdV4',
        fun: 'FungibilityV4'
    },
    MultiAssetsV4: 'Vec<MultiAssetV4>',
    MultiAssetFilterV4: {
        _enum: {
            Definite: 'MultiAssetsV4',
            Wild: 'WildMultiAssetV4'
        }
    },
    MultiLocationV4: {
        parents: 'u8',
        interior: 'JunctionsV4'
    },
    OriginKindV4: 'XcmOriginKind',
    PalletInfoV4: 'PalletInfoV3',
    WildFungibilityV4: 'WildFungibilityV2',
    QueryResponseInfoV4: {
        destination: 'MultiLocationV4',
        queryId: 'Compact<u64>',
        maxWeight: 'WeightV2'
    },
    ResponseV4: {
        _enum: {
            Null: 'Null',
            Assets: 'MultiAssetsV4',
            ExecutionResult: 'Option<(u32, XcmErrorV3)>',
            Version: 'u32',
            PalletsInfo: 'Vec<PalletInfoV4>',
            DispatchResult: 'MaybeErrorCodeV3'
        }
    },
    InstructionV4: {
        _enum: {
            WithdrawAsset: 'MultiAssetsV4',
            ReserveAssetDeposited: 'MultiAssetsV4',
            ReceiveTeleportedAsset: 'MultiAssetsV4',
            QueryResponse: {
                queryId: 'Compact<u64>',
                response: 'ResponseV4',
                maxWeight: 'WeightV2',
                querier: 'Option<MultiLocationV4>'
            },
            TransferAsset: {
                assets: 'MultiAssetsV4',
                beneficiary: 'MultiLocationV4'
            },
            TransferReserveAsset: {
                assets: 'MultiAssetsV4',
                dest: 'MultiLocationV4',
                xcm: 'XcmV4'
            },
            Transact: {
                originKind: 'OriginKindV4',
                requireWeightAtMost: 'WeightV2',
                call: 'DoubleEncodedCall'
            },
            HrmpNewChannelOpenRequest: {
                sender: 'Compact<u32>',
                maxMessageSize: 'Compact<u32>',
                maxCapacity: 'Compact<u32>'
            },
            HrmpChannelAccepted: {
                recipient: 'Compact<u32>'
            },
            HrmpChannelClosing: {
                initiator: 'Compact<u32>',
                sender: 'Compact<u32>',
                recipient: 'Compact<u32>'
            },
            ClearOrigin: 'Null',
            DescendOrigin: 'JunctionsV4',
            ReportError: 'QueryResponseInfoV4',
            DepositAsset: {
                assets: 'MultiAssetFilterV4',
                beneficiary: 'MultiLocationV4'
            },
            DepositReserveAsset: {
                assets: 'MultiAssetFilterV4',
                dest: 'MultiLocationV4',
                xcm: 'XcmV4'
            },
            ExchangeAsset: {
                give: 'MultiAssetFilterV4',
                want: 'MultiAssetsV4',
                maximal: 'bool'
            },
            InitiateReserveWithdraw: {
                assets: 'MultiAssetFilterV4',
                reserve: 'MultiLocationV4',
                xcm: 'XcmV4'
            },
            InitiateTeleport: {
                assets: 'MultiAssetFilterV4',
                dest: 'MultiLocationV4',
                xcm: 'XcmV4'
            },
            ReportHolding: {
                responseInfo: 'QueryResponseInfoV4',
                assets: 'MultiAssetFilterV4'
            },
            BuyExecution: {
                fees: 'MultiAssetV4',
                weightLimit: 'WeightLimitV3'
            },
            RefundSurplus: 'Null',
            SetErrorHandler: 'XcmV4',
            SetAppendix: 'XcmV4',
            ClearError: 'Null',
            ClaimAsset: {
                assets: 'MultiAssetsV4',
                ticket: 'MultiLocationV4'
            },
            Trap: 'Compact<u64>',
            SubscribeVersion: {
                queryId: 'Compact<u64>',
                maxResponseWeight: 'WeightV2'
            },
            UnsubscribeVersion: 'Null',
            BurnAsset: 'MultiAssetsV4',
            ExpectAsset: 'MultiAssetsV4',
            ExpectOrigin: 'Option<MultiLocationV4>',
            ExpectError: 'Option<(u32, XcmErrorV3)>',
            ExpectTransactStatus: 'MaybeErrorCodeV3',
            QueryPallet: {
                moduleName: 'Vec<u8>',
                responseInfo: 'QueryResponseInfoV4'
            },
            ExpectPallet: {
                index: 'Compact<u32>',
                name: 'Vec<u8>',
                moduleName: 'Vec<u8>',
                crateMajor: 'Compact<u32>',
                minCrateMinor: 'Compact<u32>'
            },
            ReportTransactStatus: 'QueryResponseInfoV4',
            ClearTransactStatus: 'Null',
            UniversalOrigin: 'JunctionV4',
            ExportMessage: {
                network: 'NetworkIdV4',
                destination: 'JunctionsV4',
                xcm: 'XcmV4'
            },
            LockAsset: {
                asset: 'MultiAssetV4',
                unlocker: 'MultiLocationV4'
            },
            UnlockAsset: {
                asset: 'MultiAssetV4',
                target: 'MultiLocationV4'
            },
            NoteUnlockable: {
                asset: 'MultiAssetV4',
                owner: 'MultiLocationV4'
            },
            RequestUnlock: {
                asset: 'MultiAssetV4',
                locker: 'MultiLocationV4'
            },
            SetFeesMode: {
                jitWithdraw: 'bool'
            },
            SetTopic: '[u8;32]',
            ClearTopic: 'Null',
            AliasOrigin: 'MultiLocationV4',
            UnpaidExecution: {
                weightLimit: 'WeightLimitV3',
                checkOrigin: 'Option<MultiLocationV4>'
            }
        }
    },
    OutcomeV4: {
        _enum: {
            Complete: {
                used: 'WeightV2'
            },
            Incomplete: {
                used: 'WeightV2',
                error: 'XcmErrorV3'
            },
            Error: {
                error: 'XcmErrorV3'
            }
        }
    },
    WildMultiAssetV4: {
        _enum: {
            All: 'Null',
            AllOf: {
                id: 'AssetIdV4',
                fun: 'WildFungibilityV4'
            },
            AllCounted: 'Compact<u32>',
            AllOfCounted: {
                id: 'AssetIdV4',
                fun: 'WildFungibilityV4',
                count: 'Compact<u32>'
            }
        }
    },
    VersionV4: 'u32',
    XcmV4: 'Vec<InstructionV4>',
    XcmErrorV4: 'XcmErrorV3'
};
}),
"[project]/node_modules/@polkadot/types/interfaces/xcm/v5.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "v5",
    ()=>v5
]);
const v5 = {
    AssetIdV5: 'MultiLocationV5',
    AssetInstanceV5: {
        _enum: {
            Undefined: 'Null',
            Index: 'Compact<u128>',
            Array4: '[u8;4]',
            Array8: '[u8;8]',
            Array16: '[u8;16]',
            Array32: '[u8;32]'
        }
    },
    // Maps to xcmV5::Asset but we keep the prefix 'Multi'
    // to keep consistency with the rest of the code base.
    MultiAssetV5: {
        id: 'AssetIdV5',
        fun: 'FungibilityV5'
    },
    MultiAssetsV5: 'Vec<MultiAssetV5>',
    WildMultiAssetV5: {
        _enum: {
            All: 'Null',
            AllOf: {
                id: 'AssetIdV5',
                fun: 'WildFungibilityV5'
            },
            AllCounted: 'Compact<u32>',
            AllOfCounted: {
                id: 'AssetIdV5',
                fun: 'WildFungibilityV5',
                count: 'Compact<u32>'
            }
        }
    },
    MultiAssetFilterV5: {
        _enum: {
            Definite: 'MultiAssetsV5',
            Wild: 'WildMultiAssetV5'
        }
    },
    MultiAssetTransferFilterV5: {
        _enum: {
            Teleport: 'MultiAssetFilterV5',
            ReserveDeposit: 'MultiAssetFilterV5',
            ReserveWithdraw: 'MultiAssetFilterV5'
        }
    },
    FungibilityV5: {
        _enum: {
            Fungible: 'Compact<u128>',
            NonFungible: 'AssetInstanceV5'
        }
    },
    UncheckedFungibilityV5: {
        _enum: {
            Fungible: 'Compact<u128>',
            NonFungible: 'AssetInstanceV5'
        }
    },
    WildFungibilityV5: 'WildFungibilityV2',
    JunctionV5: {
        _enum: {
            Parachain: 'Compact<u32>',
            AccountId32: {
                network: 'Option<NetworkIdV5>',
                id: '[u8;32]'
            },
            AccountIndex64: {
                network: 'Option<NetworkIdV5>',
                index: 'Compact<u64>'
            },
            AccountKey20: {
                network: 'Option<NetworkIdV5>',
                key: '[u8;20]'
            },
            PalletInstance: 'u8',
            GeneralIndex: 'Compact<u128>',
            GeneralKey: {
                length: 'u8',
                data: '[u8;32]'
            },
            OnlyChild: 'Null',
            Plurality: {
                id: 'BodyIdV3',
                part: 'BodyPartV3'
            },
            GlobalConsensus: 'NetworkIdV5'
        }
    },
    NetworkIdV5: {
        _enum: {
            ByGenesis: '[u8;32]',
            ByFork: {
                blockNumber: 'u64',
                blockHash: '[u8;32]'
            },
            Polkadot: 'Null',
            Kusama: 'Null',
            Ethereum: {
                chainId: 'Compact<u64>'
            },
            BitcoinCore: 'Null',
            BitcoinCash: 'Null',
            PolkadotBulletin: 'Null'
        }
    },
    JunctionsV5: {
        _enum: {
            Here: 'Null',
            X1: '[JunctionV5;1]',
            X2: '[JunctionV5;2]',
            X3: '[JunctionV5;3]',
            X4: '[JunctionV5;4]',
            X5: '[JunctionV5;5]',
            X6: '[JunctionV5;6]',
            X7: '[JunctionV5;7]',
            X8: '[JunctionV5;8]'
        }
    },
    MultiLocationV5: {
        parents: 'u8',
        interior: 'JunctionsV5'
    },
    InteriorMultiLocationV5: 'JunctionsV5',
    XcmV5: 'Vec<InstructionV5>',
    PalletInfoV5: 'PalletInfoV3',
    ResponseV5: {
        _enum: {
            Null: 'Null',
            Assets: 'MultiAssetsV5',
            ExecutionResult: 'Option<(u32, XcmErrorV3)>',
            Version: 'u32',
            PalletsInfo: 'Vec<PalletInfoV5>',
            DispatchResult: 'MaybeErrorCodeV3'
        }
    },
    QueryResponseInfoV5: {
        destination: 'MultiLocationV5',
        queryId: 'Compact<u64>',
        maxWeight: 'WeightV2'
    },
    InstructionV5: {
        _enum: {
            WithdrawAsset: 'MultiAssetsV5',
            ReserveAssetDeposited: 'MultiAssetsV5',
            ReceiveTeleportedAsset: 'MultiAssetsV5',
            QueryResponse: {
                queryId: 'Compact<u64>',
                response: 'ResponseV5',
                maxWeight: 'WeightV2',
                querier: 'Option<MultiLocationV5>'
            },
            TransferAsset: {
                assets: 'MultiAssetsV5',
                beneficiary: 'MultiLocationV5'
            },
            TransferReserveAsset: {
                assets: 'MultiAssetsV5',
                dest: 'MultiLocationV5',
                xcm: 'XcmV5'
            },
            Transact: {
                originKind: 'OriginKindV4',
                requireWeightAtMost: 'WeightV2',
                call: 'DoubleEncodedCall'
            },
            HrmpNewChannelOpenRequest: {
                sender: 'Compact<u32>',
                maxMessageSize: 'Compact<u32>',
                maxCapacity: 'Compact<u32>'
            },
            HrmpChannelAccepted: {
                recipient: 'Compact<u32>'
            },
            HrmpChannelClosing: {
                initiator: 'Compact<u32>',
                sender: 'Compact<u32>',
                recipient: 'Compact<u32>'
            },
            ClearOrigin: 'Null',
            DescendOrigin: 'InteriorMultiLocationV5',
            ReportError: 'QueryResponseInfoV4',
            DepositAsset: {
                assets: 'MultiAssetFilterV5',
                beneficiary: 'MultiLocationV5'
            },
            DepositReserveAsset: {
                assets: 'MultiAssetFilterV5',
                dest: 'MultiLocationV5',
                xcm: 'XcmV5'
            },
            ExchangeAsset: {
                give: 'MultiAssetFilterV5',
                want: 'MultiAssetsV5',
                maximal: 'bool'
            },
            InitiateReserveWithdraw: {
                assets: 'MultiAssetFilterV5',
                reserve: 'MultiLocationV5',
                xcm: 'XcmV5'
            },
            InitiateTeleport: {
                assets: 'MultiAssetFilterV5',
                dest: 'MultiLocationV5',
                xcm: 'XcmV5'
            },
            ReportHolding: {
                responseInfo: 'QueryResponseInfoV4',
                assets: 'MultiAssetFilterV5'
            },
            BuyExecution: {
                fees: 'MultiAssetV4',
                weightLimit: 'WeightLimitV3'
            },
            RefundSurplus: 'Null',
            SetErrorHandler: 'XcmV5',
            SetAppendix: 'XcmV5',
            ClearError: 'Null',
            ClaimAsset: {
                assets: 'MultiAssetsV5',
                ticket: 'MultiLocationV5'
            },
            Trap: 'Compact<u64>',
            SubscribeVersion: {
                queryId: 'Compact<u64>',
                maxResponseWeight: 'WeightV2'
            },
            UnsubscribeVersion: 'Null',
            BurnAsset: 'MultiAssetsV5',
            ExpectAsset: 'MultiAssetsV5',
            ExpectOrigin: 'Option<MultiLocationV5>',
            ExpectError: 'Option<(u32, XcmErrorV3)>',
            ExpectTransactStatus: 'MaybeErrorCodeV3',
            QueryPallet: {
                moduleName: 'Vec<u8>',
                responseInfo: 'QueryResponseInfoV4'
            },
            ExpectPallet: {
                index: 'Compact<u32>',
                name: 'Vec<u8>',
                moduleName: 'Vec<u8>',
                crateMajor: 'Compact<u32>',
                minCrateMinor: 'Compact<u32>'
            },
            ReportTransactStatus: 'QueryResponseInfoV4',
            ClearTransactStatus: 'Null',
            UniversalOrigin: 'JunctionV5',
            ExportMessage: {
                network: 'NetworkIdV5',
                destination: 'InteriorMultiLocationV5',
                xcm: 'XcmV5'
            },
            LockAsset: {
                asset: 'MultiAssetV5',
                unlocker: 'MultiLocationV5'
            },
            UnlockAsset: {
                asset: 'MultiAssetV5',
                target: 'MultiLocationV5'
            },
            NoteUnlockable: {
                asset: 'MultiAssetV5',
                owner: 'MultiLocationV5'
            },
            RequestUnlock: {
                asset: 'MultiAssetV5',
                locker: 'MultiLocationV5'
            },
            SetFeesMode: {
                jitWithdraw: 'bool'
            },
            SetTopic: '[u8;32]',
            ClearTopic: 'Null',
            AliasOrigin: 'MultiLocationV5',
            UnpaidExecution: {
                weightLimit: 'WeightLimitV3',
                checkOrigin: 'Option<MultiLocationV5>'
            },
            PayFees: {
                asset: 'MultiAssetV5'
            },
            InitiateTransfer: {
                destination: 'MultiLocationV5',
                remoteFees: 'Option<MultiAssetTransferFilterV5>',
                preserveOrigin: 'bool',
                assets: 'Vec<MultiAssetTransferFilterV5>',
                remoteXcm: 'XcmV5'
            },
            ExecuteWithOrigin: {
                descendant_origin: 'Option<InteriorMultiLocationV5>',
                xcm: 'XcmV5'
            },
            SetHints: {
                hints: 'Vec<HintV5>'
            }
        }
    },
    HintV5: {
        _enum: {
            AssetClaimer: {
                location: 'MultiLocationV5'
            }
        }
    },
    XcmErrorV5: 'XcmErrorV3'
};
}),
"[project]/node_modules/@polkadot/types/interfaces/xcm/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$xcm$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/util/xcm.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v0$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/xcm/v0.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/xcm/v1.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v2$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/xcm/v2.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v3$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/xcm/v3.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v4$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/xcm/v4.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v5$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/xcm/v5.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
const XCM_LATEST = 'V5';
const xcm = {
    XcmOrigin: {
        _enum: {
            Xcm: 'MultiLocation'
        }
    },
    XcmpMessageFormat: {
        _enum: [
            'ConcatenatedVersionedXcm',
            'ConcatenatedEncodedBlob',
            'Signals'
        ]
    },
    XcmAssetId: {
        _enum: {
            Concrete: 'MultiLocation',
            Abstract: 'Bytes'
        }
    },
    InboundStatus: {
        _enum: [
            'Ok',
            'Suspended'
        ]
    },
    OutboundStatus: {
        _enum: [
            'Ok',
            'Suspended'
        ]
    },
    MultiAssets: 'Vec<MultiAsset>'
};
const location = {
    BodyId: {
        _enum: {
            Unit: 'Null',
            Named: 'Vec<u8>',
            Index: 'Compact<u32>',
            Executive: 'Null',
            Technical: 'Null',
            Legislative: 'Null',
            Judicial: 'Null'
        }
    },
    BodyPart: {
        _enum: {
            Voice: 'Null',
            Members: 'Compact<u32>',
            Fraction: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            },
            AtLeastProportion: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            },
            MoreThanProportion: {
                nom: 'Compact<u32>',
                denom: 'Compact<u32>'
            }
        }
    },
    InteriorMultiLocation: 'Junctions',
    NetworkId: {
        _enum: {
            Any: 'Null',
            Named: 'Vec<u8>',
            Polkadot: 'Null',
            Kusama: 'Null'
        }
    }
};
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        ...location,
        ...xcm,
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v0$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v0"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v1$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v1"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v2$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v2"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v3$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v3"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v4$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v4"],
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$v5$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["v5"],
        ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$xcm$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mapXcmTypes"])(XCM_LATEST),
        DoubleEncodedCall: {
            encoded: 'Bytes'
        },
        XcmOriginKind: {
            _enum: [
                'Native',
                'SovereignAccount',
                'Superuser',
                'Xcm'
            ]
        },
        Outcome: {
            _enum: {
                Complete: 'Weight',
                Incomplete: '(Weight, XcmErrorV0)',
                Error: 'XcmErrorV0'
            }
        },
        QueryId: 'u64',
        QueryStatus: {
            _enum: {
                Pending: {
                    responder: 'VersionedMultiLocation',
                    maybeNotify: 'Option<(u8, u8)>',
                    timeout: 'BlockNumber'
                },
                Ready: {
                    response: 'VersionedResponse',
                    at: 'BlockNumber'
                }
            }
        },
        QueueConfigData: {
            suspendThreshold: 'u32',
            dropThreshold: 'u32',
            resumeThreshold: 'u32',
            thresholdWeight: 'Weight',
            weightRestrictDecay: 'Weight'
        },
        VersionMigrationStage: {
            _enum: {
                MigrateSupportedVersion: 'Null',
                MigrateVersionNotifiers: 'Null',
                NotifyCurrentTargets: 'Option<Bytes>',
                MigrateAndNotifyOldTargets: 'Null'
            }
        },
        VersionedMultiAsset: {
            _enum: {
                V0: 'MultiAssetV0',
                V1: 'MultiAssetV1',
                V2: 'MultiAssetV2',
                V3: 'MultiAssetV3',
                V4: 'MultiAssetV4',
                V5: 'MultiAssetV5'
            }
        },
        VersionedMultiAssets: {
            _enum: {
                V0: 'Vec<MultiAssetV0>',
                V1: 'MultiAssetsV1',
                V2: 'MultiAssetsV2',
                V3: 'MultiAssetsV3',
                V4: 'MultiAssetsV4',
                V5: 'MultiAssetsV5'
            }
        },
        VersionedMultiLocation: {
            _enum: {
                V0: 'MultiLocationV0',
                V1: 'MultiLocationV1',
                V2: 'MultiLocationV2',
                V3: 'MultiLocationV3',
                V4: 'MultiLocationV4',
                v5: 'MultiLocationV5'
            }
        },
        VersionedResponse: {
            V0: 'ResponseV0',
            V1: 'ResponseV1',
            V2: 'ResponseV2',
            V3: 'ResponseV3',
            V4: 'ResponseV4',
            V5: 'ResponseV5'
        },
        VersionedXcm: {
            _enum: {
                V0: 'XcmV0',
                V1: 'XcmV1',
                V2: 'XcmV2',
                V3: 'XcmV3',
                V4: 'XcmV4',
                V5: 'XcmV5'
            }
        },
        XcmVersion: 'u32'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/xcmPaymentApi/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    XcmPaymentApi: [
        {
            methods: {
                query_acceptable_payment_assets: {
                    description: 'The API to query acceptable payment assets',
                    params: [
                        {
                            name: 'version',
                            type: 'u32'
                        }
                    ],
                    type: 'Result<Vec<XcmVersionedAssetId>, XcmPaymentApiError>'
                },
                query_weight_to_asset_fee: {
                    description: '',
                    params: [
                        {
                            name: 'weight',
                            type: 'WeightV2'
                        },
                        {
                            name: 'asset',
                            type: 'XcmVersionedAssetId'
                        }
                    ],
                    type: 'Result<u128, XcmPaymentApiError>'
                },
                query_xcm_weight: {
                    description: '',
                    params: [
                        {
                            name: 'message',
                            type: 'XcmVersionedXcm'
                        }
                    ],
                    type: 'Result<WeightV2, XcmPaymentApiError>'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/xcmPaymentApi/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcmPaymentApi$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/xcmPaymentApi/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcmPaymentApi$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        XcmPaymentApiError: {
            _enum: [
                'Unimplemented',
                'VersionedConversionFailed',
                'WeightNotComputable',
                'UnhandledXcmVersion',
                'AssetNotFound'
            ]
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/xcmRuntimeApi/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    LocationToAccountApi: [
        {
            methods: {
                convert_location: {
                    description: 'Converts `Location` to `AccountId`',
                    params: [
                        {
                            name: 'location',
                            type: 'XcmVersionedLocation'
                        }
                    ],
                    type: 'Result<AccountId, Error>'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/xcmRuntimeApi/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcmRuntimeApi$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/xcmRuntimeApi/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcmRuntimeApi$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        Error: {
            _enum: [
                'Unsupported',
                'VersionedConversionFailed'
            ]
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/contractsAbi/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/* eslint-disable sort-keys */ __turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const layout = {
    ContractCryptoHasher: {
        _enum: [
            'Blake2x256',
            'Sha2x256',
            'Keccak256'
        ]
    },
    ContractDiscriminant: 'u32',
    ContractLayoutArray: {
        offset: 'ContractLayoutKey',
        len: 'u32',
        cellsPerElem: 'u64',
        layout: 'ContractStorageLayout'
    },
    ContractLayoutCell: {
        key: 'ContractLayoutKey',
        ty: 'SiLookupTypeId'
    },
    ContractLayoutEnum: {
        dispatchKey: 'ContractLayoutKey',
        variants: 'BTreeMap<ContractDiscriminant, ContractLayoutStruct>'
    },
    ContractLayoutHash: {
        offset: 'ContractLayoutKey',
        strategy: 'ContractLayoutHashingStrategy',
        layout: 'ContractStorageLayout'
    },
    ContractLayoutHashingStrategy: {
        hasher: 'ContractCryptoHasher',
        postfix: 'Vec<u8>',
        prefix: 'Vec<u8>'
    },
    ContractLayoutKey: '[u8; 32]',
    ContractLayoutStruct: {
        fields: 'Vec<ContractLayoutStructField>'
    },
    ContractLayoutStructField: {
        layout: 'ContractStorageLayout',
        name: 'Text'
    },
    ContractStorageLayout: {
        _enum: {
            Cell: 'ContractLayoutCell',
            Hash: 'ContractLayoutHash',
            Array: 'ContractLayoutArray',
            Struct: 'ContractLayoutStruct',
            Enum: 'ContractLayoutEnum'
        }
    }
};
const spec = {
    ContractConstructorSpecV0: {
        name: 'Text',
        selector: 'ContractSelector',
        args: 'Vec<ContractMessageParamSpecV0>',
        docs: 'Vec<Text>'
    },
    ContractConstructorSpecV1: {
        name: 'Vec<Text>',
        selector: 'ContractSelector',
        args: 'Vec<ContractMessageParamSpecV0>',
        docs: 'Vec<Text>'
    },
    ContractConstructorSpecV2: {
        label: 'Text',
        selector: 'ContractSelector',
        args: 'Vec<ContractMessageParamSpecV2>',
        docs: 'Vec<Text>'
    },
    ContractConstructorSpecV3: {
        label: 'Text',
        selector: 'ContractSelector',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV2>',
        docs: 'Vec<Text>'
    },
    ContractConstructorSpecV4: {
        label: 'Text',
        selector: 'ContractSelector',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV2>',
        docs: 'Vec<Text>',
        default: 'bool',
        returnType: 'Option<ContractTypeSpec>'
    },
    ContractContractSpecV0: {
        constructors: 'Vec<ContractConstructorSpecV0>',
        messages: 'Vec<ContractMessageSpecV0>',
        events: 'Vec<ContractEventSpecV0>',
        docs: 'Vec<Text>'
    },
    ContractContractSpecV1: {
        constructors: 'Vec<ContractConstructorSpecV1>',
        messages: 'Vec<ContractMessageSpecV1>',
        events: 'Vec<ContractEventSpecV1>',
        docs: 'Vec<Text>'
    },
    ContractContractSpecV2: {
        constructors: 'Vec<ContractConstructorSpecV2>',
        messages: 'Vec<ContractMessageSpecV2>',
        events: 'Vec<ContractEventSpecV2>',
        docs: 'Vec<Text>'
    },
    ContractContractSpecV3: {
        constructors: 'Vec<ContractConstructorSpecV3>',
        messages: 'Vec<ContractMessageSpecV2>',
        events: 'Vec<ContractEventSpecV2>',
        docs: 'Vec<Text>'
    },
    ContractContractSpecV4: {
        constructors: 'Vec<ContractConstructorSpecV4>',
        messages: 'Vec<ContractMessageSpecV3>',
        events: 'Vec<ContractEventSpecV2>',
        docs: 'Vec<Text>',
        environment: 'ContractEnvironmentV4'
    },
    ContractContractSpecV5: {
        constructors: 'Vec<ContractConstructorSpecV4>',
        messages: 'Vec<ContractMessageSpecV3>',
        events: 'Vec<ContractEventSpecV3>',
        docs: 'Vec<Text>',
        environment: 'ContractEnvironmentV4'
    },
    ContractContractSpecV6: {
        constructors: 'Vec<ContractConstructorSpecV4>',
        messages: 'Vec<ContractMessageSpecV3>',
        events: 'Vec<ContractEventSpecV3>',
        docs: 'Vec<Text>',
        environment: 'ContractEnvironmentV4'
    },
    ContractDisplayName: 'SiPath',
    ContractEventParamSpecV0: {
        name: 'Text',
        indexed: 'bool',
        type: 'ContractTypeSpec',
        docs: 'Vec<Text>'
    },
    ContractEventParamSpecV2: {
        label: 'Text',
        indexed: 'bool',
        type: 'ContractTypeSpec',
        docs: 'Vec<Text>'
    },
    ContractEventSpecV0: {
        name: 'Text',
        args: 'Vec<ContractEventParamSpecV0>',
        docs: 'Vec<Text>'
    },
    ContractEventSpecV1: {
        name: 'Text',
        args: 'Vec<ContractEventParamSpecV0>',
        docs: 'Vec<Text>'
    },
    ContractEventSpecV2: {
        label: 'Text',
        args: 'Vec<ContractEventParamSpecV2>',
        docs: 'Vec<Text>'
    },
    ContractEventSpecV3: {
        label: 'Text',
        args: 'Vec<ContractEventParamSpecV2>',
        docs: 'Vec<Text>',
        module_path: 'Text',
        signature_topic: 'Option<[u8; 32]>'
    },
    ContractMessageParamSpecV0: {
        name: 'Text',
        type: 'ContractTypeSpec'
    },
    ContractMessageParamSpecV2: {
        label: 'Text',
        type: 'ContractTypeSpec'
    },
    ContractMessageSpecV0: {
        name: 'Text',
        selector: 'ContractSelector',
        mutates: 'bool',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV0>',
        returnType: 'Option<ContractTypeSpec>',
        docs: 'Vec<Text>'
    },
    ContractMessageSpecV1: {
        name: 'Vec<Text>',
        selector: 'ContractSelector',
        mutates: 'bool',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV0>',
        returnType: 'Option<ContractTypeSpec>',
        docs: 'Vec<Text>'
    },
    ContractMessageSpecV2: {
        label: 'Text',
        selector: 'ContractSelector',
        mutates: 'bool',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV2>',
        returnType: 'Option<ContractTypeSpec>',
        docs: 'Vec<Text>'
    },
    ContractMessageSpecV3: {
        label: 'Text',
        selector: 'ContractSelector',
        mutates: 'bool',
        payable: 'bool',
        args: 'Vec<ContractMessageParamSpecV2>',
        returnType: 'Option<ContractTypeSpec>',
        docs: 'Vec<Text>',
        default: 'bool'
    },
    ContractSelector: '[u8; 4]',
    ContractTypeSpec: {
        type: 'SiLookupTypeId',
        displayName: 'ContractDisplayName'
    }
};
const latest = {
    ContractConstructorSpecLatest: 'ContractConstructorSpecV4',
    ContractEventSpecLatest: 'ContractEventSpecV3',
    ContractEventParamSpecLatest: 'ContractEventParamSpecV2',
    ContractMessageParamSpecLatest: 'ContractMessageParamSpecV2',
    ContractMessageSpecLatest: 'ContractMessageSpecV3',
    ContractMetadataLatest: 'ContractMetadataV6'
};
const __TURBOPACK__default__export__ = {
    rpc: {},
    types: {
        ...layout,
        ...spec,
        ...latest,
        ContractProjectInfo: {
            source: 'ContractProjectSource',
            contract: 'ContractProjectContract'
        },
        ContractReviveProjectInfo: {
            source: 'ContractReviveProjectSource',
            contract: 'ContractProjectContract'
        },
        ContractMetadataV0: {
            metadataVersion: 'Text',
            types: 'Vec<Si0Type>',
            spec: 'ContractContractSpecV0'
        },
        ContractMetadataV1: {
            types: 'Vec<PortableType>',
            spec: 'ContractContractSpecV1'
        },
        ContractMetadataV2: {
            types: 'Vec<PortableType>',
            spec: 'ContractContractSpecV2'
        },
        ContractMetadataV3: {
            types: 'Vec<PortableType>',
            spec: 'ContractContractSpecV3'
        },
        ContractMetadataV4: {
            types: 'Vec<PortableType>',
            spec: 'ContractContractSpecV4',
            version: 'Text'
        },
        ContractMetadataV5: {
            types: 'Vec<PortableType>',
            spec: 'ContractContractSpecV5',
            version: 'u64'
        },
        ContractMetadataV6: {
            types: 'Vec<PortableType>',
            spec: 'ContractContractSpecV6',
            version: 'u64'
        },
        ContractMetadata: {
            _enum: {
                V0: 'ContractMetadataV0',
                V1: 'ContractMetadataV1',
                V2: 'ContractMetadataV2',
                V3: 'ContractMetadataV3',
                V4: 'ContractMetadataV4',
                V5: 'ContractMetadataV5',
                V6: 'ContractMetadataV6'
            }
        },
        ContractProjectV0: {
            metadataVersion: 'Text',
            source: 'ContractProjectSource',
            contract: 'ContractProjectContract',
            types: 'Vec<Si0Type>',
            spec: 'ContractContractSpecV0'
        },
        ContractProject: '(ContractProjectInfo, ContractMetadata)',
        ContractProjectContract: {
            _alias: {
                docs: 'documentation'
            },
            name: 'Text',
            version: 'Text',
            authors: 'Vec<Text>',
            description: 'Option<Text>',
            docs: 'Option<Text>',
            repository: 'Option<Text>',
            homepage: 'Option<Text>',
            license: 'Option<Text>'
        },
        ContractProjectSource: {
            _alias: {
                wasmHash: 'hash'
            },
            wasmHash: '[u8; 32]',
            language: 'Text',
            compiler: 'Text',
            wasm: 'Raw'
        },
        ContractReviveProjectSource: {
            _alias: {
                wasmHash: 'hash',
                wasm: 'contract_binary'
            },
            wasmHash: '[u8; 32]',
            language: 'Text',
            compiler: 'Text',
            wasm: 'Raw'
        },
        ContractEnvironmentV4: {
            _alias: {
                hashType: 'hash'
            },
            // NOTE These are not marked optional in the Rust code, however since we
            // convert from older versions to newer, we may not have these fields.
            // The Option<...> works since our inputs are always JSON, so it will
            // be None when not specified.
            //
            // Additionally we don't mark the full structure as Option, rather we
            // do it on a per-field basis since fields may be added as the versions
            // progress.
            accountId: 'Option<ContractTypeSpec>',
            balance: 'Option<ContractTypeSpec>',
            blockNumber: 'Option<ContractTypeSpec>',
            hashType: 'Option<ContractTypeSpec>',
            timestamp: 'Option<ContractTypeSpec>',
            maxEventTopics: 'Option<u32>'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/eth/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const netRpc = {
    listening: {
        aliasSection: 'net',
        description: 'Returns true if client is actively listening for network connections. Otherwise false.',
        params: [],
        type: 'bool'
    },
    peerCount: {
        aliasSection: 'net',
        description: 'Returns number of peers connected to node.',
        params: [],
        type: 'Text'
    },
    version: {
        aliasSection: 'net',
        description: 'Returns protocol version.',
        params: [],
        type: 'Text'
    }
};
const web3Rpc = {
    clientVersion: {
        aliasSection: 'web3',
        description: 'Returns current client version.',
        params: [],
        type: 'Text'
    },
    sha3: {
        aliasSection: 'web3',
        description: 'Returns sha3 of the given data',
        params: [
            {
                name: 'data',
                type: 'Bytes'
            }
        ],
        type: 'H256'
    }
};
const rpc = {
    ...netRpc,
    ...web3Rpc,
    accounts: {
        description: 'Returns accounts list.',
        params: [],
        type: 'Vec<H160>'
    },
    blockNumber: {
        description: 'Returns the blockNumber',
        params: [],
        type: 'U256'
    },
    call: {
        description: 'Call contract, returning the output data.',
        params: [
            {
                name: 'request',
                type: 'EthCallRequest'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'Bytes'
    },
    chainId: {
        description: 'Returns the chain ID used for transaction signing at the current best block. None is returned if not available.',
        params: [],
        type: 'U64'
    },
    coinbase: {
        description: 'Returns block author.',
        params: [],
        type: 'H160'
    },
    estimateGas: {
        description: 'Estimate gas needed for execution of given contract.',
        params: [
            {
                name: 'request',
                type: 'EthCallRequest'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'U256'
    },
    feeHistory: {
        description: 'Returns fee history for given block count & reward percentiles',
        params: [
            {
                name: 'blockCount',
                type: 'U256'
            },
            {
                name: 'newestBlock',
                type: 'BlockNumber'
            },
            {
                name: 'rewardPercentiles',
                type: 'Option<Vec<f64>>'
            }
        ],
        type: 'EthFeeHistory'
    },
    gasPrice: {
        description: 'Returns current gas price.',
        params: [],
        type: 'U256'
    },
    getBalance: {
        description: 'Returns balance of the given account.',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'U256'
    },
    getBlockByHash: {
        description: 'Returns block with given hash.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            },
            {
                name: 'full',
                type: 'bool'
            }
        ],
        type: 'Option<EthRichBlock>'
    },
    getBlockByNumber: {
        description: 'Returns block with given number.',
        params: [
            {
                name: 'block',
                type: 'BlockNumber'
            },
            {
                name: 'full',
                type: 'bool'
            }
        ],
        type: 'Option<EthRichBlock>'
    },
    getBlockTransactionCountByHash: {
        description: 'Returns the number of transactions in a block with given hash.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            }
        ],
        type: 'U256'
    },
    getBlockTransactionCountByNumber: {
        description: 'Returns the number of transactions in a block with given block number.',
        params: [
            {
                name: 'block',
                type: 'BlockNumber'
            }
        ],
        type: 'U256'
    },
    getCode: {
        description: 'Returns the code at given address at given time (block number).',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'Bytes'
    },
    getFilterChanges: {
        description: 'Returns filter changes since last poll.',
        params: [
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'EthFilterChanges'
    },
    getFilterLogs: {
        description: 'Returns all logs matching given filter (in a range \'from\' - \'to\').',
        params: [
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'Vec<EthLog>'
    },
    getLogs: {
        description: 'Returns logs matching given filter object.',
        params: [
            {
                name: 'filter',
                type: 'EthFilter'
            }
        ],
        type: 'Vec<EthLog>'
    },
    getProof: {
        description: 'Returns proof for account and storage.',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                name: 'storageKeys',
                type: 'Vec<H256>'
            },
            {
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'EthAccount'
    },
    getStorageAt: {
        description: 'Returns content of the storage at given address.',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                name: 'index',
                type: 'U256'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'H256'
    },
    getTransactionByBlockHashAndIndex: {
        description: 'Returns transaction at given block hash and index.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            },
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'EthTransaction'
    },
    getTransactionByBlockNumberAndIndex: {
        description: 'Returns transaction by given block number and index.',
        params: [
            {
                name: 'number',
                type: 'BlockNumber'
            },
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'EthTransaction'
    },
    getTransactionByHash: {
        description: 'Get transaction by its hash.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            }
        ],
        type: 'EthTransaction'
    },
    getTransactionCount: {
        description: 'Returns the number of transactions sent from given address at given time (block number).',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'U256'
    },
    getTransactionReceipt: {
        description: 'Returns transaction receipt by transaction hash.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            }
        ],
        type: 'EthReceipt'
    },
    getUncleByBlockHashAndIndex: {
        description: 'Returns an uncles at given block and index.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            },
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'EthRichBlock'
    },
    getUncleByBlockNumberAndIndex: {
        description: 'Returns an uncles at given block and index.',
        params: [
            {
                name: 'number',
                type: 'BlockNumber'
            },
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'EthRichBlock'
    },
    getUncleCountByBlockHash: {
        description: 'Returns the number of uncles in a block with given hash.',
        params: [
            {
                name: 'hash',
                type: 'H256'
            }
        ],
        type: 'U256'
    },
    getUncleCountByBlockNumber: {
        description: 'Returns the number of uncles in a block with given block number.',
        params: [
            {
                name: 'number',
                type: 'BlockNumber'
            }
        ],
        type: 'U256'
    },
    getWork: {
        description: 'Returns the hash of the current block, the seedHash, and the boundary condition to be met.',
        params: [],
        type: 'EthWork'
    },
    hashrate: {
        description: 'Returns the number of hashes per second that the node is mining with.',
        params: [],
        type: 'U256'
    },
    maxPriorityFeePerGas: {
        description: 'Returns max priority fee per gas',
        params: [],
        type: 'U256'
    },
    mining: {
        description: 'Returns true if client is actively mining new blocks.',
        params: [],
        type: 'bool'
    },
    newBlockFilter: {
        description: 'Returns id of new block filter.',
        params: [],
        type: 'U256'
    },
    newFilter: {
        description: 'Returns id of new filter.',
        params: [
            {
                name: 'filter',
                type: 'EthFilter'
            }
        ],
        type: 'U256'
    },
    newPendingTransactionFilter: {
        description: 'Returns id of new block filter.',
        params: [],
        type: 'U256'
    },
    protocolVersion: {
        description: 'Returns protocol version encoded as a string (quotes are necessary).',
        params: [],
        type: 'u64'
    },
    sendRawTransaction: {
        description: 'Sends signed transaction, returning its hash.',
        params: [
            {
                name: 'bytes',
                type: 'Bytes'
            }
        ],
        type: 'H256'
    },
    sendTransaction: {
        description: 'Sends transaction; will block waiting for signer to return the transaction hash',
        params: [
            {
                name: 'tx',
                type: 'EthTransactionRequest'
            }
        ],
        type: 'H256'
    },
    submitHashrate: {
        description: 'Used for submitting mining hashrate.',
        params: [
            {
                name: 'index',
                type: 'U256'
            },
            {
                name: 'hash',
                type: 'H256'
            }
        ],
        type: 'bool'
    },
    submitWork: {
        description: 'Used for submitting a proof-of-work solution.',
        params: [
            {
                name: 'nonce',
                type: 'H64'
            },
            {
                name: 'headerHash',
                type: 'H256'
            },
            {
                name: 'mixDigest',
                type: 'H256'
            }
        ],
        type: 'bool'
    },
    subscribe: {
        description: 'Subscribe to Eth subscription.',
        params: [
            {
                name: 'kind',
                type: 'EthSubKind'
            },
            {
                isOptional: true,
                name: 'params',
                type: 'EthSubParams'
            }
        ],
        pubsub: [
            'subscription',
            'subscribe',
            'unsubscribe'
        ],
        type: 'Null'
    },
    syncing: {
        description: 'Returns an object with data about the sync status or false.',
        params: [],
        type: 'EthSyncStatus'
    },
    uninstallFilter: {
        description: 'Uninstalls filter.',
        params: [
            {
                name: 'index',
                type: 'U256'
            }
        ],
        type: 'bool'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/eth/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const ethMethodsV4 = {
    account_basic: {
        description: 'Returns pallet_evm::Accounts by address.',
        params: [
            {
                name: 'address',
                type: 'H160'
            }
        ],
        type: 'EvmAccount'
    },
    account_code_at: {
        description: 'For a given account address, returns pallet_evm::AccountCodes.',
        params: [
            {
                name: 'address',
                type: 'H160'
            }
        ],
        type: 'Bytes'
    },
    author: {
        description: 'Returns the converted FindAuthor::find_author authority id.',
        params: [],
        type: 'H160'
    },
    call: {
        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',
        params: [
            {
                name: 'from',
                type: 'H160'
            },
            {
                name: 'to',
                type: 'H160'
            },
            {
                name: 'data',
                type: 'Vec<u8>'
            },
            {
                name: 'value',
                type: 'U256'
            },
            {
                name: 'gasLimit',
                type: 'U256'
            },
            {
                name: 'maxFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'maxPriorityFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'nonce',
                type: 'Option<U256>'
            },
            {
                name: 'estimate',
                type: 'bool'
            },
            {
                name: 'accessList',
                type: 'Option<Vec<(H160, Vec<H256>)>>'
            }
        ],
        type: 'Result<EvmCallInfo, DispatchError>'
    },
    chain_id: {
        description: 'Returns runtime defined pallet_evm::ChainId.',
        params: [],
        type: 'u64'
    },
    create: {
        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',
        params: [
            {
                name: 'from',
                type: 'H160'
            },
            {
                name: 'data',
                type: 'Vec<u8>'
            },
            {
                name: 'value',
                type: 'U256'
            },
            {
                name: 'gasLimit',
                type: 'U256'
            },
            {
                name: 'maxFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'maxPriorityFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'nonce',
                type: 'Option<U256>'
            },
            {
                name: 'estimate',
                type: 'bool'
            },
            {
                name: 'accessList',
                type: 'Option<Vec<(H160, Vec<H256>)>>'
            }
        ],
        type: 'Result<EvmCreateInfo, DispatchError>'
    },
    current_all: {
        description: 'Return all the current data for a block in a single runtime call.',
        params: [],
        type: '(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)'
    },
    current_block: {
        description: 'Return the current block.',
        params: [],
        type: 'BlockV2'
    },
    current_receipts: {
        description: 'Return the current receipt.',
        params: [],
        type: 'Option<Vec<EthReceiptV3>>'
    },
    current_transaction_statuses: {
        description: 'Return the current transaction status.',
        params: [],
        type: 'Option<Vec<EthTransactionStatus>>'
    },
    elasticity: {
        description: 'Return the elasticity multiplier.',
        params: [],
        type: 'Option<Permill>'
    },
    extrinsic_filter: {
        description: 'Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.',
        params: [
            {
                name: 'xts',
                type: 'Vec<Extrinsic>'
            }
        ],
        type: 'Vec<TransactionV2>'
    },
    gas_price: {
        description: 'Returns FixedGasPrice::min_gas_price',
        params: [],
        type: 'u256'
    },
    storage_at: {
        description: 'For a given account address and index, returns pallet_evm::AccountStorages.',
        params: [
            {
                name: 'address',
                type: 'H160'
            },
            {
                name: 'index',
                type: 'u256'
            }
        ],
        type: 'H256'
    }
};
const ethMethodsV5 = {
    call: {
        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',
        params: [
            {
                name: 'from',
                type: 'H160'
            },
            {
                name: 'to',
                type: 'H160'
            },
            {
                name: 'data',
                type: 'Vec<u8>'
            },
            {
                name: 'value',
                type: 'U256'
            },
            {
                name: 'gasLimit',
                type: 'U256'
            },
            {
                name: 'maxFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'maxPriorityFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'nonce',
                type: 'Option<U256>'
            },
            {
                name: 'estimate',
                type: 'bool'
            },
            {
                name: 'accessList',
                type: 'Option<Vec<(H160, Vec<H256>)>>'
            }
        ],
        type: 'Result<EvmCallInfoV2, DispatchError>'
    },
    create: {
        description: 'Returns a frame_ethereum::call response. If `estimate` is true,',
        params: [
            {
                name: 'from',
                type: 'H160'
            },
            {
                name: 'data',
                type: 'Vec<u8>'
            },
            {
                name: 'value',
                type: 'U256'
            },
            {
                name: 'gasLimit',
                type: 'U256'
            },
            {
                name: 'maxFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'maxPriorityFeePerGas',
                type: 'Option<U256>'
            },
            {
                name: 'nonce',
                type: 'Option<U256>'
            },
            {
                name: 'estimate',
                type: 'bool'
            },
            {
                name: 'accessList',
                type: 'Option<Vec<(H160, Vec<H256>)>>'
            }
        ],
        type: 'Result<EvmCreateInfoV2, DispatchError>'
    }
};
const runtime = {
    ConvertTransactionRuntimeApi: [
        {
            methods: {
                convert_transaction: {
                    description: 'Converts an Ethereum-style transaction to Extrinsic',
                    params: [
                        {
                            name: 'transaction',
                            type: 'TransactionV2'
                        }
                    ],
                    type: 'Extrinsic'
                }
            },
            version: 2
        },
        {
            methods: {
                convert_transaction: {
                    description: 'Converts an Ethereum-style transaction to Extrinsic',
                    params: [
                        {
                            name: 'transaction',
                            type: 'TransactionV3'
                        }
                    ],
                    type: 'Extrinsic'
                }
            },
            version: 3
        }
    ],
    DebugRuntimeApi: [
        {
            methods: {
                trace_block: {
                    description: 'Trace all block extrinsics',
                    params: [
                        {
                            name: 'extrinsics',
                            type: 'Vec<Extrinsic>'
                        },
                        {
                            name: 'knownTransactions',
                            type: 'Vec<H256>'
                        }
                    ],
                    type: 'Result<(), DispatchError>'
                },
                trace_transaction: {
                    description: 'Trace transaction extrinsics',
                    params: [
                        {
                            name: 'extrinsics',
                            type: 'Vec<Extrinsic>'
                        },
                        {
                            name: 'transaction',
                            type: 'EthTransaction'
                        }
                    ],
                    type: 'Result<(), DispatchError>'
                }
            },
            version: 4
        }
    ],
    EthereumRuntimeRPCApi: [
        {
            methods: {
                ...ethMethodsV4
            },
            version: 4
        },
        {
            methods: {
                ...ethMethodsV4,
                ...ethMethodsV5
            },
            version: 5
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/eth/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$eth$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/eth/rpc.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$eth$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/eth/runtime.js [app-ssr] (ecmascript)");
;
;
const V0 = {
    BlockV0: {
        header: 'EthHeader',
        transactions: 'Vec<TransactionV0>',
        ommers: 'Vec<EthHeader>'
    },
    LegacyTransaction: {
        nonce: 'U256',
        gasPrice: 'U256',
        gasLimit: 'U256',
        action: 'EthTransactionAction',
        value: 'U256',
        input: 'Bytes',
        signature: 'EthLegacyTransactionSignature'
    },
    TransactionV0: 'LegacyTransaction'
};
const V1 = {
    BlockV1: {
        header: 'EthHeader',
        transactions: 'Vec<TransactionV1>',
        ommers: 'Vec<EthHeader>'
    },
    EIP2930Transaction: {
        chainId: 'u64',
        nonce: 'U256',
        gasPrice: 'U256',
        gasLimit: 'U256',
        action: 'EthTransactionAction',
        value: 'U256',
        input: 'Bytes',
        accessList: 'EthAccessList',
        signature: 'EthTransactionSignature'
    },
    TransactionV1: {
        _enum: {
            Legacy: 'LegacyTransaction',
            EIP2930: 'EIP2930Transaction'
        }
    }
};
const V2 = {
    BlockV2: {
        header: 'EthHeader',
        transactions: 'Vec<TransactionV2>',
        ommers: 'Vec<EthHeader>'
    },
    EIP1559Transaction: {
        chainId: 'u64',
        nonce: 'U256',
        maxPriorityFeePerGas: 'U256',
        maxFeePerGas: 'U256',
        gasLimit: 'U256',
        action: 'EthTransactionAction',
        value: 'U256',
        input: 'Bytes',
        accessList: 'EthAccessList',
        signature: 'EthTransactionSignature'
    },
    TransactionV2: {
        _enum: {
            Legacy: 'LegacyTransaction',
            EIP2930: 'EIP2930Transaction',
            EIP1559: 'EIP1559Transaction'
        }
    }
};
const V3 = {
    BlockV3: {
        header: 'EthHeader',
        transactions: 'Vec<TransactionV3>',
        ommers: 'Vec<EthHeader>'
    },
    EIP7702Transaction: {
        chainId: 'u64',
        nonce: 'U256',
        maxPriorityFeePerGas: 'U256',
        maxFeePerGas: 'U256',
        gasLimit: 'U256',
        destination: 'EthTransactionAction',
        value: 'U256',
        data: 'Bytes',
        accessList: 'EthAccessList',
        authorizationList: 'EthAuthorizationList',
        signature: 'EthTransactionSignature'
    },
    TransactionV3: {
        _enum: {
            Legacy: 'LegacyTransaction',
            EIP2930: 'EIP2930Transaction',
            EIP1559: 'EIP1559Transaction',
            EIP7702: 'EIP7702Transaction'
        }
    }
};
const types = {
    ...V0,
    ...V1,
    ...V2,
    ...V3,
    EthereumAccountId: 'GenericEthereumAccountId',
    EthereumAddress: 'GenericEthereumAccountId',
    EthereumLookupSource: 'GenericEthereumLookupSource',
    EthereumSignature: '[u8; 65]',
    EthAccessListItem: {
        address: 'EthAddress',
        slots: 'Vec<H256>'
    },
    EthAccessList: 'Vec<EthAccessListItem>',
    EthAuthorizationList: 'Vec<EthAuthorizationListItem>',
    EthAuthorizationListItem: {
        chainId: 'u64',
        address: 'H160',
        nonce: 'U256',
        signature: 'EthAuthorizationSignature'
    },
    EthAuthorizationSignature: {
        oddYParity: 'bool',
        r: 'H256',
        s: 'H256'
    },
    EthAccount: {
        address: 'EthAddress',
        balance: 'U256',
        nonce: 'U256',
        codeHash: 'H256',
        storageHash: 'H256',
        accountProof: 'Vec<Bytes>',
        storageProof: 'Vec<EthStorageProof>'
    },
    EthAddress: 'H160',
    EthBlock: {
        header: 'EthHeader',
        transactions: 'Vec<EthTransaction>',
        ommers: 'Vec<EthHeader>'
    },
    EthHeader: {
        parentHash: 'H256',
        ommersHash: 'H256',
        beneficiary: 'EthAddress',
        stateRoot: 'H256',
        transactionsRoot: 'H256',
        receiptsRoot: 'H256',
        logsBloom: 'EthBloom',
        difficulty: 'U256',
        number: 'U256',
        gasLimit: 'U256',
        gasUsed: 'U256',
        timestamp: 'u64',
        extraData: 'Bytes',
        mixMash: 'H256',
        nonce: 'H64'
    },
    EthRichBlock: {
        _alias: {
            blockHash: 'hash',
            blockSize: 'size'
        },
        blockHash: 'Option<H256>',
        parentHash: 'H256',
        sha3Uncles: 'H256',
        author: 'EthAddress',
        miner: 'EthAddress',
        stateRoot: 'H256',
        transactionsRoot: 'H256',
        receiptsRoot: 'H256',
        number: 'Option<U256>',
        gasUsed: 'U256',
        gasLimit: 'U256',
        extraData: 'Bytes',
        logsBloom: 'EthBloom',
        timestamp: 'U256',
        difficulty: 'U256',
        totalDifficulty: 'Option<U256>',
        sealFields: 'Vec<Bytes>',
        uncles: 'Vec<H256>',
        transactions: 'Vec<EthTransaction>',
        blockSize: 'Option<U256>'
    },
    EthBloom: 'H2048',
    EthCallRequest: {
        from: 'Option<EthAddress>',
        to: 'Option<EthAddress>',
        gasPrice: 'Option<U256>',
        gas: 'Option<U256>',
        value: 'Option<U256>',
        data: 'Option<Bytes>',
        nonce: 'Option<U256>'
    },
    EthFeeHistory: {
        oldestBlock: 'U256',
        baseFeePerGas: 'Vec<U256>',
        gasUsedRatio: 'Vec<f64>',
        reward: 'Option<Vec<Vec<U256>>>'
    },
    EthFilter: {
        fromBlock: 'Option<BlockNumber>',
        toBlock: 'Option<BlockNumber>',
        blockHash: 'Option<H256>',
        address: 'Option<EthFilterAddress>',
        topics: 'Option<EthFilterTopic>'
    },
    EthFilterAddress: {
        _enum: {
            Single: 'EthAddress',
            Multiple: 'Vec<EthAddress>',
            Null: 'Null'
        }
    },
    EthFilterChanges: {
        _enum: {
            Logs: 'Vec<EthLog>',
            Hashes: 'Vec<H256>',
            Empty: 'Null'
        }
    },
    EthFilterTopic: {
        _enum: {
            Single: 'EthFilterTopicInner',
            Multiple: 'Vec<EthFilterTopicInner>',
            Null: 'Null'
        }
    },
    EthFilterTopicEntry: 'Option<H256>',
    EthFilterTopicInner: {
        _enum: {
            Single: 'EthFilterTopicEntry',
            Multiple: 'Vec<EthFilterTopicEntry>',
            Null: 'Null'
        }
    },
    EthRichHeader: {
        _alias: {
            blockHash: 'hash',
            blockSize: 'size'
        },
        blockHash: 'Option<H256>',
        parentHash: 'H256',
        sha3Uncles: 'H256',
        author: 'EthAddress',
        miner: 'EthAddress',
        stateRoot: 'H256',
        transactionsRoot: 'H256',
        receiptsRoot: 'H256',
        number: 'Option<U256>',
        gasUsed: 'U256',
        gasLimit: 'U256',
        extraData: 'Bytes',
        logsBloom: 'EthBloom',
        timestamp: 'U256',
        difficulty: 'U256',
        sealFields: 'Vec<Bytes>',
        blockSize: 'Option<U256>'
    },
    EthLog: {
        address: 'EthAddress',
        topics: 'Vec<H256>',
        data: 'Bytes',
        blockHash: 'Option<H256>',
        blockNumber: 'Option<U256>',
        transactionHash: 'Option<H256>',
        transactionIndex: 'Option<U256>',
        logIndex: 'Option<U256>',
        transactionLogIndex: 'Option<U256>',
        removed: 'bool'
    },
    EthReceipt: {
        transactionHash: 'Option<H256>',
        transactionIndex: 'Option<U256>',
        blockHash: 'Option<H256>',
        from: 'Option<EthAddress>',
        to: 'Option<EthAddress>',
        blockNumber: 'Option<U256>',
        cumulativeGasUsed: 'U256',
        gasUsed: 'Option<U256>',
        contractAddress: 'Option<EthAddress>',
        logs: 'Vec<EthLog>',
        root: 'Option<H256>',
        logsBloom: 'EthBloom',
        statusCode: 'Option<U64>'
    },
    // not convinced, however the original commit matches, so... (maybe V3 is incorrect?)
    EthReceiptV0: 'EthReceipt',
    EthReceiptV3: 'EthReceipt',
    EthReceiptV4: 'EthReceipt',
    EthStorageProof: {
        key: 'U256',
        value: 'U256',
        proof: 'Vec<Bytes>'
    },
    EthSubKind: {
        _enum: [
            'newHeads',
            'logs',
            'newPendingTransactions',
            'syncing'
        ]
    },
    EthSubParams: {
        _enum: {
            None: 'Null',
            Logs: 'EthFilter'
        }
    },
    EthSubResult: {
        _enum: {
            Header: 'EthRichHeader',
            Log: 'EthLog',
            TransactionHash: 'H256',
            SyncState: 'EthSyncStatus'
        }
    },
    EthSyncInfo: {
        startingBlock: 'U256',
        currentBlock: 'U256',
        highestBlock: 'U256',
        warpChunksAmount: 'Option<U256>',
        warpChunksProcessed: 'Option<U256>'
    },
    EthSyncStatus: {
        _enum: {
            Info: 'EthSyncInfo',
            None: 'Null'
        }
    },
    EthTransaction: {
        hash: 'H256',
        nonce: 'U256',
        blockHash: 'Option<H256>',
        blockNumber: 'Option<U256>',
        transactionIndex: 'Option<U256>',
        from: 'H160',
        to: 'Option<H160>',
        value: 'U256',
        gasPrice: 'Option<U256>',
        maxFeePerGas: 'Option<U256>',
        maxPriorityFeePerGas: 'Option<U256>',
        gas: 'U256',
        input: 'Bytes',
        creates: 'Option<H160>',
        raw: 'Bytes',
        publicKey: 'Option<H512>',
        chainId: 'Option<U64>',
        standardV: 'U256',
        v: 'U256',
        r: 'U256',
        s: 'U256',
        accessList: 'Option<Vec<EthAccessListItem>>',
        transactionType: 'Option<U256>'
    },
    EthLegacyTransactionSignature: {
        v: 'u64',
        r: 'H256',
        s: 'H256'
    },
    EthTransactionSignature: {
        oddYParity: 'bool',
        r: 'H256',
        s: 'H256'
    },
    EthTransactionAction: {
        _enum: {
            Call: 'H160',
            Create: 'Null'
        }
    },
    EthTransactionCondition: {
        _enum: {
            block: 'u64',
            time: 'u64'
        }
    },
    EthTransactionRequest: {
        from: 'Option<EthAddress>',
        to: 'Option<EthAddress>',
        gasPrice: 'Option<U256>',
        gas: 'Option<U256>',
        value: 'Option<U256>',
        data: 'Option<Bytes>',
        nonce: 'Option<U256>'
    },
    EthTransactionStatus: {
        transactionHash: 'H256',
        transactionIndex: 'u32',
        from: 'EthAddress',
        to: 'Option<EthAddress>',
        contractAddress: 'Option<EthAddress>',
        logs: 'Vec<EthLog>',
        logsBloom: 'EthBloom'
    },
    EthWork: {
        powHash: 'H256',
        seedHash: 'H256',
        target: 'H256',
        number: 'Option<u64>'
    }
};
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$eth$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$eth$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types
};
}),
"[project]/node_modules/@polkadot/types/interfaces/nimbus/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    // deprecated, the NimbusApi is current - this is for backwards compat
    AuthorFilterAPI: [
        {
            methods: {
                can_author: {
                    description: 'The runtime api used to predict whether an author will be eligible in the given slot',
                    params: [
                        {
                            name: 'author',
                            type: 'AccountId'
                        },
                        {
                            name: 'relayParent',
                            type: 'u32'
                        },
                        {
                            name: 'parentHeader',
                            type: 'Header'
                        }
                    ],
                    type: 'bool'
                }
            },
            version: 2
        },
        {
            methods: {
                can_author: {
                    description: 'The runtime api used to predict whether an author will be eligible in the given slot',
                    params: [
                        {
                            name: 'author',
                            type: 'AccountId'
                        },
                        {
                            name: 'relayParent',
                            type: 'u32'
                        }
                    ],
                    type: 'bool'
                }
            },
            version: 1
        }
    ],
    NimbusApi: [
        {
            methods: {
                can_author: {
                    description: 'The runtime api used to predict whether a Nimbus author will be eligible in the given slot',
                    params: [
                        {
                            name: 'author',
                            type: 'AccountId'
                        },
                        {
                            name: 'relayParent',
                            type: 'u32'
                        },
                        {
                            name: 'parentHeader',
                            type: 'Header'
                        }
                    ],
                    type: 'bool'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/nimbus/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nimbus$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/nimbus/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nimbus$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {}
};
}),
"[project]/node_modules/@polkadot/types/interfaces/ormlOracle/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    // https://github.com/open-web3-stack/open-runtime-module-library/blob/b57f88b39cd547e2fb51727d8bb9bcc64fddf8b5/oracle/rpc/runtime-api/src/lib.rs#L12-L21
    OracleApi: [
        {
            methods: {
                get_all_values: {
                    description: 'Retrieves all values',
                    params: [
                        {
                            name: 'providerId',
                            // This is a Codec type
                            type: 'Raw'
                        }
                    ],
                    // This won't actually work as expected - since we have
                    // no information about the actual Raw sizes, we cannot
                    // handle it in this format (it would need an override
                    // for the specific Codec). So return the Raw value.
                    // type: 'Vec<(Raw, Option<Raw>)>'
                    type: 'Raw'
                },
                get_value: {
                    description: 'Retrieves a single value',
                    params: [
                        {
                            name: 'providerId',
                            // This is a Codec type
                            type: 'Raw'
                        },
                        {
                            name: 'key',
                            // This is a Codec type
                            type: 'Raw'
                        }
                    ],
                    // This is an Option<Codec> type
                    type: 'Option<Raw>'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/ormlOracle/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$ormlOracle$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/ormlOracle/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$ormlOracle$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {}
};
}),
"[project]/node_modules/@polkadot/types/interfaces/ormlTokens/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    // https://github.com/open-web3-stack/open-runtime-module-library/blob/b57f88b39cd547e2fb51727d8bb9bcc64fddf8b5/tokens/rpc/runtime-api/src/lib.rs#L11-L18
    TokensApi: [
        {
            methods: {
                query_existential_deposit: {
                    description: 'Query the existential amount for a specific currency',
                    params: [
                        {
                            name: 'currencyId',
                            // This is CurrencyId, as per the return value, we are unsure
                            // if this is specialized and/or global to the chain or not
                            type: 'Raw'
                        }
                    ],
                    // This is Balance - since we don't understand enough about the way
                    // in which this is used, we default to u128 here (it certainly could
                    // be a specialized type that doesn't map to the on-chain Balance)
                    type: 'u128'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/ormlTokens/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$ormlTokens$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/ormlTokens/runtime.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: {},
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$ormlTokens$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {}
};
}),
"[project]/node_modules/@polkadot/types/interfaces/rpc/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    methods: {
        description: 'Retrieves the list of RPC methods that are exposed by the node',
        params: [],
        type: 'RpcMethods'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/rpc/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$rpc$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/rpc/rpc.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$rpc$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    types: {
        RpcMethods: {
            version: 'u32',
            methods: 'Vec<Text>'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/author/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    hasKey: {
        description: 'Returns true if the keystore has private keys for the given public key and key type.',
        isUnsafe: true,
        params: [
            {
                name: 'publicKey',
                type: 'Bytes'
            },
            {
                name: 'keyType',
                type: 'Text'
            }
        ],
        type: 'bool'
    },
    hasSessionKeys: {
        description: 'Returns true if the keystore has private keys for the given session public keys.',
        isUnsafe: true,
        params: [
            {
                name: 'sessionKeys',
                type: 'Bytes'
            }
        ],
        type: 'bool'
    },
    insertKey: {
        description: 'Insert a key into the keystore.',
        isUnsafe: true,
        params: [
            {
                name: 'keyType',
                type: 'Text'
            },
            {
                name: 'suri',
                type: 'Text'
            },
            {
                name: 'publicKey',
                type: 'Bytes'
            }
        ],
        type: 'Bytes'
    },
    pendingExtrinsics: {
        description: 'Returns all pending extrinsics, potentially grouped by sender',
        params: [],
        type: 'Vec<Extrinsic>'
    },
    removeExtrinsic: {
        description: 'Remove given extrinsic from the pool and temporarily ban it to prevent reimporting',
        isUnsafe: true,
        params: [
            {
                name: 'bytesOrHash',
                type: 'Vec<ExtrinsicOrHash>'
            }
        ],
        type: 'Vec<Hash>'
    },
    rotateKeys: {
        description: 'Generate new session keys and returns the corresponding public keys',
        isUnsafe: true,
        params: [],
        type: 'Bytes'
    },
    submitAndWatchExtrinsic: {
        description: 'Submit and subscribe to watch an extrinsic until unsubscribed',
        isSigned: true,
        params: [
            {
                name: 'extrinsic',
                type: 'Extrinsic'
            }
        ],
        pubsub: [
            'extrinsicUpdate',
            'submitAndWatchExtrinsic',
            'unwatchExtrinsic'
        ],
        type: 'ExtrinsicStatus'
    },
    submitExtrinsic: {
        description: 'Submit a fully formatted extrinsic for block inclusion',
        isSigned: true,
        params: [
            {
                name: 'extrinsic',
                type: 'Extrinsic'
            }
        ],
        type: 'Hash'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/author/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$author$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/author/rpc.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$author$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    types: {
        ExtrinsicOrHash: {
            _enum: {
                Hash: 'Hash',
                Extrinsic: 'Bytes'
            }
        },
        ExtrinsicStatus: {
            _enum: {
                Future: 'Null',
                Ready: 'Null',
                Broadcast: 'Vec<Text>',
                InBlock: 'Hash',
                Retracted: 'Hash',
                FinalityTimeout: 'Hash',
                Finalized: 'Hash',
                Usurped: 'Hash',
                Dropped: 'Null',
                Invalid: 'Null'
            }
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/chain/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    getBlock: {
        description: 'Get header and body of a relay chain block',
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'hash',
                type: 'BlockHash'
            }
        ],
        type: 'SignedBlock'
    },
    getBlockHash: {
        description: 'Get the block hash for a specific block',
        params: [
            {
                isOptional: true,
                name: 'blockNumber',
                type: 'BlockNumber'
            }
        ],
        type: 'BlockHash'
    },
    getFinalizedHead: {
        alias: [
            'chain_getFinalisedHead'
        ],
        description: 'Get hash of the last finalized block in the canon chain',
        params: [],
        type: 'BlockHash'
    },
    getHeader: {
        alias: [
            'chain_getHead'
        ],
        description: 'Retrieves the header for a specific block',
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'hash',
                type: 'BlockHash'
            }
        ],
        type: 'Header'
    },
    subscribeAllHeads: {
        description: 'Retrieves the newest header via subscription',
        params: [],
        pubsub: [
            'allHead',
            'subscribeAllHeads',
            'unsubscribeAllHeads'
        ],
        type: 'Header'
    },
    subscribeFinalizedHeads: {
        alias: [
            'chain_subscribeFinalisedHeads',
            'chain_unsubscribeFinalisedHeads'
        ],
        description: 'Retrieves the best finalized header via subscription',
        params: [],
        pubsub: [
            'finalizedHead',
            'subscribeFinalizedHeads',
            'unsubscribeFinalizedHeads'
        ],
        type: 'Header'
    },
    subscribeNewHeads: {
        alias: [
            'chain_unsubscribeNewHeads',
            'subscribe_newHead',
            'unsubscribe_newHead'
        ],
        description: 'Retrieves the best header via subscription',
        params: [],
        // NOTE These still has the aliassed version, compatible with 1.x
        pubsub: [
            'newHead',
            'subscribeNewHead',
            'unsubscribeNewHead'
        ],
        type: 'Header'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/chain/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$chain$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/chain/rpc.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$chain$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    types: {
        BlockHash: 'Hash'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/childstate/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    getKeys: {
        description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'prefix',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Vec<StorageKey>'
    },
    getKeysPaged: {
        alias: [
            'childstate_getKeysPagedAt'
        ],
        description: 'Returns the keys with prefix from a child storage with pagination support',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'prefix',
                type: 'StorageKey'
            },
            {
                name: 'count',
                type: 'u32'
            },
            {
                isOptional: true,
                name: 'startKey',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Vec<StorageKey>'
    },
    getStorage: {
        description: 'Returns a child storage entry at a specific block state',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Option<StorageData>'
    },
    getStorageEntries: {
        description: 'Returns child storage entries for multiple keys at a specific block state',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'keys',
                type: 'Vec<StorageKey>'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Vec<Option<StorageData>>'
    },
    getStorageHash: {
        description: 'Returns the hash of a child storage entry at a block state',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Option<Hash>'
    },
    getStorageSize: {
        description: 'Returns the size of a child storage entry at a block state',
        params: [
            {
                name: 'childKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'Hash'
            }
        ],
        type: 'Option<u64>'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/childstate/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$childstate$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/childstate/rpc.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$childstate$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    types: {
        // StorageKey extends Bytes
        PrefixedStorageKey: 'StorageKey'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/offchain/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    localStorageClear: {
        description: 'Clear offchain local storage under given key and prefix',
        isUnsafe: true,
        params: [
            {
                name: 'kind',
                type: 'StorageKind'
            },
            {
                name: 'key',
                type: 'Bytes'
            }
        ],
        type: 'Null'
    },
    localStorageGet: {
        description: 'Get offchain local storage under given key and prefix',
        isUnsafe: true,
        params: [
            {
                name: 'kind',
                type: 'StorageKind'
            },
            {
                name: 'key',
                type: 'Bytes'
            }
        ],
        type: 'Option<Bytes>'
    },
    localStorageSet: {
        description: 'Set offchain local storage under given key and prefix',
        isUnsafe: true,
        params: [
            {
                name: 'kind',
                type: 'StorageKind'
            },
            {
                name: 'key',
                type: 'Bytes'
            },
            {
                name: 'value',
                type: 'Bytes'
            }
        ],
        type: 'Null'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/offchain/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const runtime = {
    OffchainWorkerApi: [
        {
            methods: {
                offchain_worker: {
                    description: 'Starts the off-chain task for given block header.',
                    params: [
                        {
                            name: 'header',
                            type: 'Header'
                        }
                    ],
                    type: 'Null'
                }
            },
            version: 2
        },
        {
            methods: {
                offchain_worker: {
                    description: 'Starts the off-chain task for given block header.',
                    params: [
                        {
                            name: 'number',
                            type: 'BlockNumber'
                        }
                    ],
                    type: 'Null'
                }
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/offchain/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$offchain$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/offchain/rpc.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$offchain$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/offchain/runtime.js [app-ssr] (ecmascript)");
;
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$offchain$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$offchain$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        StorageKind: {
            _enum: {
                PERSISTENT: 1,
                LOCAL: 2
            }
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/payment/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    queryFeeDetails: {
        // NOTE: Not deprecated (yet) in Substrate, but it is the intent to do so
        deprecated: 'Use `api.call.transactionPaymentApi.queryFeeDetails` instead',
        description: 'Query the detailed fee of a given encoded extrinsic',
        params: [
            {
                name: 'extrinsic',
                type: 'Bytes'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'FeeDetails'
    },
    queryInfo: {
        // NOTE: Not deprecated (yet) in Substrate, but it is the intent to do so
        deprecated: 'Use `api.call.transactionPaymentApi.queryInfo` instead',
        description: 'Retrieves the fee information for an encoded extrinsic',
        params: [
            {
                name: 'extrinsic',
                type: 'Bytes'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        // NOTE: Stuck on V1 forever (at least for the time being)
        type: 'RuntimeDispatchInfoV1'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/payment/runtime.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "runtime",
    ()=>runtime
]);
const V1_TO_V4_SHARED_PAY = {
    query_fee_details: {
        description: 'The transaction fee details',
        params: [
            {
                name: 'uxt',
                type: 'Extrinsic'
            },
            {
                name: 'len',
                type: 'u32'
            }
        ],
        type: 'FeeDetails'
    }
};
const V1_TO_V3_SHARED_CALL = {
    query_call_fee_details: {
        description: 'The call fee details',
        params: [
            {
                name: 'call',
                type: 'Call'
            },
            {
                name: 'len',
                type: 'u32'
            }
        ],
        type: 'FeeDetails'
    }
};
const V2_TO_V4_SHARED_PAY = {
    query_info: {
        description: 'The transaction info',
        params: [
            {
                name: 'uxt',
                type: 'Extrinsic'
            },
            {
                name: 'len',
                type: 'u32'
            }
        ],
        type: 'RuntimeDispatchInfo'
    }
};
const V2_V3_SHARED_CALL = {
    query_call_info: {
        description: 'The call info',
        params: [
            {
                name: 'call',
                type: 'Call'
            },
            {
                name: 'len',
                type: 'u32'
            }
        ],
        type: 'RuntimeDispatchInfo'
    }
};
const V3_SHARED_PAY_CALL = {
    query_length_to_fee: {
        description: 'Query the output of the current LengthToFee given some input',
        params: [
            {
                name: 'length',
                type: 'u32'
            }
        ],
        type: 'Balance'
    },
    query_weight_to_fee: {
        description: 'Query the output of the current WeightToFee given some input',
        params: [
            {
                name: 'weight',
                type: 'Weight'
            }
        ],
        type: 'Balance'
    }
};
const runtime = {
    TransactionPaymentApi: [
        {
            // V4 is equivalent to V3 (V4 just dropped all V1 references)
            methods: {
                ...V3_SHARED_PAY_CALL,
                ...V2_TO_V4_SHARED_PAY,
                ...V1_TO_V4_SHARED_PAY
            },
            version: 4
        },
        {
            methods: {
                ...V3_SHARED_PAY_CALL,
                ...V2_TO_V4_SHARED_PAY,
                ...V1_TO_V4_SHARED_PAY
            },
            version: 3
        },
        {
            methods: {
                ...V2_TO_V4_SHARED_PAY,
                ...V1_TO_V4_SHARED_PAY
            },
            version: 2
        },
        {
            methods: {
                query_info: {
                    description: 'The transaction info',
                    params: [
                        {
                            name: 'uxt',
                            type: 'Extrinsic'
                        },
                        {
                            name: 'len',
                            type: 'u32'
                        }
                    ],
                    // NOTE: _Should_ be V1 (as per current Substrate), however the interface was
                    // changed mid-flight between versions. So we have some of each depending on
                    // runtime. (We do detect the weight type, so correct)
                    type: 'RuntimeDispatchInfo'
                },
                ...V1_TO_V4_SHARED_PAY
            },
            version: 1
        }
    ],
    TransactionPaymentCallApi: [
        {
            methods: {
                ...V3_SHARED_PAY_CALL,
                ...V2_V3_SHARED_CALL,
                ...V1_TO_V3_SHARED_CALL
            },
            version: 3
        },
        {
            methods: {
                ...V2_V3_SHARED_CALL,
                ...V1_TO_V3_SHARED_CALL
            },
            version: 2
        },
        {
            methods: {
                CALL: {
                    description: 'The call info',
                    params: [
                        {
                            name: 'call',
                            type: 'Call'
                        },
                        {
                            name: 'len',
                            type: 'u32'
                        }
                    ],
                    // NOTE: As per the above comment, the below is correct according to Substrate, but
                    // _may_ yield fallback decoding on some versions of the runtime
                    type: 'RuntimeDispatchInfo'
                },
                ...V1_TO_V3_SHARED_CALL
            },
            version: 1
        }
    ]
};
}),
"[project]/node_modules/@polkadot/types/interfaces/payment/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$payment$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/payment/rpc.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$payment$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/payment/runtime.js [app-ssr] (ecmascript)");
;
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$payment$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    runtime: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$payment$2f$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    types: {
        FeeDetails: {
            inclusionFee: 'Option<InclusionFee>'
        },
        InclusionFee: {
            baseFee: 'Balance',
            lenFee: 'Balance',
            adjustedWeightFee: 'Balance'
        },
        RuntimeDispatchInfo: {
            weight: 'Weight',
            class: 'DispatchClass',
            partialFee: 'Balance'
        },
        RuntimeDispatchInfoV1: {
            weight: 'WeightV1',
            class: 'DispatchClass',
            partialFee: 'Balance'
        },
        RuntimeDispatchInfoV2: {
            weight: 'WeightV2',
            class: 'DispatchClass',
            partialFee: 'Balance'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/state/rpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpc",
    ()=>rpc
]);
const rpc = {
    call: {
        alias: [
            'state_callAt'
        ],
        description: 'Perform a call to a builtin on the chain',
        params: [
            {
                name: 'method',
                type: 'Text'
            },
            {
                name: 'data',
                type: 'Bytes'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Bytes'
    },
    getChildKeys: {
        description: 'Retrieves the keys with prefix of a specific child storage',
        params: [
            {
                name: 'childStorageKey',
                type: 'StorageKey'
            },
            {
                name: 'childDefinition',
                type: 'StorageKey'
            },
            {
                name: 'childType',
                type: 'u32'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<StorageKey>'
    },
    getChildReadProof: {
        description: 'Returns proof of storage for child key entries at a specific block state.',
        params: [
            {
                name: 'childStorageKey',
                type: 'PrefixedStorageKey'
            },
            {
                name: 'keys',
                type: 'Vec<StorageKey>'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'ReadProof'
    },
    getChildStorage: {
        description: 'Retrieves the child storage for a key',
        params: [
            {
                name: 'childStorageKey',
                type: 'StorageKey'
            },
            {
                name: 'childDefinition',
                type: 'StorageKey'
            },
            {
                name: 'childType',
                type: 'u32'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'StorageData'
    },
    getChildStorageHash: {
        description: 'Retrieves the child storage hash',
        params: [
            {
                name: 'childStorageKey',
                type: 'StorageKey'
            },
            {
                name: 'childDefinition',
                type: 'StorageKey'
            },
            {
                name: 'childType',
                type: 'u32'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Hash'
    },
    getChildStorageSize: {
        description: 'Retrieves the child storage size',
        params: [
            {
                name: 'childStorageKey',
                type: 'StorageKey'
            },
            {
                name: 'childDefinition',
                type: 'StorageKey'
            },
            {
                name: 'childType',
                type: 'u32'
            },
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'u64'
    },
    getKeys: {
        deprecated: 'Use `api.rpc.state.getKeysPaged` to retrieve keys',
        description: 'Retrieves the keys with a certain prefix',
        params: [
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<StorageKey>'
    },
    getKeysPaged: {
        alias: [
            'state_getKeysPagedAt'
        ],
        description: 'Returns the keys with prefix with pagination support.',
        params: [
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                name: 'count',
                type: 'u32'
            },
            {
                isOptional: true,
                name: 'startKey',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<StorageKey>'
    },
    getMetadata: {
        description: 'Returns the runtime metadata',
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Metadata'
    },
    getPairs: {
        deprecated: 'Use `api.rpc.state.getKeysPaged` to retrieve keys',
        description: 'Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)',
        isUnsafe: true,
        params: [
            {
                name: 'prefix',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<KeyValue>'
    },
    getReadProof: {
        description: 'Returns proof of storage entries at a specific block state',
        params: [
            {
                name: 'keys',
                type: 'Vec<StorageKey>'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'ReadProof'
    },
    getRuntimeVersion: {
        alias: [
            'chain_getRuntimeVersion'
        ],
        description: 'Get the runtime version',
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'RuntimeVersion'
    },
    getStorage: {
        alias: [
            'state_getStorageAt'
        ],
        description: 'Retrieves the storage for a key',
        params: [
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'StorageData'
    },
    getStorageHash: {
        alias: [
            'state_getStorageHashAt'
        ],
        description: 'Retrieves the storage hash',
        params: [
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Hash'
    },
    getStorageSize: {
        alias: [
            'state_getStorageSizeAt'
        ],
        description: 'Retrieves the storage size',
        params: [
            {
                name: 'key',
                type: 'StorageKey'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'u64'
    },
    queryStorage: {
        description: 'Query historical storage entries (by key) starting from a start block',
        isUnsafe: true,
        params: [
            {
                name: 'keys',
                type: 'Vec<StorageKey>'
            },
            {
                name: 'fromBlock',
                type: 'Hash'
            },
            {
                isOptional: true,
                name: 'toBlock',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<StorageChangeSet>'
    },
    queryStorageAt: {
        description: 'Query storage entries (by key) starting at block hash given as the second parameter',
        params: [
            {
                name: 'keys',
                type: 'Vec<StorageKey>'
            },
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'Vec<StorageChangeSet>'
    },
    subscribeRuntimeVersion: {
        alias: [
            'chain_subscribeRuntimeVersion',
            'chain_unsubscribeRuntimeVersion'
        ],
        description: 'Retrieves the runtime version via subscription',
        params: [],
        pubsub: [
            'runtimeVersion',
            'subscribeRuntimeVersion',
            'unsubscribeRuntimeVersion'
        ],
        type: 'RuntimeVersion'
    },
    subscribeStorage: {
        description: 'Subscribes to storage changes for the provided keys',
        // NOTE Just marking it here to follow the logic - this is unsafe when no
        // keys are provided (i.e. subscribing to all), generally this is used
        // extensively with normal subscriptions
        // isUnsafe: true,
        params: [
            {
                isOptional: true,
                name: 'keys',
                type: 'Vec<StorageKey>'
            }
        ],
        pubsub: [
            'storage',
            'subscribeStorage',
            'unsubscribeStorage'
        ],
        type: 'StorageChangeSet'
    },
    traceBlock: {
        description: 'Provides a way to trace the re-execution of a single block',
        isUnsafe: true,
        params: [
            {
                name: 'block',
                type: 'Hash'
            },
            {
                name: 'targets',
                type: 'Option<Text>'
            },
            {
                name: 'storageKeys',
                type: 'Option<Text>'
            },
            {
                name: 'methods',
                type: 'Option<Text>'
            }
        ],
        type: 'TraceBlockResponse'
    },
    trieMigrationStatus: {
        description: 'Check current migration state',
        isUnsafe: true,
        params: [
            {
                isHistoric: true,
                isOptional: true,
                name: 'at',
                type: 'BlockHash'
            }
        ],
        type: 'MigrationStatusResult'
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/state/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$state$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/state/rpc.js [app-ssr] (ecmascript)");
;
const __TURBOPACK__default__export__ = {
    rpc: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$state$2f$rpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rpc"],
    types: {
        ApiId: '[u8; 8]',
        BlockTrace: {
            blockHash: 'Text',
            parentHash: 'Text',
            tracingTargets: 'Text',
            storageKeys: 'Text',
            spans: 'Vec<BlockTraceSpan>',
            events: 'Vec<BlockTraceEvent>'
        },
        BlockTraceEvent: {
            target: 'Text',
            data: 'BlockTraceEventData',
            parentId: 'Option<u64>'
        },
        BlockTraceEventData: {
            stringValues: 'HashMap<Text, Text>'
        },
        BlockTraceSpan: {
            id: 'u64',
            parentId: 'Option<u64>',
            name: 'Text',
            target: 'Text',
            wasm: 'bool'
        },
        KeyValueOption: '(StorageKey, Option<StorageData>)',
        MigrationStatusResult: {
            topRemainingToMigrate: 'u64',
            childRemainingToMigrate: 'u64'
        },
        ReadProof: {
            at: 'Hash',
            proof: 'Vec<Bytes>'
        },
        RuntimeVersionApi: '(ApiId, u32)',
        RuntimeVersion: {
            specName: 'Text',
            implName: 'Text',
            authoringVersion: 'u32',
            specVersion: 'u32',
            implVersion: 'u32',
            apis: 'Vec<RuntimeVersionApi>',
            transactionVersion: 'u32',
            stateVersion: 'u8'
        },
        RuntimeVersionPre4: {
            specName: 'Text',
            implName: 'Text',
            authoringVersion: 'u32',
            specVersion: 'u32',
            implVersion: 'u32',
            apis: 'Vec<RuntimeVersionApi>',
            transactionVersion: 'u32'
        },
        RuntimeVersionPre3: {
            specName: 'Text',
            implName: 'Text',
            authoringVersion: 'u32',
            specVersion: 'u32',
            implVersion: 'u32',
            apis: 'Vec<RuntimeVersionApi>'
        },
        RuntimeVersionPartial: {
            specName: 'Text',
            specVersion: 'u32',
            apis: 'Vec<RuntimeVersionApi>'
        },
        SpecVersion: 'u32',
        StorageChangeSet: {
            block: 'Hash',
            changes: 'Vec<KeyValueOption>'
        },
        TraceBlockResponse: {
            _enum: {
                TraceError: 'TraceError',
                BlockTrace: 'BlockTrace'
            }
        },
        TraceError: {
            error: 'Text'
        }
    }
};
}),
"[project]/node_modules/@polkadot/types/interfaces/definitions.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "assetConversion",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$assetConversion$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "assets",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$assets$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "attestations",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$attestations$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "aura",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$aura$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "author",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$author$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "authorship",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$authorship$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "babe",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$babe$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "balances",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$balances$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "beefy",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$beefy$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "benchmark",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$benchmark$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "blockbuilder",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$blockbuilder$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "bridges",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$bridges$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "chain",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$chain$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "childstate",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$childstate$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "claims",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$claims$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "collective",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$collective$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "consensus",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$consensus$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "contracts",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$contracts$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "contractsAbi",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$contractsAbi$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "crowdloan",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$crowdloan$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "cumulus",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$cumulus$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "democracy",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$democracy$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "dev",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$dev$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "discovery",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$discovery$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "dryRunApi",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$dryRunApi$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "elections",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$elections$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "engine",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$engine$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "eth",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$eth$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "evm",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$evm$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "extrinsics",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$extrinsics$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "finality",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$finality$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "fungibles",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$fungibles$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "genericAsset",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$genericAsset$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "genesisBuilder",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$genesisBuilder$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "gilt",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$gilt$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "grandpa",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$grandpa$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "identity",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$identity$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "imOnline",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$imOnline$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "lottery",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$lottery$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "metadata",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$essentials$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["metadata"],
    "mixnet",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$mixnet$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "mmr",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$mmr$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "nfts",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nfts$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "nimbus",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nimbus$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "nompools",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nompools$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "offchain",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$offchain$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "offences",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$offences$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "ormlOracle",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$ormlOracle$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "ormlTokens",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$ormlTokens$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "parachains",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$parachains$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "payment",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$payment$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "poll",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$poll$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "pow",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$pow$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "proxy",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$proxy$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "purchase",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$purchase$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "recovery",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$recovery$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "rpc",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$rpc$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "runtime",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$essentials$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["runtime"],
    "scaleInfo",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$essentials$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["scaleInfo"],
    "scheduler",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scheduler$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "session",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$session$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "society",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$society$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "staking",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$staking$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "state",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$state$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "statement",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$statement$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "support",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$support$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "syncstate",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$syncstate$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "system",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$system$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "treasury",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$treasury$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "txpayment",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$txpayment$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "txqueue",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$txqueue$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "uniques",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$uniques$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "utility",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$utility$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "vesting",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$vesting$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "xcm",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "xcmPaymentApi",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcmPaymentApi$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
    "xcmRuntimeApi",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcmRuntimeApi$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/definitions.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$essentials$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/essentials.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$assetConversion$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/assetConversion/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$assets$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/assets/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$aura$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/aura/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$authorship$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/authorship/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$babe$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/babe/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$balances$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/balances/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$beefy$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/beefy/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$benchmark$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/benchmark/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$blockbuilder$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/blockbuilder/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$collective$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/collective/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$consensus$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/consensus/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$contracts$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/contracts/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$democracy$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/democracy/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$dev$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/dev/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$discovery$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/discovery/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$elections$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/elections/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$engine$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/engine/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$evm$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/evm/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$extrinsics$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/extrinsics/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$fungibles$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/fungibles/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$genericAsset$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/genericAsset/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$genesisBuilder$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/genesisBuilder/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$gilt$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/gilt/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$grandpa$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/grandpa/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$identity$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/identity/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$imOnline$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/imOnline/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$lottery$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/lottery/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$mixnet$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/mixnet/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$mmr$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/mmr/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nfts$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/nfts/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nompools$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/nompools/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$offences$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/offences/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$pow$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/pow/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$proxy$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/proxy/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$recovery$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/recovery/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$scheduler$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/scheduler/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$session$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/session/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$society$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/society/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$staking$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/staking/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$statement$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/statement/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$support$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/support/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$syncstate$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/syncstate/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$system$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/system/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$treasury$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/treasury/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$txpayment$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/txpayment/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$txqueue$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/txqueue/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$uniques$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/uniques/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$utility$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/utility/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$vesting$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/vesting/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$attestations$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/attestations/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$bridges$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/bridges/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$claims$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/claims/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$crowdloan$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/crowdloan/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$cumulus$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/cumulus/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$finality$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/finality/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$parachains$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/parachains/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$poll$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/poll/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$purchase$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/purchase/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$dryRunApi$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/dryRunApi/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcm$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/xcm/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcmPaymentApi$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/xcmPaymentApi/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$xcmRuntimeApi$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/xcmRuntimeApi/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$contractsAbi$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/contractsAbi/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$eth$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/eth/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$nimbus$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/nimbus/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$ormlOracle$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/ormlOracle/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$ormlTokens$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/ormlTokens/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$rpc$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/rpc/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$author$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/author/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$chain$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/chain/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$childstate$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/childstate/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$offchain$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/offchain/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$payment$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/payment/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$state$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/state/definitions.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types/create/lazy.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "lazyVariants",
    ()=>lazyVariants
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/lazy.js [app-ssr] (ecmascript)");
;
function lazyVariants(lookup, { type }, getName, creator) {
    const result = {};
    const variants = lookup.getSiType(type).def.asVariant.variants;
    for(let i = 0, count = variants.length; i < count; i++){
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethod"])(result, variants[i], creator, getName, i);
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/util.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "objectNameToCamel",
    ()=>objectNameToCamel,
    "objectNameToString",
    ()=>objectNameToString
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
;
function convert(fn) {
    return ({ name })=>fn(name);
}
const objectNameToCamel = /*#__PURE__*/ convert(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"]);
const objectNameToString = /*#__PURE__*/ convert((n)=>n.toString());
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/extrinsics/createUnchecked.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createUnchecked",
    ()=>createUnchecked
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
;
function isTx(tx, callIndex) {
    return tx.callIndex[0] === callIndex[0] && tx.callIndex[1] === callIndex[1];
}
function createUnchecked(registry, section, callIndex, callMetadata) {
    const expectedArgs = callMetadata.fields;
    const funcName = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(callMetadata.name);
    const extrinsicFn = (...args)=>{
        if (expectedArgs.length !== args.length) {
            throw new Error(`Extrinsic ${section}.${funcName} expects ${expectedArgs.length} arguments, got ${args.length}.`);
        }
        return registry.createTypeUnsafe('Call', [
            {
                args,
                callIndex
            },
            callMetadata
        ]);
    };
    extrinsicFn.is = (tx)=>isTx(tx, callIndex);
    extrinsicFn.callIndex = callIndex;
    extrinsicFn.meta = callMetadata;
    extrinsicFn.method = funcName;
    extrinsicFn.section = section;
    extrinsicFn.toJSON = ()=>callMetadata.toJSON();
    return extrinsicFn;
}
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/extrinsics/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createCallFunction",
    ()=>createCallFunction,
    "decorateExtrinsics",
    ()=>decorateExtrinsics,
    "filterCallsSome",
    ()=>filterCallsSome
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/lazy.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$create$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/create/lazy.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$getSiName$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/util/getSiName.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/util.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$extrinsics$2f$createUnchecked$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/extrinsics/createUnchecked.js [app-ssr] (ecmascript)");
;
;
;
;
;
function filterCallsSome({ calls }) {
    return calls.isSome;
}
function createCallFunction(registry, lookup, variant, sectionName, sectionIndex) {
    const { fields, index } = variant;
    const count = fields.length;
    const args = new Array(count);
    for(let i = 0; i < count; i++){
        const { name, type, typeName } = fields[i];
        args[i] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
            name: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(name.unwrapOr(`param${i}`)),
            type: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$getSiName$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSiName"])(lookup, type)
        }, typeName.isSome ? {
            typeName: typeName.unwrap()
        } : null);
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$extrinsics$2f$createUnchecked$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createUnchecked"])(registry, sectionName, new Uint8Array([
        sectionIndex,
        index.toNumber()
    ]), registry.createTypeUnsafe('FunctionMetadataLatest', [
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
            args
        }, variant)
    ]));
}
function decorateExtrinsics(registry, { lookup, pallets }, version) {
    const result = {};
    const filtered = pallets.filter(filterCallsSome);
    for(let i = 0, count = filtered.length; i < count; i++){
        const { calls, index, name } = filtered[i];
        const sectionName = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(name);
        const sectionIndex = version >= 12 ? index.toNumber() : i;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethod"])(result, sectionName, ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$create$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyVariants"])(lookup, calls.unwrap(), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectNameToCamel"], (variant)=>createCallFunction(registry, lookup, variant, sectionName, sectionIndex)));
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/constants/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "decorateConstants",
    ()=>decorateConstants
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/lazy.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/util.js [app-ssr] (ecmascript)");
;
;
function decorateConstants(registry, { pallets }, _version) {
    const result = {};
    for(let i = 0, count = pallets.length; i < count; i++){
        const { constants, name } = pallets[i];
        if (!constants.isEmpty) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethod"])(result, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(name), ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethods"])({}, constants, (constant)=>{
                    const codec = registry.createTypeUnsafe(registry.createLookupType(constant.type), [
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(constant.value.toHex())
                    ]);
                    // We are casting here since we are assigning to a read-only property
                    codec.meta = constant;
                    return codec;
                }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectNameToCamel"]));
        }
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/errors/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "decorateErrors",
    ()=>decorateErrors,
    "variantToMeta",
    ()=>variantToMeta
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/codec.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/lazy.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$create$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/create/lazy.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/util.js [app-ssr] (ecmascript)");
;
;
;
function variantToMeta(lookup, variant) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
        args: variant.fields.map(({ type })=>lookup.getTypeDef(type).type)
    }, variant);
}
function decorateErrors(registry, { lookup, pallets }, version) {
    const result = {};
    for(let i = 0, count = pallets.length; i < count; i++){
        const { errors, index, name } = pallets[i];
        if (errors.isSome) {
            const sectionIndex = version >= 12 ? index.toNumber() : i;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethod"])(result, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(name), ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$create$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyVariants"])(lookup, errors.unwrap(), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectNameToString"], (variant)=>({
                        // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects
                        is: (errorMod)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(errorMod) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(errorMod.index) && errorMod.index.eq(sectionIndex) && ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(errorMod.error) ? errorMod.error[0] === variant.index.toNumber() : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(errorMod.error) && errorMod.error.eq(variant.index)),
                        meta: registry.createTypeUnsafe('ErrorMetadataLatest', [
                            variantToMeta(lookup, variant)
                        ])
                    })));
        }
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/events/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "decorateEvents",
    ()=>decorateEvents,
    "filterEventsSome",
    ()=>filterEventsSome
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/codec.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/lazy.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$create$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/create/lazy.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$errors$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/errors/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/util.js [app-ssr] (ecmascript)");
;
;
;
;
function filterEventsSome({ events }) {
    return events.isSome;
}
function decorateEvents(registry, { lookup, pallets }, version) {
    const result = {};
    const filtered = pallets.filter(filterEventsSome);
    for(let i = 0, count = filtered.length; i < count; i++){
        const { events, index, name } = filtered[i];
        const sectionIndex = version >= 12 ? index.toNumber() : i;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethod"])(result, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(name), ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$create$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyVariants"])(lookup, events.unwrap(), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectNameToString"], (variant)=>({
                    // We sprinkle in isCodec & isU8a to ensure we are dealing with the correct objects
                    is: (eventRecord)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(eventRecord) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(eventRecord.index) && sectionIndex === eventRecord.index[0] && variant.index.eq(eventRecord.index[1]),
                    meta: registry.createTypeUnsafe('EventMetadataLatest', [
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$errors$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["variantToMeta"])(lookup, variant)
                    ])
                })));
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/types/metadata/PortableRegistry/PortableRegistry.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "PortableRegistry",
    ()=>PortableRegistry
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sanitize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/sanitize.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/util/getTypeDef.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/types/types.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/util/encodeTypes.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$assert$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/assert.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
;
;
;
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["logger"])('PortableRegistry');
const TYPE_UNWRAP = {
    toNumber: ()=>-1
};
const PRIMITIVE_ALIAS = {
    Char: 'u32',
    Str: 'Text'
};
const PATHS_ALIAS = splitNamespace([
    // full matching on exact names...
    // these are well-known types with additional encoding
    'sp_core::crypto::AccountId32',
    'sp_runtime::generic::era::Era',
    'sp_runtime::multiaddress::MultiAddress',
    // ethereum overrides (Frontier, Moonbeam, Polkadot claims)
    'fp_account::AccountId20',
    'account::AccountId20',
    'polkadot_runtime_common::claims::EthereumAddress',
    // weights 2 is a structure, however for 1.5. with a single field it
    // should be flatenned (can appear in Compact<Weight> extrinsics)
    'frame_support::weights::weight_v2::Weight',
    'sp_weights::weight_v2::Weight',
    // wildcard matching in place...
    // these have a specific encoding or logic, use a wildcard for {pallet, darwinia}_democracy
    '*_democracy::vote::Vote',
    '*_conviction_voting::vote::Vote',
    '*_identity::types::Data',
    // these are opaque Vec<u8> wrappers
    'sp_core::OpaqueMetadata',
    'sp_core::OpaquePeerId',
    'sp_core::offchain::OpaqueMultiaddr',
    // shorten some well-known types
    'primitive_types::*',
    'sp_arithmetic::per_things::*',
    // runtime
    '*_runtime::RuntimeCall',
    '*_runtime::RuntimeEvent',
    // ink!
    'ink::env::types::*',
    'ink::primitives::types::*',
    'ink_env::types::*',
    'ink_primitives::types::*'
]);
const PATHS_SET = splitNamespace([
    'pallet_identity::types::BitFlags'
]);
const BITVEC_NS_LSB = [
    'bitvec::order::Lsb0',
    'BitOrderLsb0'
];
const BITVEC_NS_MSB = [
    'bitvec::order::Msb0',
    'BitOrderMsb0'
];
const BITVEC_NS = [
    ...BITVEC_NS_LSB,
    ...BITVEC_NS_MSB
];
const WRAPPERS = [
    'BoundedBTreeMap',
    'BoundedBTreeSet',
    'BoundedVec',
    'Box',
    'BTreeMap',
    'BTreeSet',
    'Cow',
    'Option',
    'Range',
    'RangeInclusive',
    'Result',
    'WeakBoundedVec',
    'WrapperKeepOpaque',
    'WrapperOpaque'
];
const RESERVED = [
    // JS reserved words
    'entries',
    'keys',
    'new',
    'size',
    // exposed by all Codec objects
    'hash',
    'registry'
];
const PATH_RM_INDEX_1 = [
    'generic',
    'misc',
    'pallet',
    'traits',
    'types'
];
/** @internal Converts a Text[] into string[] (used as part of definitions) */ function sanitizeDocs(docs) {
    const count = docs.length;
    const result = new Array(count);
    for(let i = 0; i < count; i++){
        result[i] = docs[i].toString();
    }
    return result;
}
/** @internal Split a namespace with :: into individual parts */ function splitNamespace(values) {
    const count = values.length;
    const result = new Array(count);
    for(let i = 0; i < count; i++){
        result[i] = values[i].split('::');
    }
    return result;
}
/** @internal Match a namespace based on parts (alongside wildcards) */ function matchParts(first, second) {
    return first.length === second.length && first.every((a, index)=>{
        const b = second[index].toString();
        if (a === '*' || a === b) {
            return true;
        }
        if (a.includes('*') && a.includes('_') && b.includes('_')) {
            let suba = a.split('_');
            let subb = b.split('_');
            // match initial *'s to multiples if we have a match for the other
            if (suba[0] === '*') {
                const indexOf = subb.indexOf(suba[1]);
                if (indexOf !== -1) {
                    suba = suba.slice(1);
                    subb = subb.slice(indexOf);
                }
            }
            // check for * matches at the end, adjust accordingly
            if (suba.length === 2 && suba[1] === '*' && suba[0] === subb[0]) {
                return true;
            }
            return matchParts(suba, subb);
        }
        return false;
    });
}
/** @internal check if the path matches the PATHS_ALIAS (with wildcards) */ function getAliasPath({ def, path }) {
    // specific logic for weights - we override when non-complex struct
    // (as applied in Weight 1.5 where we also have `Compact<{ refTime: u64 }>)
    if ([
        'frame_support::weights::weight_v2::Weight',
        'sp_weights::weight_v2::Weight'
    ].includes(path.join('::'))) {
        return !def.isComposite || def.asComposite.fields.length === 1 ? 'WeightV1' : null;
    }
    // TODO We need to handle ink! Balance in some way
    return path.length && PATHS_ALIAS.some((a)=>matchParts(a, path)) ? path[path.length - 1].toString() : null;
}
/** @internal Converts a type name into a JS-API compatible name */ function extractNameFlat(portable, lookupIndex, params, path, isInternal = false) {
    const count = path.length;
    // if we have no path or determined as a wrapper, we just skip it
    if (count === 0 || WRAPPERS.includes(path[count - 1].toString())) {
        return null;
    }
    const camels = new Array(count);
    const lowers = new Array(count);
    // initially just create arrays of the camelCase and lowercase path
    // parts - we will check these to extract the final values. While
    // we have 2 loops here, we also don't do the same operation twice
    for(let i = 0; i < count; i++){
        const c = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringPascalCase"])(isInternal ? path[i].replace('pallet_', '') : path[i]);
        const l = c.toLowerCase();
        camels[i] = c;
        lowers[i] = l;
    }
    let name = '';
    for(let i = 0; i < count; i++){
        const l = lowers[i];
        // Remove ::{generic, misc, pallet, traits, types}::
        if (i !== 1 || !PATH_RM_INDEX_1.includes(l)) {
            // sp_runtime::generic::digest::Digest -> sp_runtime::generic::Digest
            // sp_runtime::multiaddress::MultiAddress -> sp_runtime::MultiAddress
            if (l !== lowers[i + 1]) {
                name += camels[i];
            }
        }
    }
    // do magic for RawOrigin lookup, e.g. pallet_collective::RawOrigin
    if (camels[1] === 'RawOrigin' && count === 2 && params.length === 2 && params[1].type.isSome) {
        const instanceType = portable[params[1].type.unwrap().toNumber()];
        if (instanceType.type.path.length === 2) {
            name = `${name}${instanceType.type.path[1].toString()}`;
        }
    }
    return {
        lookupIndex,
        name,
        params
    };
}
/** @internal Alias for extractNameFlat with PortableType as a last parameter */ function extractName(portable, lookupIndex, { type: { params, path } }) {
    return extractNameFlat(portable, lookupIndex, params, path);
}
/** @internal Check for dupes from a specific index onwards */ function nextDupeMatches(name, startAt, names) {
    const result = [
        names[startAt]
    ];
    for(let i = startAt + 1, count = names.length; i < count; i++){
        const v = names[i];
        if (v.name === name) {
            result.push(v);
        }
    }
    return result;
}
/** @internal Checks to see if a type is a full duplicate (with all params matching) */ function rewriteDupes(input, rewrite) {
    const count = input.length;
    for(let i = 0; i < count; i++){
        const a = input[i];
        for(let j = i + 1; j < count; j++){
            const b = input[j];
            // if the indexes are not the same and the names match, we have a dupe
            if (a.lookupIndex !== b.lookupIndex && a.name === b.name) {
                return false;
            }
        }
    }
    // add all the adjusted values to the rewite map
    for(let i = 0; i < count; i++){
        const p = input[i];
        rewrite[p.lookupIndex] = p.name;
    }
    return true;
}
/** @internal Find duplicates and adjust the names based on parameters */ function removeDupeNames(lookup, portable, names) {
    const rewrite = {};
    return names.map((original, startAt)=>{
        const { lookupIndex, name, params } = original;
        if (!name) {
            // the name is empty (this is not expected, but have a failsafe)
            return null;
        } else if (rewrite[lookupIndex]) {
            // we have already rewritten this one, we can skip it
            return original;
        }
        // those where the name is matching starting from this index
        const allSame = nextDupeMatches(name, startAt, names);
        // we only have one, so all ok
        if (allSame.length === 1) {
            return original;
        }
        // are there param differences between matching names
        const anyDiff = allSame.some((o)=>params.length !== o.params.length || params.some((p, index)=>!p.name.eq(o.params[index].name) || p.type.unwrapOr(TYPE_UNWRAP).toNumber() !== o.params[index].type.unwrapOr(TYPE_UNWRAP).toNumber()));
        // everything matches, we can combine these
        if (!anyDiff) {
            return original;
        }
        // TODO We probably want to attach all the indexes with differences,
        // not just the first
        // find the first parameter that yields differences
        const paramIdx = params.findIndex(({ type }, index)=>allSame.every(({ params }, aIndex)=>params[index].type.isSome && (aIndex === 0 || !params[index].type.eq(type))));
        // No param found that is different
        if (paramIdx === -1) {
            return original;
        }
        // see if using the param type helps
        const sameCount = allSame.length;
        const adjusted = new Array(sameCount);
        // loop through all, specifically checking that index where the
        // first param yields differences
        for(let i = 0; i < sameCount; i++){
            const { lookupIndex, name, params } = allSame[i];
            const { def, path } = lookup.getSiType(params[paramIdx].type.unwrap());
            // if it is not a primitive and it doesn't have a path, we really cannot
            // do anything at this point
            if (!def.isPrimitive && !path.length) {
                return null;
            }
            adjusted[i] = {
                lookupIndex,
                name: def.isPrimitive ? `${name}${def.asPrimitive.toString()}` : `${name}${path[path.length - 1].toString()}`
            };
        }
        // check to see if the adjusted names have no issues
        if (rewriteDupes(adjusted, rewrite)) {
            return original;
        }
        // TODO This is duplicated from the section just above...
        // ... we certainly need a better solution here
        //
        // Last-ditch effort to use the full type path - ugly
        // loop through all, specifically checking that index where the
        // first param yields differences
        for(let i = 0; i < sameCount; i++){
            const { lookupIndex, name, params } = allSame[i];
            const { def, path } = lookup.getSiType(params[paramIdx].type.unwrap());
            const flat = extractNameFlat(portable, lookupIndex, params, path, true);
            if (def.isPrimitive || !flat) {
                return null;
            }
            adjusted[i] = {
                lookupIndex,
                name: `${name}${flat.name}`
            };
        }
        // check to see if the adjusted names have no issues
        if (rewriteDupes(adjusted, rewrite)) {
            return original;
        }
        return null;
    }).filter((n)=>!!n).map(({ lookupIndex, name, params })=>({
            lookupIndex,
            name: rewrite[lookupIndex] || name,
            params
        }));
}
/** @internal Detect on-chain types (AccountId/Signature) as set as the default */ function registerTypes(lookup, lookups, names, params) {
    // Register the types we extracted
    lookup.registry.register(lookups);
    // Try and extract the AccountId/Address/Signature type from UncheckedExtrinsic
    if (params.SpRuntimeUncheckedExtrinsic) {
        // Address, Call, Signature, Extra
        const [addrParam, , sigParam] = params.SpRuntimeUncheckedExtrinsic;
        const siAddress = lookup.getSiType(addrParam.type.unwrap());
        const siSignature = lookup.getSiType(sigParam.type.unwrap());
        const nsSignature = siSignature.path.join('::');
        let nsAccountId = siAddress.path.join('::');
        const isMultiAddress = nsAccountId === 'sp_runtime::multiaddress::MultiAddress';
        // With multiaddress, we check the first type param again
        if (isMultiAddress) {
            // AccountId, AccountIndex
            const [idParam] = siAddress.params;
            nsAccountId = lookup.getSiType(idParam.type.unwrap()).path.join('::');
        }
        lookup.registry.register({
            // known: account::AccountId20, fp_account::AccountId20, primitive_types::H160
            AccountId: nsAccountId.endsWith('::AccountId20') || nsAccountId.endsWith('::H160') ? 'AccountId20' : 'AccountId32',
            Address: isMultiAddress ? 'MultiAddress' : 'AccountId',
            ExtrinsicSignature: [
                'sp_runtime::MultiSignature'
            ].includes(nsSignature) ? 'MultiSignature' : names[sigParam.type.unwrap().toNumber()] || 'MultiSignature'
        });
    }
}
/**
 * @internal Extracts aliases based on what we know the runtime config looks like in a
 * Substrate chain. Specifically we want to have access to the Call and Event params
 **/ function extractAliases(params, isContract) {
    const hasParams = Object.keys(params).some((k)=>!k.startsWith('Pallet'));
    const alias = {};
    if (params.SpRuntimeUncheckedExtrinsic) {
        // Address, Call, Signature, Extra
        const [, { type }] = params.SpRuntimeUncheckedExtrinsic;
        alias[type.unwrap().toNumber()] = 'Call';
    } else if (hasParams && !isContract) {
        l.warn('Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic');
    }
    if (params.FrameSystemEventRecord) {
        // Event, Topic
        const [{ type }] = params.FrameSystemEventRecord;
        alias[type.unwrap().toNumber()] = 'Event';
    } else if (hasParams && !isContract) {
        l.warn('Unable to determine runtime Event type, cannot inspect frame_system::EventRecord');
    }
    return alias;
}
/** @internal Extracts all the intreresting type information for this registry */ function extractTypeInfo(lookup, portable) {
    const nameInfo = [];
    const types = {};
    for(let i = 0, count = portable.length; i < count; i++){
        const type = portable[i];
        const lookupIndex = type.id.toNumber();
        const extracted = extractName(portable, lookupIndex, portable[i]);
        if (extracted) {
            nameInfo.push(extracted);
        }
        types[lookupIndex] = type;
    }
    const lookups = {};
    const names = {};
    const params = {};
    const dedup = removeDupeNames(lookup, portable, nameInfo);
    for(let i = 0, count = dedup.length; i < count; i++){
        const { lookupIndex, name, params: p } = dedup[i];
        names[lookupIndex] = name;
        lookups[name] = lookup.registry.createLookupType(lookupIndex);
        params[name] = p;
    }
    return {
        lookups,
        names,
        params,
        types
    };
}
class PortableRegistry extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] {
    #alias;
    #lookups;
    #names;
    #params;
    #typeDefs = {};
    #types;
    constructor(registry, value, isContract){
        // const timeStart = performance.now()
        super(registry, {
            types: 'Vec<PortableType>'
        }, value);
        const { lookups, names, params, types } = extractTypeInfo(this, this.types);
        this.#alias = extractAliases(params, isContract);
        this.#lookups = lookups;
        this.#names = names;
        this.#params = params;
        this.#types = types;
    // console.log('PortableRegistry', `${(performance.now() - timeStart).toFixed(2)}ms`)
    }
    /**
     * @description Returns all the available type names for this chain
     **/ get names() {
        return Object.values(this.#names).sort();
    }
    /**
     * @description Returns all the available parameterized types for this chain
     **/ get paramTypes() {
        return this.#params;
    }
    /**
     * @description The types of the registry
     */ get types() {
        return this.getT('types');
    }
    /**
     * @description Register all available types into the registry (generally for internal usage)
     */ register() {
        registerTypes(this, this.#lookups, this.#names, this.#params);
    }
    /**
     * @description Returns the name for a specific lookup
     */ getName(lookupId) {
        return this.#names[this.#getLookupId(lookupId)];
    }
    /**
     * @description Finds a specific type in the registry
     */ getSiType(lookupId) {
        // NOTE catch-22 - this may already be used as part of the constructor, so
        // ensure that we have actually initialized it correctly
        const found = (this.#types || this.types)[this.#getLookupId(lookupId)];
        if (!found) {
            throw new Error(`PortableRegistry: Unable to find type with lookupId ${lookupId.toString()}`);
        }
        return found.type;
    }
    /**
     * @description Lookup the type definition for the index
     */ getTypeDef(lookupId) {
        const lookupIndex = this.#getLookupId(lookupId);
        if (!this.#typeDefs[lookupIndex]) {
            const lookupName = this.#names[lookupIndex];
            const empty = {
                info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].DoNotConstruct,
                lookupIndex,
                lookupName,
                type: this.registry.createLookupType(lookupIndex)
            };
            // Set named items since we will get into circular lookups along the way
            if (lookupName) {
                this.#typeDefs[lookupIndex] = empty;
            }
            const extracted = this.#extract(this.getSiType(lookupId), lookupIndex);
            // For non-named items, we only set this right at the end
            if (!lookupName) {
                this.#typeDefs[lookupIndex] = empty;
            }
            Object.keys(extracted).forEach((k)=>{
                if (k !== 'lookupName' || extracted[k]) {
                    // these are safe since we are looking through the keys as set
                    this.#typeDefs[lookupIndex][k] = extracted[k];
                }
            });
            // don't set lookupName on lower-level, we want to always direct to the type
            if (extracted.info === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain) {
                this.#typeDefs[lookupIndex].lookupNameRoot = this.#typeDefs[lookupIndex].lookupName;
                delete this.#typeDefs[lookupIndex].lookupName;
            }
        }
        return this.#typeDefs[lookupIndex];
    }
    /**
     * @description For a specific field, perform adjustments to not have built-in conflicts
     */ sanitizeField(name) {
        let nameField = null;
        let nameOrig = null;
        if (name.isSome) {
            nameField = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(name.unwrap());
            if (nameField.includes('#')) {
                nameOrig = nameField;
                nameField = nameOrig.replace(/#/g, '_');
            } else if (RESERVED.includes(nameField)) {
                nameOrig = nameField;
                nameField = `${nameField}_`;
            }
        }
        return [
            nameField,
            nameOrig
        ];
    }
    /** @internal Creates a TypeDef based on an internal lookupId */ #createSiDef(lookupId) {
        const typeDef = this.getTypeDef(lookupId);
        const lookupIndex = lookupId.toNumber();
        // Setup for a lookup on complex types
        return [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].DoNotConstruct,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Enum,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Struct
        ].includes(typeDef.info) && typeDef.lookupName ? {
            docs: typeDef.docs,
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Si,
            lookupIndex,
            lookupName: this.#names[lookupIndex],
            type: this.registry.createLookupType(lookupId)
        } : typeDef;
    }
    /** @internal Converts a lookupId input to the actual lookup index */ #getLookupId(lookupId) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(lookupId)) {
            if (!this.registry.isLookupType(lookupId)) {
                throw new Error(`PortableRegistry: Expected a lookup string type, found ${lookupId}`);
            }
            return parseInt(lookupId.replace('Lookup', ''), 10);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(lookupId)) {
            return lookupId;
        }
        return lookupId.toNumber();
    }
    /** @internal Converts a type into a TypeDef for Codec usage */ #extract(type, lookupIndex) {
        const namespace = type.path.join('::');
        let typeDef;
        const aliasType = this.#alias[lookupIndex] || getAliasPath(type);
        try {
            if (aliasType) {
                typeDef = this.#extractAliasPath(lookupIndex, aliasType);
            } else {
                switch(type.def.type){
                    case 'Array':
                        typeDef = this.#extractArray(lookupIndex, type.def.asArray);
                        break;
                    case 'BitSequence':
                        typeDef = this.#extractBitSequence(lookupIndex, type.def.asBitSequence);
                        break;
                    case 'Compact':
                        typeDef = this.#extractCompact(lookupIndex, type.def.asCompact);
                        break;
                    case 'Composite':
                        typeDef = this.#extractComposite(lookupIndex, type, type.def.asComposite);
                        break;
                    case 'HistoricMetaCompat':
                        typeDef = this.#extractHistoric(lookupIndex, type.def.asHistoricMetaCompat);
                        break;
                    case 'Primitive':
                        typeDef = this.#extractPrimitive(lookupIndex, type);
                        break;
                    case 'Sequence':
                        typeDef = this.#extractSequence(lookupIndex, type.def.asSequence);
                        break;
                    case 'Tuple':
                        typeDef = this.#extractTuple(lookupIndex, type.def.asTuple);
                        break;
                    case 'Variant':
                        typeDef = this.#extractVariant(lookupIndex, type, type.def.asVariant);
                        break;
                    default:
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$assert$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assertUnreachable"])(type.def.type);
                }
            }
        } catch (error) {
            throw new Error(`PortableRegistry: ${lookupIndex}${namespace ? ` (${namespace})` : ''}: Error extracting ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(type)}: ${error.message}`);
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
            docs: sanitizeDocs(type.docs),
            namespace
        }, typeDef);
    }
    /** @internal Extracts a ScaleInfo Array into TypeDef.VecFixed */ #extractArray(_, { len, type }) {
        const length = len.toNumber();
        if (length > 2048) {
            throw new Error('Only support for [Type; <length>], where length <= 2048');
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].VecFixed,
            length,
            sub: this.#createSiDef(type)
        });
    }
    /** @internal Extracts a ScaleInfo BitSequence into TypeDef.Plain */ #extractBitSequence(_, { bitOrderType, bitStoreType }) {
        // With the v3 of scale-info this swapped around, but obviously the decoder cannot determine
        // the order. With that in-mind, we apply a detection for LSb0/Msb and set accordingly
        const a = this.#createSiDef(bitOrderType);
        const b = this.#createSiDef(bitStoreType);
        const [bitOrder, bitStore] = BITVEC_NS.includes(a.namespace || '') ? [
            a,
            b
        ] : [
            b,
            a
        ];
        if (!bitOrder.namespace || !BITVEC_NS.includes(bitOrder.namespace)) {
            throw new Error(`Unexpected bitOrder found as ${bitOrder.namespace || '<unknown>'}`);
        } else if (bitStore.info !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain || bitStore.type !== 'u8') {
            throw new Error(`Only u8 bitStore is currently supported, found ${bitStore.type}`);
        }
        const isLsb = BITVEC_NS_LSB.includes(bitOrder.namespace);
        if (!isLsb) {
        // TODO To remove this limitation, we need to pass an extra info flag
        // through to the TypeDef (Here we could potentially re-use something
        // like index (???) to indicate and ensure we use it to pass to the
        // BitVec constructor - which does handle this type)
        //
        // See https://github.com/polkadot-js/api/issues/5588
        // throw new Error(`Only LSB BitVec is currently supported, found ${bitOrder.namespace}`);
        }
        return {
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
            type: 'BitVec'
        };
    }
    /** @internal Extracts a ScaleInfo Compact into TypeDef.Compact */ #extractCompact(_, { type }) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Compact,
            sub: this.#createSiDef(type)
        });
    }
    /** @internal Extracts a ScaleInfo Composite into TypeDef.{BTree*, Range*, Wrapper*} */ #extractComposite(lookupIndex, { params, path }, { fields }) {
        if (path.length) {
            const pathFirst = path[0].toString();
            const pathLast = path[path.length - 1].toString();
            if (path.length === 1 && pathFirst === 'BTreeMap') {
                if (params.length !== 2) {
                    throw new Error(`BTreeMap requires 2 parameters, found ${params.length}`);
                }
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
                    info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeMap,
                    sub: params.map(({ type })=>this.#createSiDef(type.unwrap()))
                });
            } else if (path.length === 1 && pathFirst === 'BTreeSet') {
                if (params.length !== 1) {
                    throw new Error(`BTreeSet requires 1 parameter, found ${params.length}`);
                }
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
                    info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeSet,
                    sub: this.#createSiDef(params[0].type.unwrap())
                });
            } else if ([
                'Range',
                'RangeInclusive'
            ].includes(pathFirst)) {
                if (params.length !== 1) {
                    throw new Error(`Range requires 1 parameter, found ${params.length}`);
                }
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
                    info: pathFirst === 'Range' ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Range : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].RangeInclusive,
                    sub: this.#createSiDef(params[0].type.unwrap()),
                    type: pathFirst
                });
            } else if ([
                'WrapperKeepOpaque',
                'WrapperOpaque'
            ].includes(pathLast)) {
                if (params.length !== 1) {
                    throw new Error(`WrapperOpaque requires 1 parameter, found ${params.length}`);
                }
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
                    info: pathLast === 'WrapperKeepOpaque' ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperKeepOpaque : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque,
                    sub: this.#createSiDef(params[0].type.unwrap()),
                    type: pathLast
                });
            }
        }
        return PATHS_SET.some((p)=>matchParts(p, path)) ? this.#extractCompositeSet(lookupIndex, params, fields) : this.#extractFields(lookupIndex, fields);
    }
    /** @internal Extracts a ScaleInfo CompositeSet into TypeDef.Set */ #extractCompositeSet(_, params, fields) {
        if (params.length !== 1 || fields.length !== 1) {
            throw new Error('Set handling expects param/field as single entries');
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Set,
            length: this.registry.createTypeUnsafe(this.registry.createLookupType(fields[0].type), []).bitLength(),
            sub: this.getSiType(params[0].type.unwrap()).def.asVariant.variants.map(({ index, name })=>({
                    // This will be an issue > 2^53 - 1 ... don't have those (yet)
                    index: index.toNumber(),
                    info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
                    name: name.toString(),
                    type: 'Null'
                }))
        });
    }
    /** @internal Extracts ScaleInfo enum/struct fields into TypeDef.{Struct, Tuple} */ #extractFields(lookupIndex, fields) {
        let isStruct = true;
        let isTuple = true;
        const count = fields.length;
        for(let f = 0; f < count; f++){
            const { name } = fields[f];
            isStruct = isStruct && name.isSome;
            isTuple = isTuple && name.isNone;
        }
        if (!isTuple && !isStruct) {
            throw new Error('Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)');
        }
        if (count === 0) {
            return {
                info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Null,
                type: 'Null'
            };
        } else if (isTuple && count === 1) {
            const typeDef = this.#createSiDef(fields[0].type);
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, typeDef, lookupIndex === -1 ? null : {
                lookupIndex,
                lookupName: this.#names[lookupIndex],
                lookupNameRoot: typeDef.lookupName
            }, fields[0].typeName.isSome ? {
                typeName: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sanitize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sanitize"])(fields[0].typeName.unwrap())
            } : null);
        }
        const [sub, alias] = this.#extractFieldsAlias(fields);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
            info: isTuple // Tuple check first
             ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Tuple : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Struct,
            sub
        }, alias.size ? {
            alias
        } : null, lookupIndex === -1 ? null : {
            lookupIndex,
            lookupName: this.#names[lookupIndex]
        }));
    }
    /** @internal Apply field aliassed (with no JS conflicts) */ #extractFieldsAlias(fields) {
        const alias = new Map();
        const count = fields.length;
        const sub = new Array(count);
        for(let i = 0; i < count; i++){
            const { docs, name, type, typeName } = fields[i];
            const typeDef = this.#createSiDef(type);
            if (name.isNone) {
                sub[i] = typeDef;
            } else {
                const [nameField, nameOrig] = this.sanitizeField(name);
                if (nameField && nameOrig) {
                    alias.set(nameField, nameOrig);
                }
                sub[i] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
                    docs: sanitizeDocs(docs),
                    name: nameField
                }, typeDef, typeName.isSome ? {
                    typeName: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sanitize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sanitize"])(typeName.unwrap())
                } : null);
            }
        }
        return [
            sub,
            alias
        ];
    }
    /** @internal Extracts an internal Historic (pre V14) type  */ #extractHistoric(_, type) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
            displayName: type.toString(),
            isFromSi: true
        }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTypeDef"])(type));
    }
    /** @internal Extracts a ScaleInfo Primitive into TypeDef.Plain */ #extractPrimitive(_, type) {
        const typeStr = type.def.asPrimitive.type.toString();
        return {
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
            type: PRIMITIVE_ALIAS[typeStr] || typeStr.toLowerCase()
        };
    }
    /** @internal Applies an alias path onto the TypeDef */ #extractAliasPath(_, type) {
        return {
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
            type
        };
    }
    /** @internal Extracts a ScaleInfo Sequence into TypeDef.Vec (with Bytes shortcut) */ #extractSequence(lookupIndex, { type }) {
        const sub = this.#createSiDef(type);
        if (sub.type === 'u8') {
            return {
                info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
                type: 'Bytes'
            };
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Vec,
            lookupIndex,
            lookupName: this.#names[lookupIndex],
            sub
        });
    }
    /** @internal Extracts a ScaleInfo Tuple into TypeDef.Tuple */ #extractTuple(lookupIndex, ids) {
        if (ids.length === 0) {
            return {
                info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Null,
                type: 'Null'
            };
        } else if (ids.length === 1) {
            return this.getTypeDef(ids[0]);
        }
        const sub = ids.map((t)=>this.#createSiDef(t));
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Tuple,
            lookupIndex,
            lookupName: this.#names[lookupIndex],
            sub
        });
    }
    /** @internal Extracts a ScaleInfo Variant into TypeDef.{Option, Result, Enum} */ #extractVariant(lookupIndex, { params, path }, { variants }) {
        if (path.length) {
            const specialVariant = path[0].toString();
            if (specialVariant === 'Option') {
                if (params.length !== 1) {
                    throw new Error(`Option requires 1 parameter, found ${params.length}`);
                }
                // NOTE This is opt-in (unhandled), not by default
                // if (sub.type === 'bool') {
                //   return withTypeString(this.registry, {
                //     info: TypeDefInfo.Plain,
                //     type: 'OptionBool'
                //   });
                // }
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
                    info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Option,
                    sub: this.#createSiDef(params[0].type.unwrap())
                });
            } else if (specialVariant === 'Result') {
                if (params.length !== 2) {
                    throw new Error(`Result requires 2 parameters, found ${params.length}`);
                }
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
                    info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Result,
                    sub: params.map(({ type }, index)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
                            name: [
                                'Ok',
                                'Error'
                            ][index]
                        }, this.#createSiDef(type.unwrap())))
                });
            }
        }
        if (variants.length === 0) {
            return {
                info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Null,
                type: 'Null'
            };
        }
        return this.#extractVariantEnum(lookupIndex, variants);
    }
    /** @internal Extracts a ScaleInfo Variant into TypeDef.Enum */ #extractVariantEnum(lookupIndex, variants) {
        const sub = [];
        // we may get entries out of order, arrange them first before creating with gaps filled
        // NOTE: Since we mutate, use a copy of the array as an input
        variants.slice().sort((a, b)=>a.index.cmp(b.index)).forEach(({ fields, index: bnIndex, name })=>{
            const index = bnIndex.toNumber();
            while(sub.length !== index){
                sub.push({
                    index: sub.length,
                    info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Null,
                    name: `__Unused${sub.length}`,
                    type: 'Null'
                });
            }
            sub.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])(this.#extractFields(-1, fields), {
                index,
                name: name.toString()
            }));
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$encodeTypes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["withTypeString"])(this.registry, {
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Enum,
            lookupIndex,
            lookupName: this.#names[lookupIndex],
            sub
        });
    }
}
}),
"[project]/node_modules/@polkadot/types/create/registry.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TypeRegistry",
    ()=>TypeRegistry
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$DoNotConstruct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/DoNotConstruct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Json$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Json.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Raw.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/create/class.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/create/type.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$assert$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/assert.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/format/formatBalance.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/lazy.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/blake2/asU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/extrinsic/signedExtensions/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$Event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/generic/Event.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$index$2e$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/index.types.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/definitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$extrinsics$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/extrinsics/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$constants$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/constants/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$events$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/events/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$Metadata$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/Metadata.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$PortableRegistry$2f$PortableRegistry$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/PortableRegistry/PortableRegistry.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$create$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/create/lazy.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
const DEFAULT_FIRST_CALL_IDX = new Uint8Array(2);
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["logger"])('registry');
function sortDecimalStrings(a, b) {
    return parseInt(a, 10) - parseInt(b, 10);
}
function valueToString(v) {
    return v.toString();
}
function getFieldArgs(lookup, fields) {
    const count = fields.length;
    const args = new Array(count);
    for(let i = 0; i < count; i++){
        args[i] = lookup.getTypeDef(fields[i].type).type;
    }
    return args;
}
function clearRecord(record) {
    const keys = Object.keys(record);
    for(let i = 0, count = keys.length; i < count; i++){
        delete record[keys[i]];
    }
}
function getVariantStringIdx({ index }) {
    return index.toString();
}
function injectErrors(_, { lookup, pallets }, version, result) {
    clearRecord(result);
    for(let i = 0, count = pallets.length; i < count; i++){
        const { errors, index, name } = pallets[i];
        if (errors.isSome) {
            const sectionName = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(name);
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethod"])(result, version >= 12 ? index.toNumber() : i, ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$create$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyVariants"])(lookup, errors.unwrap(), getVariantStringIdx, ({ docs, fields, index, name })=>({
                        args: getFieldArgs(lookup, fields),
                        docs: docs.map(valueToString),
                        fields,
                        index: index.toNumber(),
                        method: name.toString(),
                        name: name.toString(),
                        section: sectionName
                    })));
        }
    }
}
function injectEvents(registry, { lookup, pallets }, version, result) {
    const filtered = pallets.filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$events$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["filterEventsSome"]);
    clearRecord(result);
    for(let i = 0, count = filtered.length; i < count; i++){
        const { events, index, name } = filtered[i];
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethod"])(result, version >= 12 ? index.toNumber() : i, ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$create$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyVariants"])(lookup, events.unwrap(), getVariantStringIdx, (variant)=>{
                const meta = registry.createType('EventMetadataLatest', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, variant, {
                    args: getFieldArgs(lookup, variant.fields)
                }));
                return class extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$generic$2f$Event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GenericEventData"] {
                    constructor(registry, value){
                        super(registry, value, meta, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(name), variant.name.toString());
                    }
                };
            }));
    }
}
function injectExtrinsics(registry, { lookup, pallets }, version, result, mapping) {
    const filtered = pallets.filter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$extrinsics$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["filterCallsSome"]);
    clearRecord(result);
    clearRecord(mapping);
    for(let i = 0, count = filtered.length; i < count; i++){
        const { calls, index, name } = filtered[i];
        const sectionIndex = version >= 12 ? index.toNumber() : i;
        const sectionName = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(name);
        const allCalls = calls.unwrap();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethod"])(result, sectionIndex, ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$create$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyVariants"])(lookup, allCalls, getVariantStringIdx, (variant)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$extrinsics$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createCallFunction"])(registry, lookup, variant, sectionName, sectionIndex)));
        const { path } = registry.lookup.getSiType(allCalls.type);
        // frame_system::pallet::Call / pallet_balances::pallet::Call / polkadot_runtime_parachains::configuration::pallet::Call /
        const palletIdx = path.findIndex((v)=>v.eq('pallet'));
        if (palletIdx !== -1) {
            const name = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(path.slice(0, palletIdx).map((p, i)=>i === 0 ? p.replace(/^(frame|pallet)_/, '') : p).join(' '));
            if (!mapping[name]) {
                mapping[name] = [
                    sectionName
                ];
            } else {
                mapping[name].push(sectionName);
            }
        }
    }
}
function extractProperties(registry, metadata) {
    const original = registry.getChainProperties();
    const constants = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$constants$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decorateConstants"])(registry, metadata.asLatest, metadata.version);
    const ss58Format = constants['system'] && (constants['system']['sS58Prefix'] || constants['system']['ss58Prefix']);
    if (!ss58Format) {
        return original;
    }
    const { isEthereum, tokenDecimals, tokenSymbol } = original || {};
    return registry.createTypeUnsafe('ChainProperties', [
        {
            isEthereum,
            ss58Format,
            tokenDecimals,
            tokenSymbol
        }
    ]);
}
class TypeRegistry {
    #chainProperties;
    #classes = new Map();
    #definitions = new Map();
    #firstCallIndex = null;
    #hasher = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["blake2AsU8a"];
    #knownTypes = {};
    #lookup;
    #metadata;
    #metadataVersion = 0;
    #signedExtensions = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["fallbackExtensions"];
    #unknownTypes = new Map();
    #userExtensions;
    #knownDefaults;
    #knownDefaultsEntries;
    #knownDefinitions;
    #metadataCalls = {};
    #metadataErrors = {};
    #metadataEvents = {};
    #moduleMap = {};
    createdAtHash;
    constructor(createdAtHash){
        this.#knownDefaults = new Map(Object.entries({
            Json: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Json$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Json"],
            Metadata: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$Metadata$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Metadata"],
            PortableRegistry: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$PortableRegistry$2f$PortableRegistry$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PortableRegistry"],
            Raw: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"],
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$index$2e$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__
        }));
        this.#knownDefaultsEntries = Array.from(this.#knownDefaults.entries());
        this.#knownDefinitions = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__;
        const allKnown = Object.values(this.#knownDefinitions);
        for(let i = 0, count = allKnown.length; i < count; i++){
            this.register(allKnown[i].types);
        }
        if (createdAtHash) {
            this.createdAtHash = this.createType('BlockHash', createdAtHash);
        }
    }
    get chainDecimals() {
        if (this.#chainProperties?.tokenDecimals.isSome) {
            const allDecimals = this.#chainProperties.tokenDecimals.unwrap();
            if (allDecimals.length) {
                return allDecimals.map((b)=>b.toNumber());
            }
        }
        return [
            12
        ];
    }
    get chainIsEthereum() {
        return this.#chainProperties?.isEthereum.isTrue || false;
    }
    get chainSS58() {
        return this.#chainProperties?.ss58Format.isSome ? this.#chainProperties.ss58Format.unwrap().toNumber() : undefined;
    }
    get chainTokens() {
        if (this.#chainProperties?.tokenSymbol.isSome) {
            const allTokens = this.#chainProperties.tokenSymbol.unwrap();
            if (allTokens.length) {
                return allTokens.map(valueToString);
            }
        }
        return [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatBalance"].getDefaults().unit
        ];
    }
    get firstCallIndex() {
        return this.#firstCallIndex || DEFAULT_FIRST_CALL_IDX;
    }
    /**
     * @description Returns true if the type is in a Compat format
     */ isLookupType(value) {
        return /Lookup\d+$/.test(value);
    }
    /**
     * @description Creates a lookup string from the supplied id
     */ createLookupType(lookupId) {
        return `Lookup${typeof lookupId === 'number' ? lookupId : lookupId.toNumber()}`;
    }
    get knownTypes() {
        return this.#knownTypes;
    }
    get lookup() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$assert$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assertReturn"])(this.#lookup, 'PortableRegistry has not been set on this registry');
    }
    get metadata() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$assert$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assertReturn"])(this.#metadata, 'Metadata has not been set on this registry');
    }
    get unknownTypes() {
        return [
            ...this.#unknownTypes.keys()
        ];
    }
    get signedExtensions() {
        return this.#signedExtensions;
    }
    clearCache() {
        this.#classes = new Map();
    }
    /**
     * @describe Creates an instance of the class
     */ createClass(type) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createClassUnsafe"])(this, type);
    }
    /**
     * @describe Creates an instance of the class
     */ createClassUnsafe(type) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createClassUnsafe"])(this, type);
    }
    /**
     * @description Creates an instance of a type as registered
     */ createType(type, ...params) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createTypeUnsafe"])(this, type, params);
    }
    /**
     * @description Creates an instance of a type as registered
     */ createTypeUnsafe(type, params, options) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createTypeUnsafe"])(this, type, params, options);
    }
    // find a specific call
    findMetaCall(callIndex) {
        const [section, method] = [
            callIndex[0],
            callIndex[1]
        ];
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$assert$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assertReturn"])(this.#metadataCalls[`${section}`] && this.#metadataCalls[`${section}`][`${method}`], ()=>`findMetaCall: Unable to find Call with index [${section}, ${method}]/[${callIndex.toString()}]`);
    }
    // finds an error
    findMetaError(errorIndex) {
        const [section, method] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(errorIndex) ? [
            errorIndex[0],
            errorIndex[1]
        ] : [
            errorIndex.index.toNumber(),
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(errorIndex.error) ? errorIndex.error[0] : errorIndex.error.toNumber()
        ];
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$assert$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assertReturn"])(this.#metadataErrors[`${section}`] && this.#metadataErrors[`${section}`][`${method}`], ()=>`findMetaError: Unable to find Error with index [${section}, ${method}]/[${errorIndex.toString()}]`);
    }
    findMetaEvent(eventIndex) {
        const [section, method] = [
            eventIndex[0],
            eventIndex[1]
        ];
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$assert$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assertReturn"])(this.#metadataEvents[`${section}`] && this.#metadataEvents[`${section}`][`${method}`], ()=>`findMetaEvent: Unable to find Event with index [${section}, ${method}]/[${eventIndex.toString()}]`);
    }
    get(name, withUnknown, knownTypeDef) {
        return this.getUnsafe(name, withUnknown, knownTypeDef);
    }
    getUnsafe(name, withUnknown, knownTypeDef) {
        let Type = this.#classes.get(name) || this.#knownDefaults.get(name);
        // we have not already created the type, attempt it
        if (!Type) {
            const definition = this.#definitions.get(name);
            let BaseType;
            // we have a definition, so create the class now (lazily)
            if (definition) {
                BaseType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createClassUnsafe"])(this, definition);
            } else if (knownTypeDef) {
                BaseType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["constructTypeClass"])(this, knownTypeDef);
            } else if (withUnknown) {
                l.warn(`Unable to resolve type ${name}, it will fail on construction`);
                this.#unknownTypes.set(name, true);
                BaseType = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$DoNotConstruct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DoNotConstruct"].with(name);
            }
            if (BaseType) {
                // NOTE If we didn't extend here, we would have strange artifacts. An example is
                // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128
                // Additionally, we now pass through the registry, which is a link to ourselves
                Type = class extends BaseType {
                };
                this.#classes.set(name, Type);
                // In the case of lookups, we also want to store the actual class against
                // the lookup name, instad of having to traverse again
                if (knownTypeDef && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(knownTypeDef.lookupIndex)) {
                    this.#classes.set(this.createLookupType(knownTypeDef.lookupIndex), Type);
                }
            }
        }
        return Type;
    }
    getChainProperties() {
        return this.#chainProperties;
    }
    getClassName(Type) {
        // we cannot rely on export order (anymore, since babel/core 7.15.8), so in the case of
        // items such as u32 & U32, we get the lowercase versions here... not quite as optimal
        // (previously this used to be a simple find & return)
        const names = [];
        for (const [name, Clazz] of this.#knownDefaultsEntries){
            if (Type === Clazz) {
                names.push(name);
            }
        }
        for (const [name, Clazz] of this.#classes.entries()){
            if (Type === Clazz) {
                names.push(name);
            }
        }
        return names.length ? names.sort().reverse()[0] : undefined;
    }
    getDefinition(typeName) {
        return this.#definitions.get(typeName);
    }
    getModuleInstances(specName, moduleName) {
        return this.#knownTypes?.typesBundle?.spec?.[specName.toString()]?.instances?.[moduleName] || this.#moduleMap[moduleName];
    }
    getOrThrow(name) {
        const Clazz = this.get(name);
        if (!Clazz) {
            throw new Error(`type ${name} not found`);
        }
        return Clazz;
    }
    getOrUnknown(name) {
        return this.get(name, true);
    }
    // Only used in extrinsic version 5
    getTransactionExtensionVersion() {
        return 0;
    }
    getSignedExtensionExtra() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["expandExtensionTypes"])(this.#signedExtensions, 'payload', this.#userExtensions);
    }
    getSignedExtensionTypes() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["expandExtensionTypes"])(this.#signedExtensions, 'extrinsic', this.#userExtensions);
    }
    hasClass(name) {
        return this.#classes.has(name) || !!this.#knownDefaults.has(name);
    }
    hasDef(name) {
        return this.#definitions.has(name);
    }
    hasType(name) {
        return !this.#unknownTypes.get(name) && (this.hasClass(name) || this.hasDef(name));
    }
    hash(data) {
        return this.createType('CodecHash', this.#hasher(data));
    }
    // eslint-disable-next-line no-dupe-class-members
    register(arg1, arg2) {
        // NOTE Constructors appear as functions here
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(arg1)) {
            this.#classes.set(arg1.name, arg1);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(arg1)) {
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(arg2)) {
                throw new Error(`Expected class definition passed to '${arg1}' registration`);
            } else if (arg1 === arg2.toString()) {
                throw new Error(`Unable to register circular ${arg1} === ${arg1}`);
            }
            this.#classes.set(arg1, arg2);
        } else {
            this.#registerObject(arg1);
        }
    }
    #registerObject = (obj)=>{
        const entries = Object.entries(obj);
        for(let e = 0, count = entries.length; e < count; e++){
            const [name, type] = entries[e];
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(type)) {
                // This _looks_ a bit funny, but `typeof Clazz === 'function'
                this.#classes.set(name, type);
            } else {
                const def = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(type) ? type : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(type);
                if (name === def) {
                    throw new Error(`Unable to register circular ${name} === ${def}`);
                }
                // we already have this type, remove the classes registered for it
                if (this.#classes.has(name)) {
                    this.#classes.delete(name);
                }
                this.#definitions.set(name, def);
            }
        }
    };
    // sets the chain properties
    setChainProperties(properties) {
        if (properties) {
            this.#chainProperties = properties;
        }
    }
    setHasher(hasher) {
        this.#hasher = hasher || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["blake2AsU8a"];
    }
    setKnownTypes(knownTypes) {
        this.#knownTypes = knownTypes;
    }
    setLookup(lookup) {
        this.#lookup = lookup;
        // register all applicable types found
        lookup.register();
    }
    // register alias types alongside the portable/lookup setup
    // (we don't combine this into setLookup since that would/could
    // affect stand-along lookups, such as ABIs which don't have
    // actual on-chain metadata)
    #registerLookup = (lookup)=>{
        // attach the lookup before we register any types
        this.setLookup(lookup);
        // we detect based on runtime configuration
        let Weight = null;
        if (this.hasType('SpWeightsWeightV2Weight')) {
            // detection for WeightV2 type based on latest naming
            const weightv2 = this.createType('SpWeightsWeightV2Weight');
            Weight = weightv2.refTime && weightv2.proofSize ? 'SpWeightsWeightV2Weight' : 'WeightV1';
        } else if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBn"])(this.createType('Weight'))) {
            // where we have an already-supplied BN override, we don't clobber
            // it with our detected value (This protects against pre-defines
            // where Weight may be aliassed to WeightV0, e.g. in early Kusama chains)
            Weight = 'WeightV1';
        }
        if (Weight) {
            // we have detected a version, adjust the definition
            this.register({
                Weight
            });
        }
    };
    // sets the metadata
    setMetadata(metadata, signedExtensions, userExtensions, noInitWarn) {
        this.#metadata = metadata.asLatest;
        this.#metadataVersion = metadata.version;
        this.#firstCallIndex = null;
        // attach the lookup at this point and register relevant types (before injecting)
        this.#registerLookup(this.#metadata.lookup);
        injectExtrinsics(this, this.#metadata, this.#metadataVersion, this.#metadataCalls, this.#moduleMap);
        injectErrors(this, this.#metadata, this.#metadataVersion, this.#metadataErrors);
        injectEvents(this, this.#metadata, this.#metadataVersion, this.#metadataEvents);
        // set the default call index (the lowest section, the lowest method)
        // in most chains this should be 0,0
        const [defSection] = Object.keys(this.#metadataCalls).sort(sortDecimalStrings);
        if (defSection) {
            const [defMethod] = Object.keys(this.#metadataCalls[defSection]).sort(sortDecimalStrings);
            if (defMethod) {
                this.#firstCallIndex = new Uint8Array([
                    parseInt(defSection, 10),
                    parseInt(defMethod, 10)
                ]);
            }
        }
        // setup the available extensions
        this.setSignedExtensions(signedExtensions || (this.#metadata.extrinsic.versions.length > 0 && this.#metadata.extrinsic.versions.every((value)=>value > 0) ? this.#metadata.extrinsic.transactionExtensions.map(({ identifier })=>identifier.toString()) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["fallbackExtensions"]), userExtensions, noInitWarn);
        // setup the chain properties with format overrides
        this.setChainProperties(extractProperties(this, metadata));
    }
    // sets the available signed extensions
    setSignedExtensions(signedExtensions = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["fallbackExtensions"], userExtensions, noInitWarn) {
        this.#signedExtensions = signedExtensions;
        this.#userExtensions = userExtensions;
        if (!noInitWarn) {
            const unknown = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$extrinsic$2f$signedExtensions$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["findUnknownExtensions"])(this.#signedExtensions, this.#userExtensions);
            if (unknown.length) {
                l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);
            }
        }
    }
}
}),
"[project]/node_modules/@polkadot/types/interfaces/jsonrpc.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/definitions.js [app-ssr] (ecmascript)");
;
;
const jsonrpc = {};
Object.keys(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__).forEach((s)=>Object.entries(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__[s].rpc || {}).forEach(([method, def])=>{
        // allow for section overrides
        const section = def.aliasSection || s;
        if (!jsonrpc[section]) {
            jsonrpc[section] = {};
        }
        jsonrpc[section][method] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, def, {
            isSubscription: !!def.pubsub,
            jsonrpc: `${section}_${method}`,
            method,
            section
        });
    }));
const __TURBOPACK__default__export__ = jsonrpc;
}),
"[project]/node_modules/@polkadot/types/interfaces/jsonrpc.js [app-ssr] (ecmascript) <export default as rpcDefinitions>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "rpcDefinitions",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$jsonrpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$jsonrpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/jsonrpc.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/storage/getHasher.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "getHasher",
    ()=>getHasher
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/blake2/asU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$xxhash$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/xxhash/asU8a.js [app-ssr] (ecmascript)");
;
;
const DEFAULT_FN = (data)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$xxhash$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["xxhashAsU8a"])(data, 128);
const HASHERS = {
    Blake2_128: (data)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["blake2AsU8a"])(data, 128),
    Blake2_128Concat: (data)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["blake2AsU8a"])(data, 128), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(data)),
    Blake2_256: (data)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["blake2AsU8a"])(data, 256),
    Identity: (data)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(data),
    Twox128: (data)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$xxhash$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["xxhashAsU8a"])(data, 128),
    Twox256: (data)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$xxhash$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["xxhashAsU8a"])(data, 256),
    Twox64Concat: (data)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$xxhash$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["xxhashAsU8a"])(data, 64), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(data))
};
function getHasher(hasher) {
    return HASHERS[hasher.type] || DEFAULT_FN;
}
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/storage/createFunction.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "NO_RAW_ARGS",
    ()=>NO_RAW_ARGS,
    "createFunction",
    ()=>createFunction,
    "createKeyInspect",
    ()=>createKeyInspect,
    "createKeyRaw",
    ()=>createKeyRaw,
    "createKeyRawParts",
    ()=>createKeyRawParts
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Raw.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/addLength.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$stripLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/stripLength.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$xxhash$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/xxhash/asU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$getSiName$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/util/getSiName.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$getHasher$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/storage/getHasher.js [app-ssr] (ecmascript)");
;
;
;
;
;
const NO_RAW_ARGS = {
    args: [],
    hashers: [],
    keys: []
};
/** @internal */ function filterDefined(a) {
    return !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(a);
}
/** @internal */ function assertArgs({ method, section }, { args, keys }) {
    if (!Array.isArray(args)) {
        throw new Error(`Call to ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(section || 'unknown')}.${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(method || 'unknown')} needs ${keys.length} arguments`);
    } else if (args.filter(filterDefined).length !== keys.length) {
        throw new Error(`Call to ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(section || 'unknown')}.${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(method || 'unknown')} needs ${keys.length} arguments, found [${args.join(', ')}]`);
    }
}
function createKeyRawParts(registry, itemFn, { args, hashers, keys }) {
    const count = keys.length;
    const extra = new Array(count);
    for(let i = 0; i < count; i++){
        extra[i] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$getHasher$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getHasher"])(hashers[i])(registry.createTypeUnsafe(registry.createLookupType(keys[i]), [
            args[i]
        ]).toU8a());
    }
    return [
        [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$xxhash$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["xxhashAsU8a"])(itemFn.prefix, 128),
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$xxhash$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["xxhashAsU8a"])(itemFn.method, 128)
        ],
        extra
    ];
}
function createKeyInspect(registry, itemFn, args) {
    assertArgs(itemFn, args);
    const { meta } = itemFn;
    const [prefix, extra] = createKeyRawParts(registry, itemFn, args);
    let types = [];
    if (meta.type.isMap) {
        const { hashers, key } = meta.type.asMap;
        types = hashers.length === 1 ? [
            `${hashers[0].type}(${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$getSiName$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSiName"])(registry.lookup, key)})`
        ] : registry.lookup.getSiType(key).def.asTuple.map((k, i)=>`${hashers[i].type}(${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$util$2f$getSiName$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSiName"])(registry.lookup, k)})`);
    }
    const names = [
        'module',
        'method'
    ].concat(...args.args.map((_, i)=>types[i]));
    return {
        inner: prefix.concat(...extra).map((v, i)=>({
                name: names[i],
                outer: [
                    v
                ]
            }))
    };
}
function createKeyRaw(registry, itemFn, args) {
    const [prefix, extra] = createKeyRawParts(registry, itemFn, args);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])(...prefix, ...extra);
}
/** @internal */ function createKey(registry, itemFn, args) {
    assertArgs(itemFn, args);
    // always add the length prefix (underlying it is Bytes)
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactAddLength"])(createKeyRaw(registry, itemFn, args));
}
/** @internal */ function createStorageInspect(registry, itemFn, options) {
    const { meta: { type } } = itemFn;
    return (...args)=>{
        if (type.isPlain) {
            return options.skipHashing ? {
                inner: [],
                name: 'wellKnown',
                outer: [
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(options.key)
                ]
            } : createKeyInspect(registry, itemFn, NO_RAW_ARGS);
        }
        const { hashers, key } = type.asMap;
        return hashers.length === 1 ? createKeyInspect(registry, itemFn, {
            args,
            hashers,
            keys: [
                key
            ]
        }) : createKeyInspect(registry, itemFn, {
            args,
            hashers,
            keys: registry.lookup.getSiType(key).def.asTuple
        });
    };
}
/** @internal */ function createStorageFn(registry, itemFn, options) {
    const { meta: { type } } = itemFn;
    let cacheKey = null;
    // Can only have zero or one argument:
    //   - storage.system.account(address)
    //   - storage.timestamp.blockPeriod()
    // For higher-map queries the params are passed in as an tuple, [key1, key2]
    return (...args)=>{
        if (type.isPlain) {
            if (!cacheKey) {
                cacheKey = options.skipHashing ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactAddLength"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(options.key)) : createKey(registry, itemFn, NO_RAW_ARGS);
            }
            return cacheKey;
        }
        const { hashers, key } = type.asMap;
        return hashers.length === 1 ? createKey(registry, itemFn, {
            args,
            hashers,
            keys: [
                key
            ]
        }) : createKey(registry, itemFn, {
            args,
            hashers,
            keys: registry.lookup.getSiType(key).def.asTuple
        });
    };
}
/** @internal */ function createWithMeta(registry, itemFn, options) {
    const { meta, method, prefix, section } = itemFn;
    const storageFn = createStorageFn(registry, itemFn, options);
    storageFn.inspect = createStorageInspect(registry, itemFn, options);
    storageFn.meta = meta;
    storageFn.method = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(method);
    storageFn.prefix = prefix;
    storageFn.section = section;
    // explicitly add the actual method in the toJSON, this gets used to determine caching and without it
    // instances (e.g. collective) will not work since it is only matched on param meta
    storageFn.toJSON = ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({
            storage: {
                method,
                prefix,
                section
            }
        }, meta.toJSON());
    return storageFn;
}
/** @internal */ function extendHeadMeta(registry, { meta: { docs, name, type }, section }, { method }, iterFn) {
    // metadata with a fallback value using the type of the key, the normal
    // meta fallback only applies to actual entry values, create one for head
    const meta = registry.createTypeUnsafe('StorageEntryMetadataLatest', [
        {
            docs,
            fallback: registry.createTypeUnsafe('Bytes', []),
            modifier: registry.createTypeUnsafe('StorageEntryModifierLatest', [
                1
            ]),
            name,
            type: registry.createTypeUnsafe('StorageEntryTypeLatest', [
                type.asMap.key,
                0
            ])
        }
    ]);
    iterFn.meta = meta;
    const fn = (...args)=>registry.createTypeUnsafe('StorageKey', [
            iterFn(...args),
            {
                method,
                section
            }
        ]);
    fn.meta = meta;
    return fn;
}
/** @internal */ function extendPrefixedMap(registry, itemFn, storageFn) {
    const { meta: { type }, method, section } = itemFn;
    storageFn.iterKey = extendHeadMeta(registry, itemFn, storageFn, (...args)=>{
        if (args.length && (type.isPlain || args.length >= type.asMap.hashers.length)) {
            throw new Error(`Iteration of ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(section || 'unknown')}.${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(method || 'unknown')} needs arguments to be at least one less than the full arguments, found [${args.join(', ')}]`);
        }
        if (args.length) {
            if (type.isMap) {
                const { hashers, key } = type.asMap;
                const keysVec = hashers.length === 1 ? [
                    key
                ] : registry.lookup.getSiType(key).def.asTuple;
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"](registry, createKeyRaw(registry, itemFn, {
                    args,
                    hashers: hashers.slice(0, args.length),
                    keys: keysVec.slice(0, args.length)
                }));
            }
        }
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"](registry, createKeyRaw(registry, itemFn, NO_RAW_ARGS));
    });
    return storageFn;
}
function createFunction(registry, itemFn, options) {
    const { meta: { type } } = itemFn;
    const storageFn = createWithMeta(registry, itemFn, options);
    if (type.isMap) {
        extendPrefixedMap(registry, itemFn, storageFn);
    }
    storageFn.keyPrefix = (...args)=>storageFn.iterKey && storageFn.iterKey(...args) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$stripLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactStripLength"])(storageFn())[1];
    return storageFn;
}
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/storage/util.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createRuntimeFunction",
    ()=>createRuntimeFunction
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/util/getTypeDef.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$createFunction$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/storage/createFunction.js [app-ssr] (ecmascript)");
;
;
function findSiPrimitive(registry, type) {
    const prim = type.toLowerCase();
    return registry.lookup.types.find((t)=>t.type.def.isPrimitive && t.type.def.asPrimitive.toString().toLowerCase() === prim || t.type.def.isHistoricMetaCompat && t.type.def.asHistoricMetaCompat.toString().toLowerCase() === prim);
}
function findSiType(registry, type) {
    let portable = findSiPrimitive(registry, type);
    // some types are either Sequence or Arrays, cater for these
    // specifically (these all come from the base substrate known keys)
    if (!portable && (type === 'Bytes' || type.startsWith('[u8;'))) {
        const u8 = findSiPrimitive(registry, 'u8');
        if (u8) {
            if (type === 'Bytes') {
                portable = registry.lookup.types.find((t)=>t.type.def.isSequence && t.type.def.asSequence.type.eq(u8.id) || t.type.def.isHistoricMetaCompat && t.type.def.asHistoricMetaCompat.eq(type));
            } else {
                const td = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTypeDef"])(type);
                portable = registry.lookup.types.find((t)=>t.type.def.isArray && t.type.def.asArray.eq({
                        len: td.length,
                        type: u8.id
                    }) || t.type.def.isHistoricMetaCompat && t.type.def.asHistoricMetaCompat.eq(type));
            }
        }
    }
    if (!portable) {
        // Not fatal, however if this happens the storage key using this
        // type will not return valid values, rather it will most probably
        // be decoded incorrectly
        console.warn(`Unable to map ${type} to a lookup index`);
    }
    return portable;
}
function createRuntimeFunction({ method, prefix, section }, key, { docs, type }) {
    return (registry)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$createFunction$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createFunction"])(registry, {
            meta: registry.createTypeUnsafe('StorageEntryMetadataLatest', [
                {
                    docs: registry.createTypeUnsafe('Vec<Text>', [
                        [
                            docs
                        ]
                    ]),
                    modifier: registry.createTypeUnsafe('StorageEntryModifierLatest', [
                        'Required'
                    ]),
                    name: registry.createTypeUnsafe('Text', [
                        method
                    ]),
                    toJSON: ()=>key,
                    type: registry.createTypeUnsafe('StorageEntryTypeLatest', [
                        {
                            Plain: findSiType(registry, type)?.id || 0
                        }
                    ])
                }
            ]),
            method,
            prefix,
            section
        }, {
            key,
            skipHashing: true
        });
}
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/storage/substrate.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "substrate",
    ()=>substrate
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/storage/util.js [app-ssr] (ecmascript)");
;
const prefix = 'Substrate';
const section = 'substrate';
function createSubstrateFn(method, key, meta) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createRuntimeFunction"])({
        method,
        prefix,
        section
    }, key, meta);
}
const substrate = {
    changesTrieConfig: createSubstrateFn('changesTrieConfig', ':changes_trie', {
        docs: 'Changes trie configuration is stored under this key.',
        type: 'u32'
    }),
    childStorageKeyPrefix: createSubstrateFn('childStorageKeyPrefix', ':child_storage:', {
        docs: 'Prefix of child storage keys.',
        type: 'u32'
    }),
    code: createSubstrateFn('code', ':code', {
        docs: 'Wasm code of the runtime.',
        type: 'Bytes'
    }),
    defaultChildStorageKeyPrefix: createSubstrateFn('defaultChildStorageKeyPrefix', ':child_storage:default:', {
        docs: 'Prefix of the default child storage keys in the top trie.',
        type: 'u32'
    }),
    extrinsicIndex: createSubstrateFn('extrinsicIndex', ':extrinsic_index', {
        docs: 'Current extrinsic index (u32) is stored under this key.',
        type: 'u32'
    }),
    heapPages: createSubstrateFn('heapPages', ':heappages', {
        docs: 'Number of wasm linear memory pages required for execution of the runtime.',
        type: 'u64'
    }),
    intrablockEntropy: createSubstrateFn('intrablockEntropy', ':intrablock_entropy', {
        docs: 'Current intra-block entropy (a universally unique `[u8; 32]` value) is stored here.',
        type: '[u8; 32]'
    }),
    storageVersionStorageKeyPostfix: createSubstrateFn('storageVersionStorageKeyPostfix', ':__STORAGE_VERSION__:', {
        docs: 'The storage key postfix that is used to store the [`StorageVersion`] per pallet.',
        type: 'u16'
    }),
    transactionLevelKey: createSubstrateFn('transactionLevelKey', ':transaction_level:', {
        docs: 'The key that holds the current number of active layers.',
        type: 'u32'
    })
};
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/storage/getStorage.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "getStorage",
    ()=>getStorage
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$substrate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/storage/substrate.js [app-ssr] (ecmascript)");
;
function getStorage(registry) {
    const storage = {};
    const entries = Object.entries(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$substrate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["substrate"]);
    for(let e = 0, count = entries.length; e < count; e++){
        storage[entries[e][0]] = entries[e][1](registry);
    }
    return {
        substrate: storage
    };
}
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/storage/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "decorateStorage",
    ()=>decorateStorage
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/lazy.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/util.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$createFunction$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/storage/createFunction.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$getStorage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/storage/getStorage.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/storage/util.js [app-ssr] (ecmascript)");
;
;
;
;
;
const VERSION_NAME = 'palletVersion';
const VERSION_KEY = ':__STORAGE_VERSION__:';
const VERSION_DOCS = {
    docs: 'Returns the current pallet version from storage',
    type: 'u16'
};
function decorateStorage(registry, { pallets }, _metaVersion) {
    const result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$getStorage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStorage"])(registry);
    for(let i = 0, count = pallets.length; i < count; i++){
        const { name, storage } = pallets[i];
        if (storage.isSome) {
            const section = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(name);
            const { items, prefix: _prefix } = storage.unwrap();
            const prefix = _prefix.toString();
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethod"])(result, section, ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethods"])({
                    palletVersion: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createRuntimeFunction"])({
                        method: VERSION_NAME,
                        prefix,
                        section
                    }, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$createFunction$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createKeyRaw"])(registry, {
                        method: VERSION_KEY,
                        prefix: name.toString()
                    }, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$createFunction$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NO_RAW_ARGS"]), VERSION_DOCS)(registry)
                }, items, (meta)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$createFunction$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createFunction"])(registry, {
                        meta,
                        method: meta.name.toString(),
                        prefix,
                        section
                    }, {}), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectNameToCamel"]));
        }
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/types/metadata/decorate/index.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "expandMetadata",
    ()=>expandMetadata
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$Metadata$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/Metadata.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$constants$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/constants/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$errors$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/errors/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$events$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/events/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$extrinsics$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/extrinsics/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/metadata/decorate/storage/index.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
function expandMetadata(registry, metadata) {
    if (!(metadata instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$Metadata$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Metadata"])) {
        throw new Error('You need to pass a valid Metadata instance to Decorated');
    }
    const latest = metadata.asLatest;
    const version = metadata.version;
    return {
        consts: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$constants$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decorateConstants"])(registry, latest, version),
        errors: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$errors$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decorateErrors"])(registry, latest, version),
        events: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$events$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decorateEvents"])(registry, latest, version),
        query: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$storage$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decorateStorage"])(registry, latest, version),
        registry,
        tx: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$metadata$2f$decorate$2f$extrinsics$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decorateExtrinsics"])(registry, latest, version)
    };
}
;
}),
"[project]/node_modules/@polkadot/types/interfaces/definitions.js [app-ssr] (ecmascript) <export * as typeDefinitions>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "typeDefinitions",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$definitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/definitions.js [app-ssr] (ecmascript)");
}),
];

//# sourceMappingURL=node_modules_%40polkadot_types_2cfa4c91._.js.map