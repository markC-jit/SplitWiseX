module.exports=[12057,(a,b,c)=>{b.exports=a.x("node:util",()=>require("node:util"))},86339,a=>{"use strict";a.s(["isWeb3Injected",()=>h,"packageInfo",()=>w,"unwrapBytes",()=>y,"web3Accounts",()=>p,"web3AccountsSubscribe",()=>q,"web3Enable",()=>o,"web3EnablePromise",()=>i,"web3FromAddress",()=>s,"web3FromSource",()=>r,"web3ListRpcProviders",()=>t,"web3UseRpcProvider",()=>u,"wrapBytes",()=>z],86339),a.s([],60867),a.i(60867),a.s(["isWeb3Injected",()=>h,"packageInfo",()=>w,"unwrapBytes",()=>y,"web3Accounts",()=>p,"web3AccountsSubscribe",()=>q,"web3Enable",()=>o,"web3EnablePromise",()=>i,"web3FromAddress",()=>s,"web3FromSource",()=>r,"web3ListRpcProviders",()=>t,"web3UseRpcProvider",()=>u,"wrapBytes",()=>z],7691),a.s(["isWeb3Injected",()=>h,"web3Accounts",()=>p,"web3AccountsSubscribe",()=>q,"web3Enable",()=>o,"web3EnablePromise",()=>i,"web3FromAddress",()=>s,"web3FromSource",()=>r,"web3ListRpcProviders",()=>t,"web3UseRpcProvider",()=>u],87241);let b=(0,a.i(55559).isOnObject)("catch","then");var c=a.i(61923),d=a.i(55202),e=a.i(17094),f=a.i(33083);let g=window;g.injectedWeb3=g.injectedWeb3||{};let h=j(),i=null;function j(){return 0!==Object.values(g.injectedWeb3).filter(({connect:a,enable:b})=>!!(a||b)).length}function k(a){throw Error(`${a}: web3Enable(originName) needs to be called before ${a}`)}function l(a,b,c){return b.map(({address:b,genesisHash:d,name:g,type:h})=>({address:42===b.length?b:(0,f.encodeAddress)((0,e.decodeAddress)(b),c),meta:{genesisHash:d,name:g,source:a},type:h}))}function m(a,b,c){return a.filter(a=>(!a.type||!c||c.includes(a.type))&&(!a.genesisHash||!b||a.genesisHash===b))}async function n(a,b){return i?(await i).filter(({name:a})=>!b||b.includes(a)):k(a)}function o(a,b=[]){var d;if(!a)throw Error("You must pass a name for your app to the web3Enable function");let e=b.length?Promise.all(b.map(a=>a().catch(()=>!1))):Promise.resolve([!0]);return d=()=>e.then(()=>Promise.all(Object.entries(g.injectedWeb3).map(([b,{connect:d,enable:e,version:f}])=>Promise.resolve().then(()=>d?d(a):e?e(a).then(a=>(0,c.objectSpread)({name:b,version:f||"unknown"},a)):Promise.reject(Error("No connect(..) or enable(...) hook found"))).catch(({message:a})=>{console.error(`Error initializing ${b}: ${a}`)}))).then(a=>a.filter(a=>!!a)).then(a=>a.map(a=>(a.accounts.subscribe||(a.accounts.subscribe=b=>(a.accounts.get().then(b).catch(console.error),()=>{})),a))).catch(()=>[]).then(a=>{let b=a.map(({name:a,version:b})=>`${a}/${b}`);return h=j(),console.info(`web3Enable: Enabled ${a.length} extension${1!==a.length?"s":""}: ${b.join(", ")}`),a})),i=new Promise(a=>{"complete"===document.readyState?a(d()):window.addEventListener("load",()=>a(d()))})}async function p({accountType:a,extensions:b,genesisHash:c,ss58Format:d}={}){let e=[],f=await n("web3Accounts",b);return(await Promise.all(f.map(async({accounts:b,name:e})=>{try{let f=await b.get();return l(e,m(f,c,a),d)}catch{return[]}}))).forEach(a=>{e.push(...a)}),console.info(`web3Accounts: Found ${e.length} address${1!==e.length?"es":""}`),e}async function q(a,{accountType:c,extensions:d,genesisHash:e,ss58Format:f}={}){let g=await n("web3AccountsSubscribe",d),h={},i=g.map(({accounts:{subscribe:d},name:g})=>d(d=>{h[g]=d;try{let d=a(Object.entries(h).reduce((a,[b,d])=>(a.push(...l(b,m(d,e,c),f)),a),[]));d&&b(d)&&d.catch(console.error)}catch(a){console.error(a)}}));return()=>{i.forEach(a=>{a()})}}async function r(a){if(!i)return k("web3FromSource");let b=await i,c=a&&b.find(({name:b})=>b===a);if(!c)throw Error(`web3FromSource: Unable to find an injected ${a}`);return c}async function s(a){let b;if(!i)return k("web3FromAddress");let c=await p();if(a){let f=(0,e.decodeAddress)(a);b=c.find(a=>(0,d.u8aEq)((0,e.decodeAddress)(a.address),f))}if(!b)throw Error(`web3FromAddress: Unable to find injected ${a}`);return r(b.meta.source)}async function t(a){let{provider:b}=await r(a);return b?b.listProviders():(console.warn(`Extension ${a} does not expose any provider`),null)}async function u(a,b){let{provider:c}=await r(a);if(!c)throw Error(`Extension ${a} does not expose any provider`);return{meta:await c.startProvider(b),provider:c}}a.i(87241);let v={get url(){return`file://${a.P("node_modules/@polkadot/extension-dapp/packageInfo.js")}`}},w={name:"@polkadot/extension-dapp",path:v&&v.url?new URL(v.url).pathname.substring(0,new URL(v.url).pathname.lastIndexOf("/")+1):"auto",type:"esm",version:"0.62.1"};var x=a.i(57868);x.U8A_WRAP_ETHEREUM,x.U8A_WRAP_POSTFIX,x.U8A_WRAP_PREFIX,x.u8aIsWrapped;let y=x.u8aUnwrapBytes,z=x.u8aWrapBytes;a.i(7691)}];

//# sourceMappingURL=%5Broot-of-the-server%5D__782bc9d3._.js.map