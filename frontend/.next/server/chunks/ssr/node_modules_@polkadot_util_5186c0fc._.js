module.exports = [
"[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name isFunction
 * @summary Tests for a `function`.
 * @description
 * Checks to see if the input value is a JavaScript function.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isFunction } from '@polkadot/util';
 *
 * isFunction(() => false); // => true
 * ```
 */ __turbopack_context__.s([
    "isFunction",
    ()=>isFunction
]);
function isFunction(value) {
    return typeof value === 'function';
}
}),
"[project]/node_modules/@polkadot/util/detectPackage.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG",
    ()=>POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG,
    "detectPackage",
    ()=>detectPackage
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
;
;
const DEDUPE = 'Either remove and explicitly install matching versions or dedupe using your package manager.\nThe following conflicting packages were found:';
const POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG = 'POLKADOTJS_DISABLE_ESM_CJS_WARNING';
/** @internal */ function getEntry(name) {
    const _global = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"];
    if (!_global.__polkadotjs) {
        _global.__polkadotjs = {};
    }
    if (!_global.__polkadotjs[name]) {
        _global.__polkadotjs[name] = [];
    }
    return _global.__polkadotjs[name];
}
/** @internal */ function formatDisplay(all, fmt) {
    let max = 0;
    for(let i = 0, count = all.length; i < count; i++){
        max = Math.max(max, all[i].version.length);
    }
    return all.map((d)=>`\t${fmt(d.version.padEnd(max), d).join('\t')}`).join('\n');
}
/** @internal */ function formatInfo(version, { name }) {
    return [
        version,
        name
    ];
}
/** @internal */ function formatVersion(version, { path, type }) {
    let extracted;
    if (path && path.length >= 5) {
        const nmIndex = path.indexOf('node_modules');
        extracted = nmIndex === -1 ? path : path.substring(nmIndex);
    } else {
        extracted = '<unknown>';
    }
    return [
        `${`${type || ''}`.padStart(3)} ${version}`,
        extracted
    ];
}
/** @internal */ function getPath(infoPath, pathOrFn) {
    if (infoPath) {
        return infoPath;
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(pathOrFn)) {
        try {
            return pathOrFn() || '';
        } catch  {
            return '';
        }
    }
    return pathOrFn || '';
}
/** @internal */ function warn(pre, all, fmt) {
    console.warn(`${pre}\n${DEDUPE}\n${formatDisplay(all, fmt)}`);
}
function detectPackage({ name, path, type, version }, pathOrFn, deps = []) {
    if (!name.startsWith('@polkadot')) {
        throw new Error(`Invalid package descriptor ${name}`);
    }
    const entry = getEntry(name);
    entry.push({
        path: getPath(path, pathOrFn),
        type,
        version
    });
    // if we have more than one entry at DIFFERENT version types then warn. If there is
    // more than one entry at the same version and ESM/CJS dual warnings are disabled,
    // then do not display warnings
    const entriesSameVersion = entry.every((e)=>e.version === version);
    const esmCjsWarningDisabled = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"].process?.env?.[POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG] === '1';
    const multipleEntries = entry.length !== 1;
    const disableWarnings = esmCjsWarningDisabled && entriesSameVersion;
    if (multipleEntries && !disableWarnings) {
        warn(`${name} has multiple versions, ensure that there is only one installed.`, entry, formatVersion);
    } else {
        const mismatches = deps.filter((d)=>d && d.version !== version);
        if (mismatches.length) {
            warn(`${name} requires direct dependencies exactly matching version ${version}.`, mismatches, formatInfo);
        }
    }
}
}),
"[project]/node_modules/@polkadot/util/hex/toU8a.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "hexToU8a",
    ()=>hexToU8a
]);
const CHR = '0123456789abcdef';
const U8 = new Uint8Array(256);
const U16 = new Uint8Array(256 * 256);
for(let i = 0, count = CHR.length; i < count; i++){
    U8[CHR[i].charCodeAt(0) | 0] = i | 0;
    if (i > 9) {
        U8[CHR[i].toUpperCase().charCodeAt(0) | 0] = i | 0;
    }
}
for(let i = 0; i < 256; i++){
    const s = i << 8;
    for(let j = 0; j < 256; j++){
        U16[s | j] = U8[i] << 4 | U8[j];
    }
}
function hexToU8a(value, bitLength = -1) {
    if (!value) {
        return new Uint8Array();
    }
    let s = value.startsWith('0x') ? 2 : 0;
    const decLength = Math.ceil((value.length - s) / 2);
    const endLength = Math.ceil(bitLength === -1 ? decLength : bitLength / 8);
    const result = new Uint8Array(endLength);
    const offset = endLength > decLength ? endLength - decLength : 0;
    for(let i = offset; i < endLength; i++, s += 2){
        // The big factor here is actually the string lookups. If we do
        // HEX_TO_U16[value.substring()] we get an 10x slowdown. In the
        // same vein using charCodeAt (as opposed to value[s] or value.charAt(s)) is
        // also the faster operation by at least 2x with the character map above
        result[i] = U16[value.charCodeAt(s) << 8 | value.charCodeAt(s + 1)];
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "REGEX_HEX_NOPREFIX",
    ()=>REGEX_HEX_NOPREFIX,
    "REGEX_HEX_PREFIXED",
    ()=>REGEX_HEX_PREFIXED,
    "isHex",
    ()=>isHex
]);
const REGEX_HEX_PREFIXED = /^0x[\da-fA-F]+$/;
const REGEX_HEX_NOPREFIX = /^[\da-fA-F]+$/;
function isHex(value, bitLength = -1, ignoreLength) {
    return typeof value === 'string' && (value === '0x' || REGEX_HEX_PREFIXED.test(value)) && (bitLength === -1 ? ignoreLength || value.length % 2 === 0 : value.length === 2 + Math.ceil(bitLength / 4));
}
}),
"[project]/node_modules/@polkadot/util/string/toU8a.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "stringToU8a",
    ()=>stringToU8a
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$textencoder$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-textencoder/node.js [app-ssr] (ecmascript) <locals>");
;
const encoder = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$textencoder$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["TextEncoder"]();
function stringToU8a(value) {
    return value ? encoder.encode(value.toString()) : new Uint8Array();
}
}),
"[project]/node_modules/@polkadot/util/has.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "hasBigInt",
    ()=>hasBigInt,
    "hasBuffer",
    ()=>hasBuffer,
    "hasCjs",
    ()=>hasCjs,
    "hasDirname",
    ()=>hasDirname,
    "hasEsm",
    ()=>hasEsm,
    "hasProcess",
    ()=>hasProcess,
    "hasWasm",
    ()=>hasWasm
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-bigint/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>");
;
;
const hasBigInt = typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"] === 'function' && typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"].asIntN === 'function';
const hasCjs = ("TURBOPACK compile-time value", "function") === 'function' && ("TURBOPACK compile-time value", "undefined") !== 'undefined';
const hasDirname = typeof ("TURBOPACK compile-time value", "/ROOT/node_modules/@polkadot/util") !== 'undefined';
const hasEsm = !hasCjs;
const hasWasm = typeof WebAssembly !== 'undefined';
const hasBuffer = typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"].Buffer === 'function' && typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"].Buffer.isBuffer === 'function';
const hasProcess = typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"].process === 'object';
}),
"[project]/node_modules/@polkadot/util/is/buffer.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isBuffer",
    ()=>isBuffer
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$has$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/has.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
;
;
;
function isBuffer(value) {
    // we do check a function first, since it is slightly faster than isBuffer itself
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$has$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hasBuffer"] && !!value && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value.readDoubleLE) && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"].Buffer.isBuffer(value);
}
}),
"[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name isU8a
 * @summary Tests for a `Uint8Array` object instance.
 * @description
 * Checks to see if the input object is an instance of `Uint8Array`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUint8Array } from '@polkadot/util';
 *
 * console.log('isU8a', isU8a([])); // => false
 * ```
 */ __turbopack_context__.s([
    "isU8a",
    ()=>isU8a
]);
function isU8a(value) {
    // here we defer the instanceof check which is actually slightly
    // slower than just checking the constrctor (direct instances)
    return (value && value.constructor) === Uint8Array || value instanceof Uint8Array;
}
}),
"[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u8aToU8a",
    ()=>u8aToU8a
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$buffer$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/buffer.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/toU8a.js [app-ssr] (ecmascript)");
;
;
;
;
;
function u8aToU8a(value, strict = false) {
    if (strict && (value === null || value === undefined)) {
        throw new Error('u8aToU8a: Expected non-null, non-undefined value');
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$buffer$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBuffer"])(value) ? new Uint8Array(value) : value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(value) : Array.isArray(value) ? new Uint8Array(value) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringToU8a"])(value);
}
}),
"[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u8aConcat",
    ()=>u8aConcat,
    "u8aConcatStrict",
    ()=>u8aConcatStrict
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
;
function u8aConcat(...list) {
    const count = list.length;
    const u8as = new Array(count);
    let length = 0;
    for(let i = 0; i < count; i++){
        u8as[i] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(list[i]);
        length += u8as[i].length;
    }
    return u8aConcatStrict(u8as, length);
}
function u8aConcatStrict(u8as, length = 0) {
    const count = u8as.length;
    let offset = 0;
    if (!length) {
        for(let i = 0; i < count; i++){
            length += u8as[i].length;
        }
    }
    const result = new Uint8Array(length);
    for(let i = 0; i < count; i++){
        result.set(u8as[i], offset);
        offset += u8as[i].length;
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/util/u8a/toString.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u8aToString",
    ()=>u8aToString
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$textdecoder$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-textdecoder/node.js [app-ssr] (ecmascript) <locals>");
;
const decoder = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$textdecoder$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["TextDecoder"]('utf-8');
function u8aToString(value) {
    return value ? decoder.decode(value) : '';
}
}),
"[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u8aToHex",
    ()=>u8aToHex
]);
const U8 = new Array(256);
const U16 = new Array(256 * 256);
for(let n = 0; n < 256; n++){
    U8[n] = n.toString(16).padStart(2, '0');
}
for(let i = 0; i < 256; i++){
    const s = i << 8;
    for(let j = 0; j < 256; j++){
        U16[s | j] = U8[i] + U8[j];
    }
}
/** @internal */ function hex(value, result) {
    const mod = value.length % 2 | 0;
    const length = value.length - mod | 0;
    for(let i = 0; i < length; i += 2){
        result += U16[value[i] << 8 | value[i + 1]];
    }
    if (mod) {
        result += U8[value[length] | 0];
    }
    return result;
}
function u8aToHex(value, bitLength = -1, isPrefixed = true) {
    // this is not 100% correct sinmce we support isPrefixed = false....
    const empty = isPrefixed ? '0x' : '';
    if (!value?.length) {
        return empty;
    } else if (bitLength > 0) {
        const length = Math.ceil(bitLength / 8);
        if (value.length > length) {
            return `${hex(value.subarray(0, length / 2), empty)}…${hex(value.subarray(value.length - length / 2), '')}`;
        }
    }
    return hex(value, empty);
}
}),
"[project]/node_modules/@polkadot/util/hex/stripPrefix.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "hexStripPrefix",
    ()=>hexStripPrefix
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
;
function hexStripPrefix(value) {
    if (!value || value === '0x') {
        return '';
    } else if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["REGEX_HEX_PREFIXED"].test(value)) {
        return value.substring(2);
    } else if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["REGEX_HEX_NOPREFIX"].test(value)) {
        return value;
    }
    throw new Error(`Expected hex value to convert, found '${value}'`);
}
}),
"[project]/node_modules/@polkadot/util/hex/toBn.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "hexToBn",
    ()=>hexToBn
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$stripPrefix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/stripPrefix.js [app-ssr] (ecmascript)");
;
;
function hexToBn(value, { isLe = false, isNegative = false } = {}) {
    if (!value || value === '0x') {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](0);
    }
    const stripped = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$stripPrefix$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexStripPrefix"])(value);
    const bn = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](stripped, 16, isLe ? 'le' : 'be');
    // fromTwos takes as parameter the number of bits, which is the hex length
    // multiplied by 4 (2 bytes being 8 bits)
    return isNegative ? bn.fromTwos(stripped.length * 4) : bn;
}
}),
"[project]/node_modules/@polkadot/util/is/bigInt.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name isBigInt
 * @summary Tests for a `BigInt` object instance.
 * @description
 * Checks to see if the input object is an instance of `BigInt`
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBigInt } from '@polkadot/util';
 *
 * console.log('isBigInt', isBigInt(123_456n)); // => true
 * ```
 */ __turbopack_context__.s([
    "isBigInt",
    ()=>isBigInt
]);
function isBigInt(value) {
    return typeof value === 'bigint';
}
}),
"[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name isObject
 * @summary Tests for an `object`.
 * @description
 * Checks to see if the input value is a JavaScript object.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isObject } from '@polkadot/util';
 *
 * isObject({}); // => true
 * isObject('something'); // => false
 * ```
 */ __turbopack_context__.s([
    "isObject",
    ()=>isObject
]);
function isObject(value) {
    return !!value && typeof value === 'object';
}
}),
"[project]/node_modules/@polkadot/util/is/helpers.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isOn",
    ()=>isOn,
    "isOnFunction",
    ()=>isOnFunction,
    "isOnObject",
    ()=>isOnObject
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
;
;
function isOn(...fns) {
    return (value)=>((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value)) && fns.every((f)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value[f]));
}
function isOnFunction(...fns) {
    return (value)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value) && fns.every((f)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value[f]));
}
function isOnObject(...fns) {
    return (value)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(value) && fns.every((f)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value[f]));
}
}),
"[project]/node_modules/@polkadot/util/is/toBigInt.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isToBigInt",
    ()=>isToBigInt
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/helpers.js [app-ssr] (ecmascript)");
;
const isToBigInt = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isOn"])('toBigInt');
}),
"[project]/node_modules/@polkadot/util/is/toBn.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isToBn",
    ()=>isToBn
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/helpers.js [app-ssr] (ecmascript)");
;
const isToBn = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isOn"])('toBn');
}),
"[project]/node_modules/@polkadot/util/bn/toBn.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "bnToBn",
    ()=>bnToBn
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bigInt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$toBigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/toBigInt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
;
;
;
;
;
;
function bnToBn(value) {
    return value ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"].isBN(value) ? value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToBn"])(value.toString()) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBigInt"])(value) ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](value.toString()) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isToBn"])(value) ? value.toBn() : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$toBigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isToBigInt"])(value) ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](value.toBigInt().toString()) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](value) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](0);
}
}),
"[project]/node_modules/@polkadot/util/bn/toU8a.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "bnToU8a",
    ()=>bnToU8a
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toBn.js [app-ssr] (ecmascript)");
;
const DEFAULT_OPTS = {
    bitLength: -1,
    isLe: true,
    isNegative: false
};
function bnToU8a(value, { bitLength = -1, isLe = true, isNegative = false } = DEFAULT_OPTS) {
    const valueBn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(value);
    const byteLength = bitLength === -1 ? Math.ceil(valueBn.bitLength() / 8) : Math.ceil((bitLength || 0) / 8);
    if (!value) {
        return bitLength === -1 ? new Uint8Array(1) : new Uint8Array(byteLength);
    }
    const output = new Uint8Array(byteLength);
    const bn = isNegative ? valueBn.toTwos(byteLength * 8) : valueBn;
    output.set(bn.toArray(isLe ? 'le' : 'be', byteLength), 0);
    return output;
}
}),
"[project]/node_modules/@polkadot/util/u8a/empty.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name u8aEmpty
 * @summary Tests for a `Uint8Array` for emptyness
 * @description
 * Checks to see if the input `Uint8Array` has zero length or contains all 0 values.
 */ __turbopack_context__.s([
    "u8aEmpty",
    ()=>u8aEmpty
]);
function u8aEmpty(value) {
    const len = value.length | 0;
    // on smaller sizes, the byte-by-byte compare is faster than allocating
    // another object for DataView (on very large arrays the DataView is faster)
    for(let i = 0; i < len; i++){
        if (value[i] | 0) {
            return false;
        }
    }
    return true;
}
}),
"[project]/node_modules/@polkadot/util/bi/consts.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "_0n",
    ()=>_0n,
    "_1000n",
    ()=>_1000n,
    "_100n",
    ()=>_100n,
    "_10n",
    ()=>_10n,
    "_1Bn",
    ()=>_1Bn,
    "_1Mn",
    ()=>_1Mn,
    "_1Qn",
    ()=>_1Qn,
    "_1n",
    ()=>_1n,
    "_2n",
    ()=>_2n,
    "_2pow53n",
    ()=>_2pow53n,
    "_3n",
    ()=>_3n,
    "_4n",
    ()=>_4n,
    "_5n",
    ()=>_5n,
    "_6n",
    ()=>_6n,
    "_7n",
    ()=>_7n,
    "_8n",
    ()=>_8n,
    "_9n",
    ()=>_9n,
    "_sqrt2pow53n",
    ()=>_sqrt2pow53n
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-bigint/index.js [app-ssr] (ecmascript) <locals>");
;
const _0n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(0);
const _1n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(1);
const _2n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(2);
const _3n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(3);
const _4n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(4);
const _5n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(5);
const _6n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(6);
const _7n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(7);
const _8n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(8);
const _9n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(9);
const _10n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(10);
const _100n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(100);
const _1000n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(1_000);
const _1Mn = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(1_000_000);
const _1Bn = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(1_000_000_000);
const _1Qn = _1Bn * _1Bn;
const _2pow53n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(Number.MAX_SAFE_INTEGER);
const _sqrt2pow53n = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(94906265);
}),
"[project]/node_modules/@polkadot/util/u8a/toBigInt.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u8aToBigInt",
    ()=>u8aToBigInt
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-bigint/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bi/consts.js [app-ssr] (ecmascript)");
;
;
const U8_MAX = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(256);
const U16_MAX = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(256 * 256);
const U64_MAX = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])('0x10000000000000000');
function u8aToBigInt(value, { isLe = true, isNegative = false } = {}) {
    // slice + reverse is expensive, however SCALE is LE by default so this is the path
    // we are most interested in (the BE is added for the sake of being comprehensive)
    if (!isLe) {
        value = value.slice().reverse();
    }
    const count = value.length;
    if (isNegative && count && value[count - 1] & 0x80) {
        switch(count){
            case 0:
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(0);
            case 1:
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])((value[0] ^ 0x0000_00ff) * -1 - 1);
            case 2:
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])((value[0] + (value[1] << 8) ^ 0x0000_ffff) * -1 - 1);
            case 4:
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])((value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1_00_00_00 ^ 0xffff_ffff) * -1 - 1);
        }
        const dvI = new DataView(value.buffer, value.byteOffset);
        if (count === 8) {
            return dvI.getBigInt64(0, true);
        }
        let result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(0);
        const mod = count % 2;
        for(let i = count - 2; i >= mod; i -= 2){
            result = result * U16_MAX + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(dvI.getUint16(i, true) ^ 0xffff);
        }
        if (mod) {
            result = result * U8_MAX + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(value[0] ^ 0xff);
        }
        return result * -__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["_1n"] - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["_1n"];
    }
    switch(count){
        case 0:
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(0);
        case 1:
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(value[0]);
        case 2:
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(value[0] + (value[1] << 8));
        case 4:
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1_00_00_00);
    }
    const dvI = new DataView(value.buffer, value.byteOffset);
    switch(count){
        case 8:
            return dvI.getBigUint64(0, true);
        case 16:
            return dvI.getBigUint64(8, true) * U64_MAX + dvI.getBigUint64(0, true);
        default:
            {
                let result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(0);
                const mod = count % 2;
                for(let i = count - 2; i >= mod; i -= 2){
                    result = result * U16_MAX + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(dvI.getUint16(i, true));
                }
                if (mod) {
                    result = result * U8_MAX + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(value[0]);
                }
                return result;
            }
    }
}
}),
"[project]/node_modules/@polkadot/util/hex/toBigInt.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "hexToBigInt",
    ()=>hexToBigInt
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-bigint/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toBigInt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toU8a.js [app-ssr] (ecmascript)");
;
;
;
function hexToBigInt(value, { isLe = false, isNegative = false } = {}) {
    return !value || value === '0x' ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(0) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToBigInt"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(value), {
        isLe,
        isNegative
    });
}
}),
"[project]/node_modules/@polkadot/util/is/bn.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isBn",
    ()=>isBn
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
;
function isBn(value) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"].isBN(value);
}
}),
"[project]/node_modules/@polkadot/util/bi/toBigInt.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "nToBigInt",
    ()=>nToBigInt
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-bigint/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toBigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toBigInt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$toBigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/toBigInt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/toBn.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
function nToBigInt(value) {
    return typeof value === 'bigint' ? value : !value ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(0) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toBigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToBigInt"])(value.toString()) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBn"])(value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(value.toString()) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$toBigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isToBigInt"])(value) ? value.toBigInt() : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isToBn"])(value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(value.toBn().toString()) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(value);
}
}),
"[project]/node_modules/@polkadot/util/bi/toU8a.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "nToU8a",
    ()=>nToU8a
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-bigint/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bi/consts.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$toBigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bi/toBigInt.js [app-ssr] (ecmascript)");
;
;
;
const DIV = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(256);
const NEG_MASK = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$bigint$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["BigInt"])(0xff);
function toU8a(value, isLe, isNegative) {
    const arr = [];
    const withSigned = isNegative && value < __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["_0n"];
    if (withSigned) {
        value = (value + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["_1n"]) * -__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["_1n"];
    }
    while(value !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["_0n"]){
        const mod = value % DIV;
        const val = Number(withSigned ? mod ^ NEG_MASK : mod);
        if (isLe) {
            arr.push(val);
        } else {
            arr.unshift(val);
        }
        value = (value - mod) / DIV;
    }
    return Uint8Array.from(arr);
}
function nToU8a(value, { bitLength = -1, isLe = true, isNegative = false } = {}) {
    const valueBi = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$toBigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["nToBigInt"])(value);
    if (valueBi === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["_0n"]) {
        return bitLength === -1 ? new Uint8Array(1) : new Uint8Array(Math.ceil((bitLength || 0) / 8));
    }
    const u8a = toU8a(valueBi, isLe, isNegative);
    if (bitLength === -1) {
        return u8a;
    }
    const byteLength = Math.ceil((bitLength || 0) / 8);
    const output = new Uint8Array(byteLength);
    if (isNegative) {
        output.fill(0xff);
    }
    output.set(u8a, isLe ? 0 : byteLength - u8a.length);
    return output;
}
}),
"[project]/node_modules/@polkadot/util/bn/consts.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BN_BILLION",
    ()=>BN_BILLION,
    "BN_EIGHT",
    ()=>BN_EIGHT,
    "BN_FIVE",
    ()=>BN_FIVE,
    "BN_FOUR",
    ()=>BN_FOUR,
    "BN_HUNDRED",
    ()=>BN_HUNDRED,
    "BN_MAX_INTEGER",
    ()=>BN_MAX_INTEGER,
    "BN_MILLION",
    ()=>BN_MILLION,
    "BN_NINE",
    ()=>BN_NINE,
    "BN_ONE",
    ()=>BN_ONE,
    "BN_QUINTILL",
    ()=>BN_QUINTILL,
    "BN_SEVEN",
    ()=>BN_SEVEN,
    "BN_SIX",
    ()=>BN_SIX,
    "BN_SQRT_MAX_INTEGER",
    ()=>BN_SQRT_MAX_INTEGER,
    "BN_TEN",
    ()=>BN_TEN,
    "BN_THOUSAND",
    ()=>BN_THOUSAND,
    "BN_THREE",
    ()=>BN_THREE,
    "BN_TWO",
    ()=>BN_TWO,
    "BN_ZERO",
    ()=>BN_ZERO
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
;
const BN_ZERO = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](0);
const BN_ONE = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](1);
const BN_TWO = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](2);
const BN_THREE = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](3);
const BN_FOUR = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](4);
const BN_FIVE = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](5);
const BN_SIX = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](6);
const BN_SEVEN = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](7);
const BN_EIGHT = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](8);
const BN_NINE = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](9);
const BN_TEN = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](10);
const BN_HUNDRED = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](100);
const BN_THOUSAND = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](1_000);
const BN_MILLION = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](1_000_000);
const BN_BILLION = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](1_000_000_000);
const BN_QUINTILL = BN_BILLION.mul(BN_BILLION);
const BN_MAX_INTEGER = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](Number.MAX_SAFE_INTEGER);
const BN_SQRT_MAX_INTEGER = /*#__PURE__*/ new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](94906265);
}),
"[project]/node_modules/@polkadot/util/compact/toU8a.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "compactToU8a",
    ()=>compactToU8a
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/consts.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
;
;
const MAX_U8 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_TWO"].pow(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](8 - 2)).isub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_ONE"]);
const MAX_U16 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_TWO"].pow(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](16 - 2)).isub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_ONE"]);
const MAX_U32 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_TWO"].pow(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](32 - 2)).isub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_ONE"]);
const BL_16 = {
    bitLength: 16
};
const BL_32 = {
    bitLength: 32
};
function compactToU8a(value) {
    const bn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(value);
    if (bn.lte(MAX_U8)) {
        return new Uint8Array([
            bn.toNumber() << 2
        ]);
    } else if (bn.lte(MAX_U16)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToU8a"])(bn.shln(2).iadd(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_ONE"]), BL_16);
    } else if (bn.lte(MAX_U32)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToU8a"])(bn.shln(2).iadd(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_TWO"]), BL_32);
    }
    const u8a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToU8a"])(bn);
    let length = u8a.length;
    // adjust to the minimum number of bytes
    while(u8a[length - 1] === 0){
        length--;
    }
    if (length < 4) {
        throw new Error('Invalid length, previous checks match anything less than 2^30');
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])([
        // subtract 4 as minimum (also catered for in decoding)
        new Uint8Array([
            (length - 4 << 2) + 0b11
        ]),
        u8a.subarray(0, length)
    ]);
}
}),
"[project]/node_modules/@polkadot/util/compact/addLength.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "compactAddLength",
    ()=>compactAddLength
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/toU8a.js [app-ssr] (ecmascript)");
;
;
function compactAddLength(input) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(input.length),
        input
    ]);
}
}),
"[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name isNumber
 * @summary Tests for a JavaScript number.
 * @description
 * Checks to see if the input value is a valid number.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNumber } from '@polkadot/util';
 *
 * console.log('isNumber', isNumber(1234)); // => true
 * ```
 */ __turbopack_context__.s([
    "isNumber",
    ()=>isNumber
]);
function isNumber(value) {
    return typeof value === 'number';
}
}),
"[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name isString
 * @summary Tests for a string.
 * @description
 * Checks to see if the input value is a JavaScript string.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isString } from '@polkadot/util';
 *
 * console.log('isString', isString('test')); // => true
 * ```
 */ __turbopack_context__.s([
    "isString",
    ()=>isString
]);
function isString(value) {
    return typeof value === 'string' || value instanceof String;
}
}),
"[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name objectSpread
 * @summary Concats all sources into the destination
 * @description Spreads object properties while maintaining object integrity
 */ __turbopack_context__.s([
    "objectSpread",
    ()=>objectSpread
]);
function objectSpread(dest, ...sources) {
    const filterProps = new Set([
        '__proto__',
        'constructor',
        'prototype'
    ]);
    for(let i = 0, count = sources.length; i < count; i++){
        const src = sources[i];
        if (src) {
            if (typeof src.entries === 'function') {
                for (const [key, value] of src.entries()){
                    if (!filterProps.has(key)) {
                        dest[key] = value;
                    }
                }
            } else {
                // Create a clean copy of the source object
                const sanitizedSrc = Object.create(null);
                for (const [key, value] of Object.entries(src)){
                    if (!filterProps.has(key)) {
                        sanitizedSrc[key] = value;
                    }
                }
                Object.assign(dest, sanitizedSrc);
            }
        }
    }
    return dest;
}
}),
"[project]/node_modules/@polkadot/util/u8a/eq.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u8aEq",
    ()=>u8aEq
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
;
function u8aEq(a, b) {
    const u8aa = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(a);
    const u8ab = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(b);
    if (u8aa.length === u8ab.length) {
        const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);
        const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);
        const mod = u8aa.length % 4 | 0;
        const length = u8aa.length - mod | 0;
        for(let i = 0; i < length; i += 4){
            if (dvA.getUint32(i) !== dvB.getUint32(i)) {
                return false;
            }
        }
        for(let i = length, count = u8aa.length; i < count; i++){
            if (u8aa[i] !== u8ab[i]) {
                return false;
            }
        }
        return true;
    }
    return false;
}
}),
"[project]/node_modules/@polkadot/util/u8a/wrap.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "U8A_WRAP_ETHEREUM",
    ()=>U8A_WRAP_ETHEREUM,
    "U8A_WRAP_POSTFIX",
    ()=>U8A_WRAP_POSTFIX,
    "U8A_WRAP_PREFIX",
    ()=>U8A_WRAP_PREFIX,
    "u8aIsWrapped",
    ()=>u8aIsWrapped,
    "u8aUnwrapBytes",
    ()=>u8aUnwrapBytes,
    "u8aWrapBytes",
    ()=>u8aWrapBytes
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/eq.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
;
;
;
const U8A_WRAP_ETHEREUM = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])('\x19Ethereum Signed Message:\n');
const U8A_WRAP_PREFIX = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])('<Bytes>');
const U8A_WRAP_POSTFIX = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])('</Bytes>');
const WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;
function u8aIsWrapped(u8a, withEthereum) {
    return u8a.length >= WRAP_LEN && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aEq"])(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aEq"])(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX) || withEthereum && u8a.length >= U8A_WRAP_ETHEREUM.length && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aEq"])(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM);
}
function u8aUnwrapBytes(bytes) {
    const u8a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(bytes);
    // we don't want to unwrap Ethereum-style wraps
    return u8aIsWrapped(u8a, false) ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length) : u8a;
}
function u8aWrapBytes(bytes) {
    const u8a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(bytes);
    return u8aIsWrapped(u8a, true) ? u8a : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])([
        U8A_WRAP_PREFIX,
        u8a,
        U8A_WRAP_POSTFIX
    ]);
}
}),
"[project]/node_modules/@polkadot/util/u8a/fixLength.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name u8aFixLength
 * @summary Shifts a Uint8Array to a specific bitLength
 * @description
 * Returns a uint8Array with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length.
 * @example
 * <BR>
 *
 * ```javascript
 * import { u8aFixLength } from '@polkadot/util';
 *
 * u8aFixLength('0x12') // => 0x12
 * u8aFixLength('0x12', 16) // => 0x0012
 * u8aFixLength('0x1234', 8) // => 0x12
 * ```
 */ __turbopack_context__.s([
    "u8aFixLength",
    ()=>u8aFixLength
]);
function u8aFixLength(value, bitLength = -1, atStart = false) {
    const byteLength = Math.ceil(bitLength / 8);
    if (bitLength === -1 || value.length === byteLength) {
        return value;
    } else if (value.length > byteLength) {
        return value.subarray(0, byteLength);
    }
    const result = new Uint8Array(byteLength);
    result.set(value, atStart ? 0 : byteLength - value.length);
    return result;
}
}),
"[project]/node_modules/@polkadot/util/u8a/toBn.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u8aToBn",
    ()=>u8aToBn
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
;
function u8aToBn(value, { isLe = true, isNegative = false } = {}) {
    // slice + reverse is expensive, however SCALE is LE by default so this is the path
    // we are most interested in (the BE is added for the sake of being comprehensive)
    if (!isLe) {
        value = value.slice().reverse();
    }
    const count = value.length;
    // shortcut for <= u48 values - in this case the manual conversion
    // here seems to be more efficient than passing the full array
    if (isNegative && count && value[count - 1] & 0x80) {
        // Most common case i{8, 16, 32} default LE SCALE-encoded
        // For <= 32, we also optimize the xor to a single op
        switch(count){
            case 0:
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](0);
            case 1:
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"]((value[0] ^ 0x0000_00ff) * -1 - 1);
            case 2:
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"]((value[0] + (value[1] << 8) ^ 0x0000_ffff) * -1 - 1);
            case 3:
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"]((value[0] + (value[1] << 8) + (value[2] << 16) ^ 0x00ff_ffff) * -1 - 1);
            case 4:
                // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
                // 32-bit, in the case where the top-most bit is set this yields a negative value
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"]((value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1_00_00_00 ^ 0xffff_ffff) * -1 - 1);
            case 5:
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](((value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1_00_00_00 ^ 0xffff_ffff) + (value[4] ^ 0xff) * 0x1_00_00_00_00) * -1 - 1);
            case 6:
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](((value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1_00_00_00 ^ 0xffff_ffff) + (value[4] + (value[5] << 8) ^ 0x0000_ffff) * 0x1_00_00_00_00) * -1 - 1);
            default:
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](value, 'le').fromTwos(count * 8);
        }
    }
    // Most common case - u{8, 16, 32} default LE SCALE-encoded
    //
    // There are some slight benefits in unrolling this specific loop,
    // however it comes with diminishing returns since here the actual
    // `new BN` does seem to take up the bulk of the time
    switch(count){
        case 0:
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](0);
        case 1:
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](value[0]);
        case 2:
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](value[0] + (value[1] << 8));
        case 3:
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](value[0] + (value[1] << 8) + (value[2] << 16));
        case 4:
            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
            // 32-bit, in the case where the top-most bit is set this yields a negative value
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1_00_00_00);
        case 5:
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8)) * 0x1_00_00_00);
        case 6:
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8) + (value[5] << 16)) * 0x1_00_00_00);
        default:
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](value, 'le');
    }
}
}),
"[project]/node_modules/@polkadot/util/format/formatDate.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/** @internal */ __turbopack_context__.s([
    "formatDate",
    ()=>formatDate
]);
function zeroPad(value) {
    return value.toString().padStart(2, '0');
}
function formatDate(date) {
    const year = date.getFullYear().toString();
    const month = zeroPad(date.getMonth() + 1);
    const day = zeroPad(date.getDate());
    const hour = zeroPad(date.getHours());
    const minute = zeroPad(date.getMinutes());
    const second = zeroPad(date.getSeconds());
    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;
}
}),
"[project]/node_modules/@polkadot/util/noop.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * A sharable identity function. Returns the input as-is with no transformation applied.
 */ __turbopack_context__.s([
    "identity",
    ()=>identity,
    "noop",
    ()=>noop
]);
function identity(value) {
    return value;
}
function noop() {
// noop
}
}),
"[project]/node_modules/@polkadot/util/logger.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "logger",
    ()=>logger,
    "loggerFormat",
    ()=>loggerFormat
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatDate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/format/formatDate.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$buffer$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/buffer.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/noop.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
const logTo = {
    debug: 'log',
    error: 'error',
    log: 'log',
    warn: 'warn'
};
function formatOther(value) {
    if (value && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(value) && value.constructor === Object) {
        const result = {};
        for (const [k, v] of Object.entries(value)){
            result[k] = loggerFormat(v);
        }
        return result;
    }
    return value;
}
function loggerFormat(value) {
    if (Array.isArray(value)) {
        return value.map(loggerFormat);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBn"])(value)) {
        return value.toString();
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$buffer$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBuffer"])(value)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value));
    }
    return formatOther(value);
}
function formatWithLength(maxLength) {
    return (v)=>{
        if (maxLength <= 0) {
            return v;
        }
        const r = `${v}`;
        return r.length < maxLength ? v : `${r.substring(0, maxLength)} ...`;
    };
}
function apply(log, type, values, maxSize = -1) {
    if (values.length === 1 && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(values[0])) {
        const fnResult = values[0]();
        return apply(log, type, Array.isArray(fnResult) ? fnResult : [
            fnResult
        ], maxSize);
    }
    console[logTo[log]]((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatDate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatDate"])(new Date()), type, ...values.map(loggerFormat).map(formatWithLength(maxSize)));
}
function isDebugOn(e, type) {
    return !!e && (e === '*' || type === e || e.endsWith('*') && type.startsWith(e.slice(0, -1)));
}
function isDebugOff(e, type) {
    return !!e && e.startsWith('-') && (type === e.slice(1) || e.endsWith('*') && type.startsWith(e.slice(1, -1)));
}
function getDebugFlag(env, type) {
    let flag = false;
    for (const e of env){
        if (isDebugOn(e, type)) {
            flag = true;
        } else if (isDebugOff(e, type)) {
            flag = false;
        }
    }
    return flag;
}
function parseEnv(type) {
    const maxSize = parseInt(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"].process?.env?.['DEBUG_MAX'] || '-1', 10);
    return [
        getDebugFlag((__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"].process?.env?.['DEBUG'] || '').toLowerCase().split(','), type),
        isNaN(maxSize) ? -1 : maxSize
    ];
}
function logger(origin) {
    const type = `${origin.toUpperCase()}:`.padStart(16);
    const [isDebug, maxSize] = parseEnv(origin.toLowerCase());
    return {
        debug: isDebug ? (...values)=>apply('debug', type, values, maxSize) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noop"],
        error: (...values)=>apply('error', type, values),
        log: (...values)=>apply('log', type, values),
        noop: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noop"],
        warn: (...values)=>apply('warn', type, values)
    };
}
}),
"[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "stringify",
    ()=>stringify
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bigInt.js [app-ssr] (ecmascript)");
;
/** @internal */ function replacer(_, v) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBigInt"])(v) ? v.toString() : v;
}
function stringify(value, space) {
    return JSON.stringify(value, replacer, space);
}
}),
"[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name isUndefined
 * @summary Tests for a `undefined` values.
 * @description
 * Checks to see if the input value is `undefined`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isUndefined } from '@polkadot/util';
 *
 * console.log('isUndefined', isUndefined(void(0))); // => true
 * ```
 */ __turbopack_context__.s([
    "isUndefined",
    ()=>isUndefined
]);
function isUndefined(value) {
    return value === undefined;
}
}),
"[project]/node_modules/@polkadot/util/is/error.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name isError
 * @summary Tests for a `Error` object instance.
 * @description
 * Checks to see if the input object is an instance of `Error`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isError } from '@polkadot/util';
 *
 * console.log('isError', isError(new Error('message'))); // => true
 * ```
 */ __turbopack_context__.s([
    "isError",
    ()=>isError
]);
function isError(value) {
    return (value && value.constructor) === Error || value instanceof Error;
}
}),
"[project]/node_modules/@polkadot/util/is/class.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isClass",
    ()=>isClass
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/helpers.js [app-ssr] (ecmascript)");
;
const isClass = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isOnFunction"])('isPrototypeOf', 'hasOwnProperty');
}),
"[project]/node_modules/@polkadot/util/is/childClass.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isChildClass",
    ()=>isChildClass
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$class$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/class.js [app-ssr] (ecmascript)");
;
function isChildClass(Parent, Child) {
    // https://stackoverflow.com/questions/30993434/check-if-a-constructor-inherits-another-in-es6/30993664
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$class$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isClass"])(Child) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$class$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isClass"])(Parent) ? Parent === Child || Parent.isPrototypeOf(Child) : false;
}
}),
"[project]/node_modules/@polkadot/util/is/null.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name isNull
 * @summary Tests for a `null` values.
 * @description
 * Checks to see if the input value is `null`.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isNull } from '@polkadot/util';
 *
 * console.log('isNull', isNull(null)); // => true
 * ```
 */ __turbopack_context__.s([
    "isNull",
    ()=>isNull
]);
function isNull(value) {
    return value === null;
}
}),
"[project]/node_modules/@polkadot/util/is/boolean.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name isBoolean
 * @summary Tests for a boolean value.
 * @description
 * Checks to see if the input value is a JavaScript boolean.
 * @example
 * <BR>
 *
 * ```javascript
 * import { isBoolean } from '@polkadot/util';
 *
 * isBoolean(false); // => true
 * ```
 */ __turbopack_context__.s([
    "isBoolean",
    ()=>isBoolean
]);
function isBoolean(value) {
    return typeof value === 'boolean';
}
}),
"[project]/node_modules/@polkadot/util/object/property.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name objectProperty
 * @summary Assign a get property on the input object
 */ __turbopack_context__.s([
    "objectProperties",
    ()=>objectProperties,
    "objectProperty",
    ()=>objectProperty
]);
function objectProperty(that, key, getter, getName, index = 0) {
    const name = getName ? getName(key, index) : key;
    // There are 3 approaches here -
    //  - Object.prototype.hasOwnProperty.call(that, key) - this only checks the current class, i.e
    //    will retuirn false if the property is set in the parent class
    //  - isUndefined(...) - this may yield a false positive when the property is there, but not set.
    //    Additionally, on pre-defined getters it may make a call
    //  - key in that - Does not need to be combined with either of the above and checks the full chain
    if (!(name in that)) {
        Object.defineProperty(that, name, {
            enumerable: true,
            // Unlike in lazy, we always call into the upper function, i.e. this method
            // does not cache old values (it is expected to be used for dynamic values)
            get: function() {
                return getter(key, index, this);
            }
        });
    }
}
function objectProperties(that, keys, getter, getName) {
    for(let i = 0, count = keys.length; i < count; i++){
        objectProperty(that, keys[i], getter, getName, i);
    }
}
}),
"[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "CC_TO_LO",
    ()=>CC_TO_LO,
    "CC_TO_UP",
    ()=>CC_TO_UP,
    "stringCamelCase",
    ()=>stringCamelCase,
    "stringPascalCase",
    ()=>stringPascalCase
]);
const CC_TO_UP = new Array(256);
const CC_TO_LO = new Array(256);
for(let i = 0, count = CC_TO_UP.length; i < count; i++){
    CC_TO_LO[i] = String.fromCharCode(i).toLowerCase();
    CC_TO_UP[i] = String.fromCharCode(i).toUpperCase();
}
/** @internal */ function formatAllCaps(w) {
    return w.slice(0, w.length - 1).toLowerCase() + CC_TO_UP[w.charCodeAt(w.length - 1)];
}
/**
 * @internal
 *
 * Inspired by https://stackoverflow.com/a/2970667
 *
 * This is not as optimal as the original SO answer (we split into per-word),
 * however it does pass the tests (which the SO version doesn't) and is still
 * a major improvement over the original camelcase npm package -
 *
 *   camelcase: 20.88 μs/op
 *        this:  1.00 μs/op
 *
 * Caveat of this: only Ascii, but acceptable for the intended usecase
 */ function converter(format) {
    return (value)=>{
        const parts = value// replace all separators (including consequtive) with spaces
        .replace(/[-_., ]+/g, ' ')// we don't want leading or trailing spaces
        .trim()// split into words
        .split(' ');
        let result = '';
        for(let i = 0, count = parts.length; i < count; i++){
            const w = parts[i];
            // apply the formatting
            result += format(/^[\dA-Z]+$/.test(w) ? w.toLowerCase() : w.replace(/^[\dA-Z]{2,}[^a-z]/, formatAllCaps), i);
        }
        return result;
    };
}
const stringCamelCase = /*#__PURE__*/ converter((w, i)=>(i ? CC_TO_UP[w.charCodeAt(0)] : CC_TO_LO[w.charCodeAt(0)]) + w.slice(1));
const stringPascalCase = /*#__PURE__*/ converter((w)=>CC_TO_UP[w.charCodeAt(0)] + w.slice(1));
}),
"[project]/node_modules/@polkadot/util/bn/toHex.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "bnToHex",
    ()=>bnToHex
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toU8a.js [app-ssr] (ecmascript)");
;
;
function bnToHex(value, { bitLength = -1, isLe = false, isNegative = false } = {}) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToU8a"])(value, {
        bitLength,
        isLe,
        isNegative
    }));
}
}),
"[project]/node_modules/@polkadot/util/format/formatDecimal.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "formatDecimal",
    ()=>formatDecimal
]);
const NUMBER_REGEX = new RegExp('(\\d+?)(?=(\\d{3})+(?!\\d)|$)', 'g');
function formatDecimal(value, separator = ',') {
    // We can do this by adjusting the regx, however for the sake of clarity
    // we rather strip and re-add the negative sign in the output
    const isNegative = value[0].startsWith('-');
    const matched = isNegative ? value.substring(1).match(NUMBER_REGEX) : value.match(NUMBER_REGEX);
    return matched ? `${isNegative ? '-' : ''}${matched.join(separator)}` : value;
}
}),
"[project]/node_modules/@polkadot/util/format/getSeparator.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * Get the decimal and thousand separator of a locale
 * @param locale
 * @returns {decimal: string, thousand: string}
 */ __turbopack_context__.s([
    "getSeparator",
    ()=>getSeparator
]);
function getSeparator(locale) {
    return {
        decimal: 0.1.toLocaleString(locale, {
            useGrouping: false
        }).charAt(1),
        thousand: 1000..toLocaleString(locale, {
            useGrouping: true
        }).replace(/\d/g, '').charAt(0)
    };
}
}),
"[project]/node_modules/@polkadot/util/format/si.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/** @internal */ __turbopack_context__.s([
    "SI",
    ()=>SI,
    "SI_MID",
    ()=>SI_MID,
    "calcSi",
    ()=>calcSi,
    "findSi",
    ()=>findSi
]);
const SI_MID = 8;
const SI = [
    {
        power: -24,
        text: 'yocto',
        value: 'y'
    },
    {
        power: -21,
        text: 'zepto',
        value: 'z'
    },
    {
        power: -18,
        text: 'atto',
        value: 'a'
    },
    {
        power: -15,
        text: 'femto',
        value: 'f'
    },
    {
        power: -12,
        text: 'pico',
        value: 'p'
    },
    {
        power: -9,
        text: 'nano',
        value: 'n'
    },
    {
        power: -6,
        text: 'micro',
        value: 'µ'
    },
    {
        power: -3,
        text: 'milli',
        value: 'm'
    },
    {
        power: 0,
        text: 'Unit',
        value: '-'
    },
    {
        power: 3,
        text: 'Kilo',
        value: 'k'
    },
    {
        power: 6,
        text: 'Mill',
        value: 'M'
    },
    {
        power: 9,
        text: 'Bill',
        value: 'B'
    },
    {
        power: 12,
        text: 'Tril',
        value: 'T'
    },
    {
        power: 15,
        text: 'Peta',
        value: 'P'
    },
    {
        power: 18,
        text: 'Exa',
        value: 'E'
    },
    {
        power: 21,
        text: 'Zeta',
        value: 'Z'
    },
    {
        power: 24,
        text: 'Yotta',
        value: 'Y'
    }
];
function findSi(type) {
    // use a loop here, better RN support (which doesn't have [].find)
    for(let i = 0, count = SI.length; i < count; i++){
        if (SI[i].value === type) {
            return SI[i];
        }
    }
    return SI[SI_MID];
}
function calcSi(text, decimals, forceUnit) {
    if (forceUnit) {
        return findSi(forceUnit);
    }
    const siDefIndex = SI_MID - 1 + Math.ceil((text.length - decimals) / 3);
    return SI[siDefIndex] || SI[siDefIndex < 0 ? 0 : SI.length - 1];
}
}),
"[project]/node_modules/@polkadot/util/format/formatBalance.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "formatBalance",
    ()=>formatBalance
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$boolean$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/boolean.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatDecimal$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/format/formatDecimal.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$getSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/format/getSeparator.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$si$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/format/si.js [app-ssr] (ecmascript)");
;
;
;
;
;
const DEFAULT_DECIMALS = 0;
const DEFAULT_UNIT = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$si$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SI"][__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$si$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SI_MID"]].text;
let defaultDecimals = DEFAULT_DECIMALS;
let defaultUnit = DEFAULT_UNIT;
function _formatBalance(input, { decimals = defaultDecimals, forceUnit, locale = 'en', withAll = false, withSi = true, withSiFull = false, withUnit = true, withZero = true } = {}) {
    // we only work with string inputs here - convert anything
    // into the string-only value
    let text = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(input).toString();
    if (text.length === 0 || text === '0') {
        return '0';
    }
    // strip the negative sign so we can work with clean groupings, re-add this in the
    // end when we return the result (from here on we work with positive numbers)
    let sign = '';
    if (text[0].startsWith('-')) {
        sign = '-';
        text = text.substring(1);
    }
    // We start at midpoint (8) minus 1 - this means that values display as
    // 123.4567 instead of 0.1234 k (so we always have the most relevant).
    const si = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$si$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["calcSi"])(text, decimals, forceUnit);
    const mid = text.length - (decimals + si.power);
    const pre = mid <= 0 ? '0' : text.substring(0, mid);
    // get the post from the midpoint onward and then first add max decimals
    // before trimming to the correct (calculated) amount of decimals again
    let post = text.padStart(mid < 0 ? decimals : 1, '0').substring(mid < 0 ? 0 : mid).padEnd(withAll ? Math.max(decimals, 4) : 4, '0').substring(0, withAll ? Math.max(4, decimals + si.power) : 4);
    // remove all trailing 0's (if required via flag)
    if (!withZero) {
        let end = post.length - 1;
        // This looks inefficient, however it is better to do the checks and
        // only make one final slice than it is to do it in multiples
        do {
            if (post[end] === '0') {
                end--;
            }
        }while (post[end] === '0')
        post = post.substring(0, end + 1);
    }
    // the display unit
    const unit = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$boolean$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBoolean"])(withUnit) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$si$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SI"][__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$si$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SI_MID"]].text : withUnit;
    // format the units for display based on the flags
    const units = withSi || withSiFull ? si.value === '-' ? withUnit ? ` ${unit}` : '' : ` ${withSiFull ? `${si.text}${withUnit ? ' ' : ''}` : si.value}${withUnit ? unit : ''}` : '';
    const { decimal, thousand } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$getSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSeparator"])(locale);
    return `${sign}${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatDecimal$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatDecimal"])(pre, thousand)}${post && `${decimal}${post}`}${units}`;
}
const formatBalance = _formatBalance;
formatBalance.calcSi = (text, decimals = defaultDecimals)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$si$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["calcSi"])(text, decimals);
formatBalance.findSi = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$si$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["findSi"];
formatBalance.getDefaults = ()=>{
    return {
        decimals: defaultDecimals,
        unit: defaultUnit
    };
};
formatBalance.getOptions = (decimals = defaultDecimals)=>{
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$si$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SI"].filter(({ power })=>power < 0 ? decimals + power >= 0 : true);
};
formatBalance.setDefaults = ({ decimals, unit })=>{
    defaultDecimals = (Array.isArray(decimals) ? decimals[0] : decimals) ?? defaultDecimals;
    defaultUnit = (Array.isArray(unit) ? unit[0] : unit) ?? defaultUnit;
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$si$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SI"][__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$si$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SI_MID"]].text = defaultUnit;
};
}),
"[project]/node_modules/@polkadot/util/format/formatNumber.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "formatNumber",
    ()=>formatNumber
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatDecimal$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/format/formatDecimal.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$getSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/format/getSeparator.js [app-ssr] (ecmascript)");
;
;
;
function formatNumber(value, { locale = 'en' } = {}) {
    const { thousand } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$getSeparator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSeparator"])(locale);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatDecimal$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatDecimal"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(value).toString(), thousand);
}
}),
"[project]/node_modules/@polkadot/util/u8a/toNumber.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name u8aToNumber
 * @summary Creates a number from a Uint8Array object.
 */ __turbopack_context__.s([
    "u8aToNumber",
    ()=>u8aToNumber
]);
function u8aToNumber(value, { isLe = true, isNegative = false } = {}) {
    // slice + reverse is expensive, however SCALE is LE by default so this is the path
    // we are most interested in (the BE is added for the sake of being comprehensive)
    if (!isLe) {
        value = value.slice().reverse();
    }
    const count = value.length;
    // When the value is a i{8, 16, 24, 32, 40, 40} values and the top-most bit
    // indicates a signed value, we use a two's complement conversion. If one of these
    // flags are not set, we just do a normal unsigned conversion (the same shortcut
    // applies in both the u8aTo{BigInt, Bn} conversions as well)
    if (isNegative && count && value[count - 1] & 0x80) {
        switch(count){
            case 0:
                return 0;
            case 1:
                return (value[0] ^ 0x0000_00ff) * -1 - 1;
            case 2:
                return (value[0] + (value[1] << 8) ^ 0x0000_ffff) * -1 - 1;
            case 3:
                return (value[0] + (value[1] << 8) + (value[2] << 16) ^ 0x00ff_ffff) * -1 - 1;
            case 4:
                // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
                // 32-bit, in the case where the top-most bit is set this yields a negative value
                return (value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1_00_00_00 ^ 0xffff_ffff) * -1 - 1;
            case 5:
                return ((value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1_00_00_00 ^ 0xffff_ffff) + (value[4] ^ 0xff) * 0x1_00_00_00_00) * -1 - 1;
            case 6:
                return ((value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1_00_00_00 ^ 0xffff_ffff) + (value[4] + (value[5] << 8) ^ 0x0000_ffff) * 0x1_00_00_00_00) * -1 - 1;
            default:
                throw new Error('Value more than 48-bits cannot be reliably converted');
        }
    }
    switch(count){
        case 0:
            return 0;
        case 1:
            return value[0];
        case 2:
            return value[0] + (value[1] << 8);
        case 3:
            return value[0] + (value[1] << 8) + (value[2] << 16);
        case 4:
            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
            // 32-bit, in the case where the top-most bit is set this yields a negative value
            return value[0] + (value[1] << 8) + (value[2] << 16) + value[3] * 0x1_00_00_00;
        case 5:
            return value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8)) * 0x1_00_00_00;
        case 6:
            return value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] + (value[4] << 8) + (value[5] << 16)) * 0x1_00_00_00;
        default:
            throw new Error('Value more than 48-bits cannot be reliably converted');
    }
}
}),
"[project]/node_modules/@polkadot/util/is/ascii.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isAscii",
    ()=>isAscii
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
;
;
;
/** @internal */ function isAsciiStr(str) {
    for(let i = 0, count = str.length; i < count; i++){
        const b = str.charCodeAt(i);
        // check is inlined here, it is faster than making a call
        if (b < 32 || b > 126) {
            return false;
        }
    }
    return true;
}
/** @internal */ function isAsciiBytes(u8a) {
    for(let i = 0, count = u8a.length; i < count; i++){
        const b = u8a[i] | 0;
        // check is inlined here, it is faster than making a call
        if (b < 32 || b > 126) {
            return false;
        }
    }
    return true;
}
function isAscii(value) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) ? isAsciiBytes((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value)) : isAsciiStr(value) : value ? isAsciiBytes(value) : false;
}
}),
"[project]/node_modules/@polkadot/util/is/utf8.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isUtf8",
    ()=>isUtf8
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
;
;
function isUtf8(value) {
    if (!value) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value);
    }
    const u8a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
    const len = u8a.length;
    let i = 0;
    while(i < len){
        if (u8a[i] <= 0x7F) /* 00..7F */ {
            i += 1;
        } else if (u8a[i] >= 0xC2 && u8a[i] <= 0xDF) /* C2..DF 80..BF */ {
            if (i + 1 < len) /* Expect a 2nd byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte between C2 and DF, expecting a 2nd byte between 80 and BF";
                    // *faulty_bytes = 2;
                    return false;
                }
            } else {
                // *message = "After a first byte between C2 and DF, expecting a 2nd byte.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 2;
        } else if (u8a[i] === 0xE0) /* E0 A0..BF 80..BF */ {
            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {
                if (u8a[i + 1] < 0xA0 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte of E0, expecting a 2nd byte between A0 and BF.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte of E0, expecting a 3nd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
            } else {
                // *message = "After a first byte of E0, expecting two following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 3;
        } else if (u8a[i] >= 0xE1 && u8a[i] <= 0xEC) /* E1..EC 80..BF 80..BF */ {
            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte between E1 and EC, expecting the 2nd byte between 80 and BF.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte between E1 and EC, expecting the 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
            } else {
                // *message = "After a first byte between E1 and EC, expecting two following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 3;
        } else if (u8a[i] === 0xED) /* ED 80..9F 80..BF */ {
            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x9F) {
                    // *message = "After a first byte of ED, expecting 2nd byte between 80 and 9F.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte of ED, expecting 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
            } else {
                // *message = "After a first byte of ED, expecting two following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 3;
        } else if (u8a[i] >= 0xEE && u8a[i] <= 0xEF) /* EE..EF 80..BF 80..BF */ {
            if (i + 2 < len) /* Expect a 2nd and 3rd byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte between EE and EF, expecting 2nd byte between 80 and BF.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte between EE and EF, expecting 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
            } else {
                // *message = "After a first byte between EE and EF, two following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 3;
        } else if (u8a[i] === 0xF0) /* F0 90..BF 80..BF 80..BF */ {
            if (i + 3 < len) /* Expect a 2nd, 3rd 3th byte */ {
                if (u8a[i + 1] < 0x90 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte of F0, expecting 2nd byte between 90 and BF.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte of F0, expecting 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
                if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
                    // *message = "After a first byte of F0, expecting 4th byte between 80 and BF.";
                    // *faulty_bytes = 4;
                    return false;
                }
            } else {
                // *message = "After a first byte of F0, expecting three following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 4;
        } else if (u8a[i] >= 0xF1 && u8a[i] <= 0xF3) /* F1..F3 80..BF 80..BF 80..BF */ {
            if (i + 3 < len) /* Expect a 2nd, 3rd 3th byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0xBF) {
                    // *message = "After a first byte of F1, F2, or F3, expecting a 2nd byte between 80 and BF.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte of F1, F2, or F3, expecting a 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
                if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
                    // *message = "After a first byte of F1, F2, or F3, expecting a 4th byte between 80 and BF.";
                    // *faulty_bytes = 4;
                    return false;
                }
            } else {
                // *message = "After a first byte of F1, F2, or F3, expecting three following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 4;
        } else if (u8a[i] === 0xF4) /* F4 80..8F 80..BF 80..BF */ {
            if (i + 3 < len) /* Expect a 2nd, 3rd 3th byte */ {
                if (u8a[i + 1] < 0x80 || u8a[i + 1] > 0x8F) {
                    // *message = "After a first byte of F4, expecting 2nd byte between 80 and 8F.";
                    // *faulty_bytes = 2;
                    return false;
                }
                if (u8a[i + 2] < 0x80 || u8a[i + 2] > 0xBF) {
                    // *message = "After a first byte of F4, expecting 3rd byte between 80 and BF.";
                    // *faulty_bytes = 3;
                    return false;
                }
                if (u8a[i + 3] < 0x80 || u8a[i + 3] > 0xBF) {
                    // *message = "After a first byte of F4, expecting 4th byte between 80 and BF.";
                    // *faulty_bytes = 4;
                    return false;
                }
            } else {
                // *message = "After a first byte of F4, expecting three following bytes.";
                // *faulty_bytes = 1;
                return false;
            }
            i += 4;
        } else {
            // *message = "Expecting bytes in the following ranges: 00..7F C2..F4.";
            // *faulty_bytes = 1;
            return false;
        }
    }
    return true;
}
}),
"[project]/node_modules/@polkadot/util/compact/fromU8a.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "compactFromU8a",
    ()=>compactFromU8a,
    "compactFromU8aLim",
    ()=>compactFromU8aLim
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
;
;
function compactFromU8a(input) {
    const u8a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(input);
    // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster
    // than doing an additional call to u8aToBn (as with variable length)
    switch(u8a[0] & 0b11){
        case 0b00:
            return [
                1,
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](u8a[0] >>> 2)
            ];
        case 0b01:
            return [
                2,
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](u8a[0] + (u8a[1] << 8) >>> 2)
            ];
        case 0b10:
            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
            // 32-bit, in the case where the top-most bit is set this yields a negative value
            return [
                4,
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + u8a[3] * 0x1_00_00_00 >>> 2)
            ];
        // 0b11
        default:
            {
                // add 5 to shifted (4 for base length, 1 for this byte)
                const offset = (u8a[0] >>> 2) + 5;
                // we unroll the loop
                switch(offset){
                    // there still could be 4 bytes data, similar to 0b10 above (with offsets)
                    case 5:
                        // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
                        // 32-bit, in the case where the top-most bit is set this yields a negative value
                        return [
                            5,
                            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + u8a[4] * 0x1_00_00_00)
                        ];
                    case 6:
                        return [
                            6,
                            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8)) * 0x1_00_00_00)
                        ];
                    // 6 bytes data is the maximum, 48 bits (56 would overflow)
                    case 7:
                        return [
                            7,
                            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 0x1_00_00_00)
                        ];
                    // for anything else, use the non-unrolled version
                    default:
                        return [
                            offset,
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToBn"])(u8a.subarray(1, offset))
                        ];
                }
            }
    }
}
function compactFromU8aLim(u8a) {
    // The u8a is manually converted here for 1, 2 & 4 lengths, it is 2x faster
    // than doing an additional call to u8aToBn (as with variable length)
    switch(u8a[0] & 0b11){
        case 0b00:
            return [
                1,
                u8a[0] >>> 2
            ];
        case 0b01:
            return [
                2,
                u8a[0] + (u8a[1] << 8) >>> 2
            ];
        case 0b10:
            // for the 3rd byte, we don't << 24 - since JS converts all bitwise operators to
            // 32-bit, in the case where the top-most bit is set this yields a negative value
            return [
                4,
                u8a[0] + (u8a[1] << 8) + (u8a[2] << 16) + u8a[3] * 0x1_00_00_00 >>> 2
            ];
        // 0b11
        default:
            {
                // add 5 to shifted (4 for base length, 1 for this byte)
                // we unroll the loop
                switch((u8a[0] >>> 2) + 5){
                    // there still could be 4 bytes data, similar to 0b10 above (with offsets)
                    case 5:
                        return [
                            5,
                            u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + u8a[4] * 0x1_00_00_00
                        ];
                    case 6:
                        return [
                            6,
                            u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8)) * 0x1_00_00_00
                        ];
                    // 6 bytes data is the maximum, 48 bits (56 would overflow)
                    case 7:
                        return [
                            7,
                            u8a[1] + (u8a[2] << 8) + (u8a[3] << 16) + (u8a[4] + (u8a[5] << 8) + (u8a[6] << 16)) * 0x1_00_00_00
                        ];
                    // for anything else, we are above the actual MAX_SAFE_INTEGER - bail out
                    default:
                        throw new Error('Compact input is > Number.MAX_SAFE_INTEGER');
                }
            }
    }
}
}),
"[project]/node_modules/@polkadot/util/is/codec.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isCodec",
    ()=>isCodec
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/helpers.js [app-ssr] (ecmascript)");
;
const checkCodec = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isOnObject"])('toHex', 'toHuman', 'toU8a');
const checkRegistry = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isOnObject"])('get');
function isCodec(value) {
    return checkCodec(value) && checkRegistry(value.registry);
}
}),
"[project]/node_modules/@polkadot/util/compact/stripLength.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "compactStripLength",
    ()=>compactStripLength
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/fromU8a.js [app-ssr] (ecmascript)");
;
function compactStripLength(input) {
    const [offset, length] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactFromU8a"])(input);
    const total = offset + length.toNumber();
    return [
        total,
        input.subarray(offset, total)
    ];
}
}),
"[project]/node_modules/@polkadot/util/assert.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "assert",
    ()=>assert,
    "assertReturn",
    ()=>assertReturn,
    "assertUnreachable",
    ()=>assertUnreachable
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
;
function assert(condition, message) {
    if (!condition) {
        throw new Error((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(message) ? message() : message);
    }
}
function assertReturn(value, message) {
    assert(value !== undefined && value !== null, message);
    return value;
}
function assertUnreachable(x) {
    throw new Error(`This codepath should be unreachable. Unhandled input: ${x}`);
}
}),
"[project]/node_modules/@polkadot/util/lazy.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name lazyMethod
 * @description
 * Creates a lazy, on-demand getter for the specific value. Upon get the value will be evaluated.
 */ __turbopack_context__.s([
    "lazyMethod",
    ()=>lazyMethod,
    "lazyMethods",
    ()=>lazyMethods
]);
function lazyMethod(result, item, creator, getName, index = 0) {
    const name = getName ? getName(item, index) : item.toString();
    let value;
    Object.defineProperty(result, name, {
        // This allows for re-configuration with the embedded defineProperty below
        // and ensures that on tested browsers and Node, it _will_ be redefined
        // and thus short-circuited for future access
        configurable: true,
        enumerable: true,
        // Use a function here, we don't want to capture the outer this, i.e.
        // don't use arrow functions in this context since we have a this inside
        get: function() {
            // This check should _always_ be false and unneeded, since we override
            // with a value below ... however we ensure we are quire vigilant against
            // all environment failures, so we are rather be safe than sorry
            if (value === undefined) {
                value = creator(item, index, this);
                try {
                    // re-define the property as a value, next time around this
                    // getter will only return the computed value
                    Object.defineProperty(this, name, {
                        value
                    });
                } catch  {
                // ignore any errors, since this _should_ not happen due to
                // the "configurable" property above. But if it ever does
                // from here-on we will be the cached value the next time
                // around (with a very slight dip in performance)
                }
            }
            return value;
        }
    });
}
function lazyMethods(result, items, creator, getName) {
    for(let i = 0, count = items.length; i < count; i++){
        lazyMethod(result, items[i], creator, getName, i);
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/util/float/toU8a.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name floatToU8a
 * @description Converts a float into a U8a representation (While we don't use BE in SCALE
 * we still allow for either representation, although, as elsewhere, isLe is default)
 */ __turbopack_context__.s([
    "floatToU8a",
    ()=>floatToU8a
]);
function floatToU8a(value = 0.0, { bitLength = 32, isLe = true } = {}) {
    if (bitLength !== 32 && bitLength !== 64) {
        throw new Error('Invalid bitLength provided, expected 32 or 64');
    }
    const result = new Uint8Array(bitLength / 8);
    const dv = new DataView(result.buffer, result.byteOffset);
    if (bitLength === 32) {
        dv.setFloat32(0, Number(value), isLe);
    } else {
        dv.setFloat64(0, Number(value), isLe);
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/util/u8a/toFloat.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name u8aToFloat
 * @description Converts a Uint8Array value into the float (either 32 or 64-bit)
 * representation.
 */ __turbopack_context__.s([
    "u8aToFloat",
    ()=>u8aToFloat
]);
function u8aToFloat(value, { bitLength = 32, isLe = true } = {}) {
    if (bitLength !== 32 && bitLength !== 64) {
        throw new Error('Invalid bitLength provided, expected 32 or 64');
    } else if (value.length < bitLength / 8) {
        throw new Error(`Invalid input buffer provided, expected at least ${bitLength / 8} bytes, found ${value.length}`);
    }
    const dv = new DataView(value.buffer, value.byteOffset);
    return bitLength === 32 ? dv.getFloat32(0, isLe) : dv.getFloat64(0, isLe);
}
}),
"[project]/node_modules/@polkadot/util/memoize.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "memoize",
    ()=>memoize
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
;
function defaultGetId() {
    return 'none';
}
function memoize(fn, { getInstanceId = defaultGetId } = {}) {
    const cache = {};
    const memoized = (...args)=>{
        const stringParams = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(args);
        const instanceId = getInstanceId();
        if (!cache[instanceId]) {
            cache[instanceId] = {};
        }
        if (cache[instanceId][stringParams] === undefined) {
            cache[instanceId][stringParams] = fn(...args);
        }
        return cache[instanceId][stringParams];
    };
    memoized.unmemoize = (...args)=>{
        const stringParams = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(args);
        const instanceId = getInstanceId();
        if (cache[instanceId]?.[stringParams] !== undefined) {
            delete cache[instanceId][stringParams];
        }
    };
    return memoized;
}
}),
"[project]/node_modules/@polkadot/util/nextTick.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name nextTick
 * @description Defer the operation to the queue for evaluation on the next tick
 */ __turbopack_context__.s([
    "nextTick",
    ()=>nextTick
]);
function nextTick(onExec, onError) {
    // While Promise.resolve().then(...) would defer to the nextTick, this
    // actually does not play as nicely in browsers like the setTimeout(...)
    // approach. So the safer, though less optimal approach is the one taken here
    setTimeout(()=>{
        Promise.resolve().then(()=>{
            onExec();
        }).catch((error)=>{
            if (onError) {
                onError(error);
            } else {
                console.error(error);
            }
        });
    }, 0);
}
}),
"[project]/node_modules/@polkadot/util/bi/helpers.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/** @internal */ __turbopack_context__.s([
    "createCmp",
    ()=>createCmp
]);
function createCmp(cmp) {
    return (...items)=>{
        const count = items.length;
        if (count === 0) {
            throw new Error('Must provide one or more arguments');
        }
        let result = items[0];
        for(let i = 1; i < count; i++){
            if (cmp(items[i], result)) {
                result = items[i];
            }
        }
        return result;
    };
}
}),
"[project]/node_modules/@polkadot/util/bn/min.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "bnMax",
    ()=>bnMax,
    "bnMin",
    ()=>bnMin
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bi/helpers.js [app-ssr] (ecmascript)");
;
const bnMax = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createCmp"])((a, b)=>a.gt(b));
const bnMin = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bi$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createCmp"])((a, b)=>a.lt(b));
}),
"[project]/node_modules/@polkadot/util/is/compact.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isCompact",
    ()=>isCompact
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/helpers.js [app-ssr] (ecmascript)");
;
const isCompact = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$helpers$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isOnObject"])('toBigInt', 'toBn', 'toNumber', 'unwrap');
}),
"[project]/node_modules/@polkadot/util/array/flatten.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name arrayFlatten
 * @summary Merge T[][] into T[]
 * @description
 * Returns a new array with all arrays merged into one
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayFlatten } from '@polkadot/util';
 *
 * arrayFlatten([[1, 2], [3, 4], [5]]); // [1, 2, 3, 4, 5]
 * ```
 */ __turbopack_context__.s([
    "arrayFlatten",
    ()=>arrayFlatten
]);
function arrayFlatten(arrays) {
    const num = arrays.length;
    // shortcuts for the empty & single-entry case
    if (num === 0) {
        return [];
    } else if (num === 1) {
        return arrays[0];
    }
    // pre-allocate based on the combined size
    let size = 0;
    for(let i = 0; i < num; i++){
        size += arrays[i].length;
    }
    const output = new Array(size);
    let i = -1;
    for(let j = 0; j < num; j++){
        const a = arrays[j];
        // instead of pushing, we just set the entries
        for(let e = 0, count = a.length; e < count; e++){
            output[++i] = a[e];
        }
    }
    return output;
}
}),
"[project]/node_modules/@polkadot/util/string/toHex.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "stringToHex",
    ()=>stringToHex
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/toU8a.js [app-ssr] (ecmascript)");
;
;
function stringToHex(value) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringToU8a"])(value));
}
}),
"[project]/node_modules/@polkadot/util/bn/sqrt.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "bnSqrt",
    ()=>bnSqrt
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/consts.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toBn.js [app-ssr] (ecmascript)");
;
;
;
function bnSqrt(value) {
    const n = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(value);
    if (n.isNeg()) {
        throw new Error('square root of negative numbers is not supported');
    }
    // https://stackoverflow.com/questions/53683995/javascript-big-integer-square-root/
    // shortcut <= 2^53 - 1 to use the JS utils
    if (n.lte(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_MAX_INTEGER"])) {
        // ~~ More performant version of Math.floor
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](~~Math.sqrt(n.toNumber()));
    }
    // Use sqrt(MAX_SAFE_INTEGER) as starting point. since we already know the
    // output will be larger than this, we expect this to be a safe start
    let x0 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_SQRT_MAX_INTEGER"].clone();
    while(true){
        const x1 = n.div(x0).iadd(x0).ishrn(1);
        if (x0.eq(x1) || x0.eq(x1.sub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_ONE"]))) {
            return x0;
        }
        x0 = x1;
    }
}
}),
"[project]/node_modules/@polkadot/util/array/chunk.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name arrayChunk
 * @summary Split T[] into T[][] based on the defind size
 * @description
 * Returns a set ao arrays based on the chunksize
 * @example
 * <BR>
 *
 * ```javascript
 * import { arrayChunk } from '@polkadot/util';
 *
 * arrayChunk([1, 2, 3, 4, 5]); // [[1, 2], [3, 4], [5]]
 * ```
 */ __turbopack_context__.s([
    "arrayChunk",
    ()=>arrayChunk
]);
function arrayChunk(array, chunkSize) {
    const outputSize = Math.ceil(array.length / chunkSize);
    // shortcut for the single-split case
    if (outputSize === 1) {
        return [
            array
        ];
    }
    const output = Array(outputSize);
    for(let i = 0; i < outputSize; i++){
        const offset = i * chunkSize;
        output[i] = array.slice(offset, offset + chunkSize);
    }
    return output;
}
}),
"[project]/node_modules/@polkadot/util/string/lowerFirst.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "stringLowerFirst",
    ()=>stringLowerFirst,
    "stringUpperFirst",
    ()=>stringUpperFirst
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
;
/** @internal */ function converter(map) {
    return (value)=>value ? map[value.charCodeAt(0)] + value.slice(1) : '';
}
const stringLowerFirst = /*#__PURE__*/ converter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CC_TO_LO"]);
const stringUpperFirst = /*#__PURE__*/ converter(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CC_TO_UP"]);
}),
"[project]/node_modules/@polkadot/util/object/clear.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name objectClear
 * @summary Removes all the keys from the input object
 */ __turbopack_context__.s([
    "objectClear",
    ()=>objectClear
]);
function objectClear(value) {
    const keys = Object.keys(value);
    for(let i = 0, count = keys.length; i < count; i++){
        delete value[keys[i]];
    }
    return value;
}
}),
];

//# sourceMappingURL=node_modules_%40polkadot_util_5186c0fc._.js.map