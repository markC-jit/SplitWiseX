module.exports = [
"[project]/node_modules/@polkadot/rpc-core/packageInfo.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "packageInfo",
    ()=>packageInfo
]);
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_context__.P("node_modules/@polkadot/rpc-core/packageInfo.js")}`;
    }
};
const packageInfo = {
    name: '@polkadot/rpc-core',
    path: __TURBOPACK__import$2e$meta__ && __TURBOPACK__import$2e$meta__.url ? new URL(__TURBOPACK__import$2e$meta__.url).pathname.substring(0, new URL(__TURBOPACK__import$2e$meta__.url).pathname.lastIndexOf('/') + 1) : 'auto',
    type: 'esm',
    version: '16.4.8'
};
}),
"[project]/node_modules/@polkadot/rpc-core/util/refCountDelay.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "refCountDelay",
    ()=>refCountDelay
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/rxjs/dist/cjs/index.js [app-ssr] (ecmascript)");
;
function refCountDelay(delay = 1750) {
    return (source)=>{
        // state: 0 = disconnected, 1 = disconnecting, 2 = connecting, 3 = connected
        let [state, refCount, connection, scheduler] = [
            0,
            0,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Subscription"].EMPTY,
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Subscription"].EMPTY
        ];
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Observable"]((ob)=>{
            source.subscribe(ob);
            if (refCount++ === 0) {
                if (state === 1) {
                    scheduler.unsubscribe();
                } else {
                    // eslint-disable-next-line deprecation/deprecation
                    connection = source.connect();
                }
                state = 3;
            }
            return ()=>{
                if (--refCount === 0) {
                    if (state === 2) {
                        state = 0;
                        scheduler.unsubscribe();
                    } else {
                        // state === 3
                        state = 1;
                        scheduler = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["asapScheduler"].schedule(()=>{
                            state = 0;
                            connection.unsubscribe();
                        }, delay);
                    }
                }
            };
        });
    };
}
}),
"[project]/node_modules/@polkadot/rpc-core/util/drr.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "drr",
    ()=>drr
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/rxjs/dist/cjs/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$refCountDelay$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-core/util/refCountDelay.js [app-ssr] (ecmascript)");
;
;
;
function CMP(a, b) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])({
        t: a
    }) === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])({
        t: b
    });
}
function ERR(error) {
    throw error;
}
function NOOP() {
// empty
}
function drr({ delay, skipChange = false, skipTimeout = false } = {}) {
    return (source$)=>source$.pipe((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["catchError"])(ERR), skipChange ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tap"])(NOOP) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["distinctUntilChanged"])(CMP), // eslint-disable-next-line deprecation/deprecation
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["publishReplay"])(1), skipTimeout ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["refCount"])() : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$refCountDelay$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["refCountDelay"])(delay));
}
}),
"[project]/node_modules/@polkadot/rpc-core/util/memo.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "memo",
    ()=>memo
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/rxjs/dist/cjs/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/memoize.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$drr$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-core/util/drr.js [app-ssr] (ecmascript)");
;
;
;
function memo(instanceId, inner) {
    const options = {
        getInstanceId: ()=>instanceId
    };
    const cached = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["memoize"])((...params)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Observable"]((observer)=>{
            const subscription = inner(...params).subscribe(observer);
            return ()=>{
                cached.unmemoize(...params);
                subscription.unsubscribe();
            };
        }).pipe((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$drr$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["drr"])()), options);
    return cached;
}
}),
"[project]/node_modules/@polkadot/rpc-core/bundle.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "RpcCore",
    ()=>RpcCore
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/rxjs/dist/cjs/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-provider/lru.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$jsonrpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__rpcDefinitions$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types/interfaces/jsonrpc.js [app-ssr] (ecmascript) <export default as rpcDefinitions>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/null.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/lazy.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/memoize.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$drr$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-core/util/drr.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$refCountDelay$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-core/util/refCountDelay.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["logger"])('rpc-core');
const EMPTY_META = {
    fallback: undefined,
    modifier: {
        isOptional: true
    },
    type: {
        asMap: {
            linked: {
                isTrue: false
            }
        },
        isMap: false
    }
};
const RPC_CORE_DEFAULT_CAPACITY = 1024 * 10 * 10;
/** @internal */ function logErrorMessage(method, { noErrorLog, params, type }, error) {
    if (noErrorLog) {
        return;
    }
    l.error(`${method}(${params.map(({ isOptional, name, type })=>`${name}${isOptional ? '?' : ''}: ${type}`).join(', ')}): ${type}:: ${error.message}`);
}
function isTreatAsHex(key) {
    // :code is problematic - it does not have the length attached, which is
    // unlike all other storage entries where it is indeed properly encoded
    return [
        '0x3a636f6465'
    ].includes(key.toHex());
}
class RpcCore {
    #instanceId;
    #isPedantic;
    #registryDefault;
    #storageCache;
    #storageCacheHits = 0;
    #getBlockRegistry;
    #getBlockHash;
    mapping = new Map();
    provider;
    sections = [];
    /**
     * @constructor
     * Default constructor for the core RPC handler
     * @param {Registry} registry Type Registry
     * @param {ProviderInterface} options.provider An API provider using any of the supported providers (HTTP, SC or WebSocket)
     * @param {number} [options.rpcCacheCapacity] Custom size of the rpc LRUCache capacity. Defaults to `RPC_CORE_DEFAULT_CAPACITY` (1024 * 10 * 10)
     */ constructor(instanceId, registry, { isPedantic = true, provider, rpcCacheCapacity, ttl, userRpc = {} }){
        if (!provider || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(provider.send)) {
            throw new Error('Expected Provider to API create');
        }
        this.#instanceId = instanceId;
        this.#isPedantic = isPedantic;
        this.#registryDefault = registry;
        this.provider = provider;
        const sectionNames = Object.keys(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$jsonrpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__rpcDefinitions$3e$__["rpcDefinitions"]);
        // these are the base keys (i.e. part of jsonrpc)
        this.sections.push(...sectionNames);
        this.#storageCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LRUCache"](rpcCacheCapacity || RPC_CORE_DEFAULT_CAPACITY, ttl);
        // decorate all interfaces, defined and user on this instance
        this.addUserInterfaces(userRpc);
    }
    /**
     * @description Returns the connected status of a provider
     */ get isConnected() {
        return this.provider.isConnected;
    }
    /**
     * @description Manually connect from the attached provider
     */ connect() {
        return this.provider.connect();
    }
    /**
     * @description Manually disconnect from the attached provider
     */ async disconnect() {
        return this.provider.disconnect();
    }
    /**
     * @description Returns the underlying core stats, including those from teh provider
     */ get stats() {
        const stats = this.provider.stats;
        return stats ? {
            ...stats,
            core: {
                cacheHits: this.#storageCacheHits,
                cacheSize: this.#storageCache.length
            }
        } : undefined;
    }
    /**
     * @description Sets a registry swap (typically from Api)
     */ setRegistrySwap(registrySwap) {
        this.#getBlockRegistry = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["memoize"])(registrySwap, {
            getInstanceId: ()=>this.#instanceId
        });
    }
    /**
     * @description Sets a function to resolve block hash from block number
     */ setResolveBlockHash(resolveBlockHash) {
        this.#getBlockHash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["memoize"])(resolveBlockHash, {
            getInstanceId: ()=>this.#instanceId
        });
    }
    addUserInterfaces(userRpc) {
        // add any extra user-defined sections
        this.sections.push(...Object.keys(userRpc).filter((k)=>!this.sections.includes(k)));
        for(let s = 0, scount = this.sections.length; s < scount; s++){
            const section = this.sections[s];
            const defs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2f$interfaces$2f$jsonrpc$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__rpcDefinitions$3e$__["rpcDefinitions"][section], userRpc[section]);
            const methods = Object.keys(defs);
            for(let m = 0, mcount = methods.length; m < mcount; m++){
                const method = methods[m];
                const def = defs[method];
                const jsonrpc = def.endpoint || `${section}_${method}`;
                if (!this.mapping.has(jsonrpc)) {
                    const isSubscription = !!def.pubsub;
                    if (!this[section]) {
                        this[section] = {};
                    }
                    this.mapping.set(jsonrpc, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, def, {
                        isSubscription,
                        jsonrpc,
                        method,
                        section
                    }));
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$lazy$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lazyMethod"])(this[section], method, ()=>isSubscription ? this._createMethodSubscribe(section, method, def) : this._createMethodSend(section, method, def));
                }
            }
        }
    }
    _memomize(creator, def) {
        const memoOpts = {
            getInstanceId: ()=>this.#instanceId
        };
        const memoized = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["memoize"])(creator(true), memoOpts);
        memoized.raw = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$memoize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["memoize"])(creator(false), memoOpts);
        memoized.meta = def;
        return memoized;
    }
    _formatResult(isScale, registry, blockHash, method, def, params, result) {
        return isScale ? this._formatOutput(registry, blockHash, method, def, params, result) : result;
    }
    _createMethodSend(section, method, def) {
        const rpcName = def.endpoint || `${section}_${method}`;
        const hashIndex = def.params.findIndex(({ isHistoric })=>isHistoric);
        let memoized = null;
        // execute the RPC call, doing a registry swap for historic as applicable
        const callWithRegistry = async (isScale, values)=>{
            const blockId = hashIndex === -1 ? null : values[hashIndex];
            const blockHash = blockId && def.params[hashIndex].type === 'BlockNumber' ? await this.#getBlockHash?.(blockId) : blockId;
            const { registry } = isScale && blockHash && this.#getBlockRegistry ? await this.#getBlockRegistry((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(blockHash)) : {
                registry: this.#registryDefault
            };
            const params = this._formatParams(registry, null, def, values);
            // only cache .at(<blockHash>) queries, e.g. where valid blockHash was supplied
            const result = await this.provider.send(rpcName, params.map((p)=>p.toJSON()), !!blockHash);
            return this._formatResult(isScale, registry, blockHash, method, def, params, result);
        };
        const creator = (isScale)=>(...values)=>{
                const isDelayed = isScale && hashIndex !== -1 && !!values[hashIndex];
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Observable"]((observer)=>{
                    callWithRegistry(isScale, values).then((value)=>{
                        observer.next(value);
                        observer.complete();
                    }).catch((error)=>{
                        logErrorMessage(method, def, error);
                        observer.error(error);
                        observer.complete();
                    });
                    return ()=>{
                        // delete old results from cache
                        if (isScale) {
                            memoized?.unmemoize(...values);
                        } else {
                            memoized?.raw.unmemoize(...values);
                        }
                    };
                }).pipe(// eslint-disable-next-line deprecation/deprecation
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["publishReplay"])(1), isDelayed ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$refCountDelay$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["refCountDelay"])() // Unsubscribe after delay
                 : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["refCount"])());
            };
        memoized = this._memomize(creator, def);
        return memoized;
    }
    // create a subscriptor, it subscribes once and resolves with the id as subscribe
    _createSubscriber({ paramsJson, subName, subType, update }, errorHandler) {
        return new Promise((resolve, reject)=>{
            this.provider.subscribe(subType, subName, paramsJson, update).then(resolve).catch((error)=>{
                errorHandler(error);
                reject(error);
            });
        });
    }
    _createMethodSubscribe(section, method, def) {
        const [updateType, subMethod, unsubMethod] = def.pubsub;
        const subName = `${section}_${subMethod}`;
        const unsubName = `${section}_${unsubMethod}`;
        const subType = `${section}_${updateType}`;
        let memoized = null;
        const creator = (isScale)=>(...values)=>{
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$rxjs$2f$dist$2f$cjs$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Observable"]((observer)=>{
                    // Have at least an empty promise, as used in the unsubscribe
                    let subscriptionPromise = Promise.resolve(null);
                    const registry = this.#registryDefault;
                    const errorHandler = (error)=>{
                        logErrorMessage(method, def, error);
                        observer.error(error);
                    };
                    try {
                        const params = this._formatParams(registry, null, def, values);
                        const update = (error, result)=>{
                            if (error) {
                                logErrorMessage(method, def, error);
                                return;
                            }
                            try {
                                observer.next(this._formatResult(isScale, registry, null, method, def, params, result));
                            } catch (error) {
                                observer.error(error);
                            }
                        };
                        subscriptionPromise = this._createSubscriber({
                            paramsJson: params.map((p)=>p.toJSON()),
                            subName,
                            subType,
                            update
                        }, errorHandler);
                    } catch (error) {
                        errorHandler(error);
                    }
                    // Teardown logic
                    return ()=>{
                        // Delete from cache, so old results don't hang around
                        if (isScale) {
                            memoized?.unmemoize(...values);
                        } else {
                            memoized?.raw.unmemoize(...values);
                        }
                        // Unsubscribe from provider
                        subscriptionPromise.then((subscriptionId)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNull"])(subscriptionId) ? Promise.resolve(false) : this.provider.unsubscribe(subType, unsubName, subscriptionId)).catch((error)=>logErrorMessage(method, def, error));
                    };
                }).pipe((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$core$2f$util$2f$drr$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["drr"])());
            };
        memoized = this._memomize(creator, def);
        return memoized;
    }
    _formatParams(registry, blockHash, def, inputs) {
        const count = inputs.length;
        const reqCount = def.params.filter(({ isOptional })=>!isOptional).length;
        if (count < reqCount || count > def.params.length) {
            throw new Error(`Expected ${def.params.length} parameters${reqCount === def.params.length ? '' : ` (${def.params.length - reqCount} optional)`}, ${count} found instead`);
        }
        const params = new Array(count);
        for(let i = 0; i < count; i++){
            params[i] = registry.createTypeUnsafe(def.params[i].type, [
                inputs[i]
            ], {
                blockHash
            });
        }
        return params;
    }
    _formatOutput(registry, blockHash, method, rpc, params, result) {
        if (rpc.type === 'StorageData') {
            const key = params[0];
            return this._formatStorageData(registry, blockHash, key, result);
        } else if (rpc.type === 'StorageChangeSet') {
            const keys = params[0];
            return keys ? this._formatStorageSet(registry, result.block, keys, result.changes) : registry.createType('StorageChangeSet', result);
        } else if (rpc.type === 'Vec<StorageChangeSet>') {
            const jsonSet = result;
            const count = jsonSet.length;
            const mapped = new Array(count);
            for(let i = 0; i < count; i++){
                const { block, changes } = jsonSet[i];
                mapped[i] = [
                    registry.createType('BlockHash', block),
                    this._formatStorageSet(registry, block, params[0], changes)
                ];
            }
            // we only query at a specific block, not a range - flatten
            return method === 'queryStorageAt' ? mapped[0][1] : mapped;
        }
        return registry.createTypeUnsafe(rpc.type, [
            result
        ], {
            blockHash
        });
    }
    _formatStorageData(registry, blockHash, key, value) {
        const isEmpty = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNull"])(value);
        // we convert to Uint8Array since it maps to the raw encoding, all
        // data will be correctly encoded (incl. numbers, excl. :code)
        const input = isEmpty ? null : isTreatAsHex(key) ? value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
        return this._newType(registry, blockHash, key, input, isEmpty);
    }
    _formatStorageSet(registry, blockHash, keys, changes) {
        // For StorageChangeSet, the changes has the [key, value] mappings
        const count = keys.length;
        const withCache = count !== 1;
        const values = new Array(count);
        // multiple return values (via state.storage subscription), decode the
        // values one at a time, all based on the supplied query types
        for(let i = 0; i < count; i++){
            values[i] = this._formatStorageSetEntry(registry, blockHash, keys[i], changes, withCache, i);
        }
        return values;
    }
    _formatStorageSetEntry(registry, blockHash, key, changes, withCache, entryIndex) {
        const hexKey = key.toHex();
        const found = changes.find(([key])=>key === hexKey);
        const isNotFound = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(found);
        // if we don't find the value, this is our fallback
        //   - in the case of an array of values, fill the hole from the cache
        //   - if a single result value, don't fill - it is not an update hole
        //   - fallback to an empty option in all cases
        if (isNotFound && withCache) {
            const cached = this.#storageCache.get(hexKey);
            if (cached) {
                this.#storageCacheHits++;
                return cached;
            }
        }
        const value = isNotFound ? null : found[1];
        const isEmpty = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNull"])(value);
        const input = isEmpty || isTreatAsHex(key) ? value : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
        const codec = this._newType(registry, blockHash, key, input, isEmpty, entryIndex);
        this._setToCache(hexKey, codec);
        return codec;
    }
    _setToCache(key, value) {
        this.#storageCache.set(key, value);
    }
    _newType(registry, blockHash, key, input, isEmpty, entryIndex = -1) {
        // single return value (via state.getStorage), decode the value based on the
        // outputType that we have specified. Fallback to Raw on nothing
        const type = key.outputType || 'Raw';
        const meta = key.meta || EMPTY_META;
        const entryNum = entryIndex === -1 ? '' : ` entry ${entryIndex}:`;
        try {
            return registry.createTypeUnsafe(type, [
                isEmpty ? meta.fallback ? type.includes('Linkage<') ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(meta.fallback.toHex()), new Uint8Array(2)) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(meta.fallback.toHex()) : undefined : meta.modifier.isOptional ? registry.createTypeUnsafe(type, [
                    input
                ], {
                    blockHash,
                    isPedantic: this.#isPedantic
                }) : input
            ], {
                blockHash,
                isFallback: isEmpty && !!meta.fallback,
                isOptional: meta.modifier.isOptional,
                isPedantic: this.#isPedantic && !meta.modifier.isOptional
            });
        } catch (error) {
            throw new Error(`Unable to decode storage ${key.section || 'unknown'}.${key.method || 'unknown'}:${entryNum}: ${error.message}`);
        }
    }
}
}),
"[project]/node_modules/@polkadot/rpc-provider/packageInfo.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "packageInfo",
    ()=>packageInfo
]);
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_context__.P("node_modules/@polkadot/rpc-provider/packageInfo.js")}`;
    }
};
const packageInfo = {
    name: '@polkadot/rpc-provider',
    path: __TURBOPACK__import$2e$meta__ && __TURBOPACK__import$2e$meta__.url ? new URL(__TURBOPACK__import$2e$meta__.url).pathname.substring(0, new URL(__TURBOPACK__import$2e$meta__.url).pathname.lastIndexOf('/') + 1) : 'auto',
    type: 'esm',
    version: '16.4.8'
};
}),
"[project]/node_modules/@polkadot/rpc-provider/coder/error.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>RpcError
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
;
const UNKNOWN = -99999;
function extend(that, name, value) {
    Object.defineProperty(that, name, {
        configurable: true,
        enumerable: false,
        value
    });
}
class RpcError extends Error {
    code;
    data;
    message;
    name;
    stack;
    constructor(message = '', code = UNKNOWN, data){
        super();
        extend(this, 'message', String(message));
        extend(this, 'name', this.constructor.name);
        extend(this, 'data', data);
        extend(this, 'code', code);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(Error.captureStackTrace)) {
            Error.captureStackTrace(this, this.constructor);
        } else {
            const { stack } = new Error(message);
            stack && extend(this, 'stack', stack);
        }
    }
    static CODES = {
        ASSERT: -90009,
        INVALID_JSONRPC: -99998,
        METHOD_NOT_FOUND: -32601,
        UNKNOWN
    };
}
}),
"[project]/node_modules/@polkadot/rpc-provider/coder/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "RpcCoder",
    ()=>RpcCoder
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$error$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-provider/coder/error.js [app-ssr] (ecmascript)");
;
;
function formatErrorData(data) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(data)) {
        return '';
    }
    const formatted = `: ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(data) ? data.replace(/Error\("/g, '').replace(/\("/g, '(').replace(/"\)/g, ')').replace(/\(/g, ', ').replace(/\)/g, '') : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(data)}`;
    // We need some sort of cut-off here since these can be very large and
    // very nested, pick a number and trim the result display to it
    return formatted.length <= 256 ? formatted : `${formatted.substring(0, 255)}…`;
}
function checkError(error) {
    if (error) {
        const { code, data, message } = error;
        throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$error$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"](`${code}: ${message}${formatErrorData(data)}`, code, data);
    }
}
class RpcCoder {
    #id = 0;
    decodeResponse(response) {
        if (!response || response.jsonrpc !== '2.0') {
            throw new Error('Invalid jsonrpc field in decoded object');
        }
        const isSubscription = !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(response.params) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(response.method);
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(response.id) && (!isSubscription || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(response.params.subscription) && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(response.params.subscription))) {
            throw new Error('Invalid id field in decoded object');
        }
        checkError(response.error);
        if (response.result === undefined && !isSubscription) {
            throw new Error('No result found in jsonrpc response');
        }
        if (isSubscription) {
            checkError(response.params.error);
            return response.params.result;
        }
        return response.result;
    }
    encodeJson(method, params) {
        const [id, data] = this.encodeObject(method, params);
        return [
            id,
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(data)
        ];
    }
    encodeObject(method, params) {
        const id = ++this.#id;
        return [
            id,
            {
                id,
                jsonrpc: '2.0',
                method,
                params
            }
        ];
    }
}
}),
"[project]/node_modules/@polkadot/rpc-provider/defaults.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const HTTP_URL = 'http://127.0.0.1:9933';
const WS_URL = 'ws://127.0.0.1:9944';
const __TURBOPACK__default__export__ = {
    HTTP_URL,
    WS_URL
};
}),
"[project]/node_modules/@polkadot/rpc-provider/lru.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "DEFAULT_CAPACITY",
    ()=>DEFAULT_CAPACITY,
    "DEFAULT_TTL",
    ()=>DEFAULT_TTL,
    "LRUCache",
    ()=>LRUCache
]);
const DEFAULT_CAPACITY = 1024;
const DEFAULT_TTL = 30000; // 30 seconds
const MAX_TTL = 1800_000; // 30 minutes
const DISABLED_TTL = 31_536_000_000;
class LRUNode {
    key;
    #expires;
    #ttl;
    createdAt;
    next;
    prev;
    constructor(key, ttl){
        this.key = key;
        this.#ttl = ttl;
        this.#expires = Date.now() + ttl;
        this.createdAt = Date.now();
        this.next = this.prev = this;
    }
    refresh() {
        this.#expires = Date.now() + this.#ttl;
    }
    get expiry() {
        return this.#expires;
    }
}
class LRUCache {
    capacity;
    #data = new Map();
    #refs = new Map();
    #length = 0;
    #head;
    #tail;
    #ttl;
    constructor(capacity = DEFAULT_CAPACITY, ttl = DEFAULT_TTL){
        // Validate capacity
        if (!Number.isInteger(capacity) || capacity < 0) {
            throw new Error(`LRUCache initialization error: 'capacity' must be a non-negative integer. Received: ${capacity}`);
        }
        // Validate ttl
        if (ttl !== null && (!Number.isFinite(ttl) || ttl < 0 || ttl > MAX_TTL)) {
            throw new Error(`LRUCache initialization error: 'ttl' must be between 0 and ${MAX_TTL} ms or null to disable. Received: ${ttl}`);
        }
        this.capacity = capacity;
        ttl ? this.#ttl = ttl : this.#ttl = DISABLED_TTL;
        this.#head = this.#tail = new LRUNode('<empty>', this.#ttl);
    }
    get ttl() {
        return this.#ttl;
    }
    get length() {
        return this.#length;
    }
    get lengthData() {
        return this.#data.size;
    }
    get lengthRefs() {
        return this.#refs.size;
    }
    entries() {
        const keys = this.keys();
        const count = keys.length;
        const entries = new Array(count);
        for(let i = 0; i < count; i++){
            const key = keys[i];
            entries[i] = [
                key,
                this.#data.get(key)
            ];
        }
        return entries;
    }
    keys() {
        const keys = [];
        if (this.#length) {
            let curr = this.#head;
            while(curr !== this.#tail){
                keys.push(curr.key);
                curr = curr.next;
            }
            keys.push(curr.key);
        }
        return keys;
    }
    get(key) {
        const data = this.#data.get(key);
        if (data) {
            this.#toHead(key);
            // Evict TTL once data is refreshed
            this.#evictTTL();
            return data;
        }
        this.#evictTTL();
        return null;
    }
    set(key, value) {
        if (this.#data.has(key)) {
            this.#toHead(key);
        } else {
            const node = new LRUNode(key, this.#ttl);
            this.#refs.set(node.key, node);
            if (this.length === 0) {
                this.#head = this.#tail = node;
            } else {
                this.#head.prev = node;
                node.next = this.#head;
                this.#head = node;
            }
            if (this.#length === this.capacity) {
                this.#data.delete(this.#tail.key);
                this.#refs.delete(this.#tail.key);
                this.#tail = this.#tail.prev;
                this.#tail.next = this.#head;
            } else {
                this.#length += 1;
            }
        }
        // Evict TTL once data is refreshed or added
        this.#evictTTL();
        this.#data.set(key, value);
    }
    #evictTTL() {
        // Find last node to keep
        // traverse map to find the expired nodes
        while(this.#tail.expiry && this.#tail.expiry < Date.now() && this.#length > 0){
            this.#refs.delete(this.#tail.key);
            this.#data.delete(this.#tail.key);
            this.#length -= 1;
            this.#tail = this.#tail.prev;
            this.#tail.next = this.#head;
        }
        if (this.#length === 0) {
            this.#head = this.#tail = new LRUNode('<empty>', this.#ttl);
        }
    }
    #toHead(key) {
        const ref = this.#refs.get(key);
        if (ref && ref !== this.#head) {
            ref.refresh();
            ref.prev.next = ref.next;
            ref.next.prev = ref.prev;
            ref.next = this.#head;
            this.#head.prev = ref;
            this.#head = ref;
        }
    }
}
}),
"[project]/node_modules/@polkadot/rpc-provider/http/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "HttpProvider",
    ()=>HttpProvider
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/noop.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$fetch$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-fetch/node.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-provider/coder/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-provider/defaults.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-provider/lru.js [app-ssr] (ecmascript)");
;
;
;
;
;
const ERROR_SUBSCRIBE = 'HTTP Provider does not have subscriptions, use WebSockets instead';
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["logger"])('api-http');
class HttpProvider {
    #callCache;
    #cacheCapacity;
    #coder;
    #endpoint;
    #headers;
    #stats;
    #ttl;
    /**
     * @param {string} endpoint The endpoint url starting with http://
     * @param {Record<string, string>} headers The headers provided to the underlying Http Endpoint
     * @param {number} [cacheCapacity] Custom size of the HttpProvider LRUCache. Defaults to `DEFAULT_CAPACITY` (1024)
     * @param {number} [cacheTtl] Custom TTL of the HttpProvider LRUCache. Determines how long an object can live in the cache. Defaults to `DEFAULT_TTL` (30000)
     */ constructor(endpoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].HTTP_URL, headers = {}, cacheCapacity, cacheTtl){
        if (!/^(https|http):\/\//.test(endpoint)) {
            throw new Error(`Endpoint should start with 'http://' or 'https://', received '${endpoint}'`);
        }
        this.#coder = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RpcCoder"]();
        this.#endpoint = endpoint;
        this.#headers = headers;
        this.#cacheCapacity = cacheCapacity === 0 ? 0 : cacheCapacity || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_CAPACITY"];
        const ttl = cacheTtl === undefined ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_TTL"] : cacheTtl;
        this.#callCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LRUCache"](cacheCapacity === 0 ? 0 : cacheCapacity || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_CAPACITY"], ttl);
        this.#ttl = cacheTtl;
        this.#stats = {
            active: {
                requests: 0,
                subscriptions: 0
            },
            total: {
                bytesRecv: 0,
                bytesSent: 0,
                cached: 0,
                errors: 0,
                requests: 0,
                subscriptions: 0,
                timeout: 0
            }
        };
    }
    /**
     * @summary `true` when this provider supports subscriptions
     */ get hasSubscriptions() {
        return !!false;
    }
    /**
     * @description Returns a clone of the object
     */ clone() {
        return new HttpProvider(this.#endpoint, this.#headers);
    }
    /**
     * @description Manually connect from the connection
     */ async connect() {
    // noop
    }
    /**
     * @description Manually disconnect from the connection
     */ async disconnect() {
    // noop
    }
    /**
     * @description Returns the connection stats
     */ get stats() {
        return this.#stats;
    }
    /**
    * @description Returns the connection stats
    */ get ttl() {
        return this.#ttl;
    }
    /**
     * @summary `true` when this provider supports clone()
     */ get isClonable() {
        return !!true;
    }
    /**
     * @summary Whether the node is connected or not.
     * @return {boolean} true if connected
     */ get isConnected() {
        return !!true;
    }
    /**
     * @summary Events are not supported with the HttpProvider, see [[WsProvider]].
     * @description HTTP Provider does not have 'on' emitters. WebSockets should be used instead.
     */ on(_type, _sub) {
        l.error('HTTP Provider does not have \'on\' emitters, use WebSockets instead');
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noop"];
    }
    /**
     * @summary Send HTTP POST Request with Body to configured HTTP Endpoint.
     */ async send(method, params, isCacheable) {
        this.#stats.total.requests++;
        const [, body] = this.#coder.encodeJson(method, params);
        if (this.#cacheCapacity === 0) {
            return this.#send(body);
        }
        const cacheKey = isCacheable ? `${method}::${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(params)}` : '';
        let resultPromise = isCacheable ? this.#callCache.get(cacheKey) : null;
        if (!resultPromise) {
            resultPromise = this.#send(body);
            if (isCacheable) {
                this.#callCache.set(cacheKey, resultPromise);
            }
        } else {
            this.#stats.total.cached++;
        }
        return resultPromise;
    }
    async #send(body) {
        this.#stats.active.requests++;
        this.#stats.total.bytesSent += body.length;
        try {
            const response = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$fetch$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["fetch"])(this.#endpoint, {
                body,
                headers: {
                    Accept: 'application/json',
                    'Content-Length': `${body.length}`,
                    'Content-Type': 'application/json',
                    ...this.#headers
                },
                method: 'POST'
            });
            if (!response.ok) {
                throw new Error(`[${response.status}]: ${response.statusText}`);
            }
            const result = await response.text();
            this.#stats.total.bytesRecv += result.length;
            const decoded = this.#coder.decodeResponse(JSON.parse(result));
            this.#stats.active.requests--;
            return decoded;
        } catch (e) {
            this.#stats.active.requests--;
            this.#stats.total.errors++;
            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
            const { method, params } = JSON.parse(body);
            const rpcError = e;
            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
            const failedRequest = `\nFailed HTTP Request: ${JSON.stringify({
                method,
                params
            })}`;
            // Provide HTTP Request alongside the error
            rpcError.message = `${rpcError.message}${failedRequest}`;
            throw rpcError;
        }
    }
    /**
     * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].
     */ // eslint-disable-next-line @typescript-eslint/require-await
    async subscribe(_types, _method, _params, _cb) {
        l.error(ERROR_SUBSCRIBE);
        throw new Error(ERROR_SUBSCRIBE);
    }
    /**
     * @summary Subscriptions are not supported with the HttpProvider, see [[WsProvider]].
     */ // eslint-disable-next-line @typescript-eslint/require-await
    async unsubscribe(_type, _method, _id) {
        l.error(ERROR_SUBSCRIBE);
        throw new Error(ERROR_SUBSCRIBE);
    }
}
}),
"[project]/node_modules/@polkadot/rpc-provider/substrate-connect/Health.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "HealthCheckError",
    ()=>HealthCheckError,
    "healthChecker",
    ()=>healthChecker
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
;
function healthChecker() {
    // `null` if health checker is not started.
    let checker = null;
    let sendJsonRpc = null;
    return {
        responsePassThrough: (jsonRpcResponse)=>{
            if (checker === null) {
                return jsonRpcResponse;
            }
            return checker.responsePassThrough(jsonRpcResponse);
        },
        sendJsonRpc: (request)=>{
            if (!sendJsonRpc) {
                throw new Error('setSendJsonRpc must be called before sending requests');
            }
            if (checker === null) {
                sendJsonRpc(request);
            } else {
                checker.sendJsonRpc(request);
            }
        },
        setSendJsonRpc: (cb)=>{
            sendJsonRpc = cb;
        },
        start: (healthCallback)=>{
            if (checker !== null) {
                throw new Error("Can't start the health checker multiple times in parallel");
            } else if (!sendJsonRpc) {
                throw new Error('setSendJsonRpc must be called before starting the health checks');
            }
            checker = new InnerChecker(healthCallback, sendJsonRpc);
            checker.update(true);
        },
        stop: ()=>{
            if (checker === null) {
                return;
            } // Already stopped.
            checker.destroy();
            checker = null;
        }
    };
}
class InnerChecker {
    #healthCallback;
    #currentHealthCheckId = null;
    #currentHealthTimeout = null;
    #currentSubunsubRequestId = null;
    #currentSubscriptionId = null;
    #requestToSmoldot;
    #isSyncing = false;
    #nextRequestId = 0;
    constructor(healthCallback, requestToSmoldot){
        this.#healthCallback = healthCallback;
        this.#requestToSmoldot = (request)=>requestToSmoldot((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(request));
    }
    sendJsonRpc = (request)=>{
        // Replace the `id` in the request to prefix the request ID with `extern:`.
        let parsedRequest;
        try {
            parsedRequest = JSON.parse(request);
        } catch  {
            return;
        }
        if (parsedRequest.id) {
            const newId = 'extern:' + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(parsedRequest.id);
            parsedRequest.id = newId;
        }
        this.#requestToSmoldot(parsedRequest);
    };
    responsePassThrough = (jsonRpcResponse)=>{
        let parsedResponse;
        try {
            parsedResponse = JSON.parse(jsonRpcResponse);
        } catch  {
            return jsonRpcResponse;
        }
        // Check whether response is a response to `system_health`.
        if (parsedResponse.id && this.#currentHealthCheckId === parsedResponse.id) {
            this.#currentHealthCheckId = null;
            // Check whether query was successful. It is possible for queries to fail for
            // various reasons, such as the client being overloaded.
            if (!parsedResponse.result) {
                this.update(false);
                return null;
            }
            this.#healthCallback(parsedResponse.result);
            this.#isSyncing = parsedResponse.result.isSyncing;
            this.update(false);
            return null;
        }
        // Check whether response is a response to the subscription or unsubscription.
        if (parsedResponse.id && this.#currentSubunsubRequestId === parsedResponse.id) {
            this.#currentSubunsubRequestId = null;
            // Check whether query was successful. It is possible for queries to fail for
            // various reasons, such as the client being overloaded.
            if (!parsedResponse.result) {
                this.update(false);
                return null;
            }
            if (this.#currentSubscriptionId) {
                this.#currentSubscriptionId = null;
            } else {
                this.#currentSubscriptionId = parsedResponse.result;
            }
            this.update(false);
            return null;
        }
        // Check whether response is a notification to a subscription.
        if (parsedResponse.params && this.#currentSubscriptionId && parsedResponse.params.subscription === this.#currentSubscriptionId) {
            // Note that after a successful subscription, a notification containing
            // the current best block is always returned. Considering that a
            // subscription is performed in response to a health check, calling
            // `startHealthCheck()` here will lead to a second health check.
            // It might seem redundant to perform two health checks in a quick
            // succession, but doing so doesn't lead to any problem, and it is
            // actually possible for the health to have changed in between as the
            // current best block might have been updated during the subscription
            // request.
            this.update(true);
            return null;
        }
        // Response doesn't concern us.
        if (parsedResponse.id) {
            const id = parsedResponse.id;
            // Need to remove the `extern:` prefix.
            if (!id.startsWith('extern:')) {
                throw new Error('State inconsistency in health checker');
            }
            const newId = JSON.parse(id.slice('extern:'.length));
            parsedResponse.id = newId;
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(parsedResponse);
    };
    update = (startNow)=>{
        // If `startNow`, clear `#currentHealthTimeout` so that it is set below.
        if (startNow && this.#currentHealthTimeout) {
            clearTimeout(this.#currentHealthTimeout);
            this.#currentHealthTimeout = null;
        }
        if (!this.#currentHealthTimeout) {
            const startHealthRequest = ()=>{
                this.#currentHealthTimeout = null;
                // No matter what, don't start a health request if there is already one in progress.
                // This is sane to do because receiving a response to a health request calls `update()`.
                if (this.#currentHealthCheckId) {
                    return;
                }
                // Actual request starting.
                this.#currentHealthCheckId = `health-checker:${this.#nextRequestId}`;
                this.#nextRequestId += 1;
                this.#requestToSmoldot({
                    id: this.#currentHealthCheckId,
                    jsonrpc: '2.0',
                    method: 'system_health',
                    params: []
                });
            };
            if (startNow) {
                startHealthRequest();
            } else {
                this.#currentHealthTimeout = setTimeout(startHealthRequest, 1000);
            }
        }
        if (this.#isSyncing && !this.#currentSubscriptionId && !this.#currentSubunsubRequestId) {
            this.startSubscription();
        }
        if (!this.#isSyncing && this.#currentSubscriptionId && !this.#currentSubunsubRequestId) {
            this.endSubscription();
        }
    };
    startSubscription = ()=>{
        if (this.#currentSubunsubRequestId || this.#currentSubscriptionId) {
            throw new Error('Internal error in health checker');
        }
        this.#currentSubunsubRequestId = `health-checker:${this.#nextRequestId}`;
        this.#nextRequestId += 1;
        this.#requestToSmoldot({
            id: this.#currentSubunsubRequestId,
            jsonrpc: '2.0',
            method: 'chain_subscribeNewHeads',
            params: []
        });
    };
    endSubscription = ()=>{
        if (this.#currentSubunsubRequestId || !this.#currentSubscriptionId) {
            throw new Error('Internal error in health checker');
        }
        this.#currentSubunsubRequestId = `health-checker:${this.#nextRequestId}`;
        this.#nextRequestId += 1;
        this.#requestToSmoldot({
            id: this.#currentSubunsubRequestId,
            jsonrpc: '2.0',
            method: 'chain_unsubscribeNewHeads',
            params: [
                this.#currentSubscriptionId
            ]
        });
    };
    destroy = ()=>{
        if (this.#currentHealthTimeout) {
            clearTimeout(this.#currentHealthTimeout);
            this.#currentHealthTimeout = null;
        }
    };
}
class HealthCheckError extends Error {
    #cause;
    getCause() {
        return this.#cause;
    }
    constructor(response, message = 'Got error response asking for system health'){
        super(message);
        this.#cause = response;
    }
}
}),
"[project]/node_modules/@polkadot/rpc-provider/substrate-connect/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ScProvider",
    ()=>ScProvider
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/eventemitter3/index.mjs [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__EventEmitter$3e$__ = __turbopack_context__.i("[project]/node_modules/eventemitter3/index.js [app-ssr] (ecmascript) <export default as EventEmitter>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$error$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/error.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/noop.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-provider/coder/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$substrate$2d$connect$2f$Health$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-provider/substrate-connect/Health.js [app-ssr] (ecmascript)");
;
;
;
;
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["logger"])('api-substrate-connect');
const subscriptionUnsubscriptionMethods = new Map([
    [
        'author_submitAndWatchExtrinsic',
        'author_unwatchExtrinsic'
    ],
    [
        'chain_subscribeAllHeads',
        'chain_unsubscribeAllHeads'
    ],
    [
        'chain_subscribeFinalizedHeads',
        'chain_unsubscribeFinalizedHeads'
    ],
    [
        'chain_subscribeFinalisedHeads',
        'chain_subscribeFinalisedHeads'
    ],
    [
        'chain_subscribeNewHeads',
        'chain_unsubscribeNewHeads'
    ],
    [
        'chain_subscribeNewHead',
        'chain_unsubscribeNewHead'
    ],
    [
        'chain_subscribeRuntimeVersion',
        'chain_unsubscribeRuntimeVersion'
    ],
    [
        'subscribe_newHead',
        'unsubscribe_newHead'
    ],
    [
        'state_subscribeRuntimeVersion',
        'state_unsubscribeRuntimeVersion'
    ],
    [
        'state_subscribeStorage',
        'state_unsubscribeStorage'
    ]
]);
const scClients = new WeakMap();
class ScProvider {
    #Sc;
    #coder = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RpcCoder"]();
    #spec;
    #sharedSandbox;
    #subscriptions = new Map();
    #resubscribeMethods = new Map();
    #requests = new Map();
    #wellKnownChains;
    #eventemitter = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__EventEmitter$3e$__["EventEmitter"]();
    #chain = null;
    #isChainReady = false;
    constructor(Sc, spec, sharedSandbox){
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(Sc) || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(Sc.WellKnownChain) || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(Sc.createScClient)) {
            throw new Error('Expected an @substrate/connect interface as first parameter to ScProvider');
        }
        this.#Sc = Sc;
        this.#spec = spec;
        this.#sharedSandbox = sharedSandbox;
        this.#wellKnownChains = new Set(Object.values(Sc.WellKnownChain));
    }
    get hasSubscriptions() {
        // Indicates that subscriptions are supported
        return !!true;
    }
    get isClonable() {
        return !!false;
    }
    get isConnected() {
        return !!this.#chain && this.#isChainReady;
    }
    clone() {
        throw new Error('clone() is not supported.');
    }
    // Config details can be found in @substrate/connect repo following the link:
    // https://github.com/paritytech/substrate-connect/blob/main/packages/connect/src/connector/index.ts
    async connect(config, checkerFactory = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$substrate$2d$connect$2f$Health$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["healthChecker"]) {
        if (this.isConnected) {
            throw new Error('Already connected!');
        }
        // it could happen that after emitting `disconnected` due to the fact that
        // smoldot is syncing, the consumer tries to reconnect after a certain amount
        // of time... In which case we want to make sure that we don't create a new
        // chain.
        if (this.#chain) {
            await this.#chain;
            return;
        }
        if (this.#sharedSandbox && !this.#sharedSandbox.isConnected) {
            await this.#sharedSandbox.connect();
        }
        const client = this.#sharedSandbox ? scClients.get(this.#sharedSandbox) : this.#Sc.createScClient(config);
        if (!client) {
            throw new Error('Unknown ScProvider!');
        }
        scClients.set(this, client);
        const hc = checkerFactory();
        const onResponse = (res)=>{
            const hcRes = hc.responsePassThrough(res);
            if (!hcRes) {
                return;
            }
            const response = JSON.parse(hcRes);
            let decodedResponse;
            try {
                decodedResponse = this.#coder.decodeResponse(response);
            } catch (e) {
                decodedResponse = e;
            }
            // It's not a subscription message, but rather a standar RPC response
            if (response.params?.subscription === undefined || !response.method) {
                return this.#requests.get(response.id)?.(decodedResponse);
            }
            // We are dealing with a subscription message
            const subscriptionId = `${response.method}::${response.params.subscription}`;
            const callback = this.#subscriptions.get(subscriptionId)?.[0];
            callback?.(decodedResponse);
        };
        const addChain = this.#sharedSandbox ? async (...args)=>{
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            const source = this.#sharedSandbox;
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            return (await source.#chain).addChain(...args);
        } : this.#wellKnownChains.has(this.#spec) ? client.addWellKnownChain : client.addChain;
        this.#chain = addChain(this.#spec, onResponse).then((chain)=>{
            hc.setSendJsonRpc(chain.sendJsonRpc);
            this.#isChainReady = false;
            const cleanup = ()=>{
                // If there are any callbacks left, we have to reject/error them.
                // Otherwise, that would cause a memory leak.
                const disconnectionError = new Error('Disconnected');
                this.#requests.forEach((cb)=>cb(disconnectionError));
                this.#subscriptions.forEach(([cb])=>cb(disconnectionError));
                this.#subscriptions.clear();
            };
            const staleSubscriptions = [];
            const killStaleSubscriptions = ()=>{
                if (staleSubscriptions.length === 0) {
                    return;
                }
                const stale = staleSubscriptions.pop();
                if (!stale) {
                    throw new Error('Unable to get stale subscription');
                }
                const { id, unsubscribeMethod } = stale;
                Promise.race([
                    this.send(unsubscribeMethod, [
                        id
                    ]).catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noop"]),
                    new Promise((resolve)=>setTimeout(resolve, 500))
                ]).then(killStaleSubscriptions).catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noop"]);
            };
            hc.start((health)=>{
                const isReady = !health.isSyncing && (health.peers > 0 || !health.shouldHavePeers);
                // if it's the same as before, then nothing has changed and we are done
                if (this.#isChainReady === isReady) {
                    return;
                }
                this.#isChainReady = isReady;
                if (!isReady) {
                    // If we've reached this point, that means that the chain used to be "ready"
                    // and now we are about to emit `disconnected`.
                    //
                    // This will cause the PolkadotJs API think that the connection is
                    // actually dead. In reality the smoldot chain is not dead, of course.
                    // However, we have to cleanup all the existing callbacks because when
                    // the smoldot chain stops syncing, then we will emit `connected` and
                    // the PolkadotJs API will try to re-create the previous
                    // subscriptions and requests. Although, now is not a good moment
                    // to be sending unsubscription messages to the smoldot chain, we
                    // should wait until is no longer syncing to send the unsubscription
                    // messages from the stale subscriptions of the previous connection.
                    //
                    // That's why -before we perform the cleanup of `this.#subscriptions`-
                    // we keep the necessary information that we will need later on to
                    // kill the stale subscriptions.
                    [
                        ...this.#subscriptions.values()
                    ].forEach((s)=>{
                        staleSubscriptions.push(s[1]);
                    });
                    cleanup();
                    this.#eventemitter.emit('disconnected');
                } else {
                    killStaleSubscriptions();
                    this.#eventemitter.emit('connected');
                    if (this.#resubscribeMethods.size) {
                        this.#resubscribe();
                    }
                }
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, chain, {
                remove: ()=>{
                    hc.stop();
                    chain.remove();
                    cleanup();
                },
                sendJsonRpc: hc.sendJsonRpc.bind(hc)
            });
        });
        try {
            await this.#chain;
        } catch (e) {
            this.#chain = null;
            this.#eventemitter.emit('error', e);
            throw e;
        }
    }
    #resubscribe = ()=>{
        const promises = [];
        this.#resubscribeMethods.forEach((subDetails)=>{
            // only re-create subscriptions which are not in author (only area where
            // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'
            // are not included (and will not be re-broadcast)
            if (subDetails.type.startsWith('author_')) {
                return;
            }
            try {
                const promise = new Promise((resolve)=>{
                    this.subscribe(subDetails.type, subDetails.method, subDetails.params, subDetails.callback).catch((error)=>console.log(error));
                    resolve();
                });
                promises.push(promise);
            } catch (error) {
                l.error(error);
            }
        });
        Promise.all(promises).catch((err)=>l.log(err));
    };
    async disconnect() {
        if (!this.#chain) {
            return;
        }
        const chain = await this.#chain;
        this.#chain = null;
        this.#isChainReady = false;
        try {
            chain.remove();
        } catch (_) {}
        this.#eventemitter.emit('disconnected');
    }
    on(type, sub) {
        // It's possible. Although, quite unlikely, that by the time that polkadot
        // subscribes to the `connected` event, the Provider is already connected.
        // In that case, we must emit to let the consumer know that we are connected.
        if (type === 'connected' && this.isConnected) {
            sub();
        }
        this.#eventemitter.on(type, sub);
        return ()=>{
            this.#eventemitter.removeListener(type, sub);
        };
    }
    async send(method, params) {
        if (!this.isConnected || !this.#chain) {
            throw new Error('Provider is not connected');
        }
        const chain = await this.#chain;
        const [id, json] = this.#coder.encodeJson(method, params);
        const result = new Promise((resolve, reject)=>{
            this.#requests.set(id, (response)=>{
                ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$error$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isError"])(response) ? reject : resolve)(response);
            });
            try {
                chain.sendJsonRpc(json);
            } catch (e) {
                this.#chain = null;
                try {
                    chain.remove();
                } catch (_) {}
                this.#eventemitter.emit('error', e);
            }
        });
        try {
            return await result;
        } finally{
            // let's ensure that once the Promise is resolved/rejected, then we remove
            // remove its entry from the internal #requests
            this.#requests.delete(id);
        }
    }
    async subscribe(type, method, params, callback) {
        if (!subscriptionUnsubscriptionMethods.has(method)) {
            throw new Error(`Unsupported subscribe method: ${method}`);
        }
        const id = await this.send(method, params);
        const subscriptionId = `${type}::${id}`;
        const cb = (response)=>{
            if (response instanceof Error) {
                callback(response, undefined);
            } else {
                callback(null, response);
            }
        };
        const unsubscribeMethod = subscriptionUnsubscriptionMethods.get(method);
        if (!unsubscribeMethod) {
            throw new Error('Invalid unsubscribe method found');
        }
        this.#resubscribeMethods.set(subscriptionId, {
            callback,
            method,
            params,
            type
        });
        this.#subscriptions.set(subscriptionId, [
            cb,
            {
                id,
                unsubscribeMethod
            }
        ]);
        return id;
    }
    unsubscribe(type, method, id) {
        if (!this.isConnected) {
            throw new Error('Provider is not connected');
        }
        const subscriptionId = `${type}::${id}`;
        if (!this.#subscriptions.has(subscriptionId)) {
            return Promise.reject(new Error(`Unable to find active subscription=${subscriptionId}`));
        }
        this.#resubscribeMethods.delete(subscriptionId);
        this.#subscriptions.delete(subscriptionId);
        return this.send(method, [
            id
        ]);
    }
}
}),
"[project]/node_modules/@polkadot/rpc-provider/ws/errors.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "getWSErrorString",
    ()=>getWSErrorString
]);
const known = {
    1000: 'Normal Closure',
    1001: 'Going Away',
    1002: 'Protocol Error',
    1003: 'Unsupported Data',
    1004: '(For future)',
    1005: 'No Status Received',
    1006: 'Abnormal Closure',
    1007: 'Invalid frame payload data',
    1008: 'Policy Violation',
    1009: 'Message too big',
    1010: 'Missing Extension',
    1011: 'Internal Error',
    1012: 'Service Restart',
    1013: 'Try Again Later',
    1014: 'Bad Gateway',
    1015: 'TLS Handshake'
};
function getWSErrorString(code) {
    if (code >= 0 && code <= 999) {
        return '(Unused)';
    } else if (code >= 1016) {
        if (code <= 1999) {
            return '(For WebSocket standard)';
        } else if (code <= 2999) {
            return '(For WebSocket extensions)';
        } else if (code <= 3999) {
            return '(For libraries and frameworks)';
        } else if (code <= 4999) {
            return '(For applications)';
        }
    }
    return known[code] || '(Unknown)';
}
}),
"[project]/node_modules/@polkadot/rpc-provider/ws/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "WsProvider",
    ()=>WsProvider
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$eventemitter3$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/eventemitter3/index.mjs [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__EventEmitter$3e$__ = __turbopack_context__.i("[project]/node_modules/eventemitter3/index.js [app-ssr] (ecmascript) <export default as EventEmitter>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$childClass$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/childClass.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/null.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/noop.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$ws$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-ws/node.js [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-provider/coder/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-provider/defaults.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-provider/lru.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$ws$2f$errors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/rpc-provider/ws/errors.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
const ALIASES = {
    chain_finalisedHead: 'chain_finalizedHead',
    chain_subscribeFinalisedHeads: 'chain_subscribeFinalizedHeads',
    chain_unsubscribeFinalisedHeads: 'chain_unsubscribeFinalizedHeads'
};
const RETRY_DELAY = 2_500;
const DEFAULT_TIMEOUT_MS = 60 * 1000;
const TIMEOUT_INTERVAL = 5_000;
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["logger"])('api-ws');
/** @internal Clears a Record<*> of all keys, optionally with all callback on clear */ function eraseRecord(record, cb) {
    Object.keys(record).forEach((key)=>{
        if (cb) {
            cb(record[key]);
        }
        delete record[key];
    });
}
/** @internal Creates a default/empty stats object */ function defaultEndpointStats() {
    return {
        bytesRecv: 0,
        bytesSent: 0,
        cached: 0,
        errors: 0,
        requests: 0,
        subscriptions: 0,
        timeout: 0
    };
}
class WsProvider {
    #callCache;
    #coder;
    #endpoints;
    #headers;
    #eventemitter;
    #handlers = {};
    #isReadyPromise;
    #stats;
    #waitingForId = {};
    #cacheCapacity;
    #ttl;
    #autoConnectMs;
    #endpointIndex;
    #endpointStats;
    #isConnected = false;
    #subscriptions = {};
    #timeoutId = null;
    #websocket;
    #timeout;
    /**
     * @param {string | string[]} endpoint The endpoint url. Usually `ws://ip:9944` or `wss://ip:9944`, may provide an array of endpoint strings.
     * @param {number | false} autoConnectMs Whether to connect automatically or not (default). Provided value is used as a delay between retries.
     * @param {Record<string, string>} headers The headers provided to the underlying WebSocket
     * @param {number} [timeout] Custom timeout value used per request . Defaults to `DEFAULT_TIMEOUT_MS`
     * @param {number} [cacheCapacity] Custom size of the WsProvider LRUCache. Defaults to `DEFAULT_CAPACITY` (1024)
     * @param {number} [cacheTtl] Custom TTL of the WsProvider LRUCache. Determines how long an object can live in the cache. Defaults to DEFAULT_TTL` (30000)
     */ constructor(endpoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].WS_URL, autoConnectMs = RETRY_DELAY, headers = {}, timeout, cacheCapacity, cacheTtl){
        const endpoints = Array.isArray(endpoint) ? endpoint : [
            endpoint
        ];
        if (endpoints.length === 0) {
            throw new Error('WsProvider requires at least one Endpoint');
        }
        endpoints.forEach((endpoint)=>{
            if (!/^(wss|ws):\/\//.test(endpoint)) {
                throw new Error(`Endpoint should start with 'ws://', received '${endpoint}'`);
            }
        });
        const ttl = cacheTtl === undefined ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_TTL"] : cacheTtl;
        this.#callCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LRUCache"](cacheCapacity === 0 ? 0 : cacheCapacity || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_CAPACITY"], ttl);
        this.#ttl = cacheTtl;
        this.#cacheCapacity = cacheCapacity || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$lru$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_CAPACITY"];
        this.#eventemitter = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__EventEmitter$3e$__["EventEmitter"]();
        this.#autoConnectMs = autoConnectMs || 0;
        this.#coder = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$coder$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RpcCoder"]();
        this.#endpointIndex = -1;
        this.#endpoints = endpoints;
        this.#headers = headers;
        this.#websocket = null;
        this.#stats = {
            active: {
                requests: 0,
                subscriptions: 0
            },
            total: defaultEndpointStats()
        };
        this.#endpointStats = defaultEndpointStats();
        this.#timeout = timeout || DEFAULT_TIMEOUT_MS;
        if (autoConnectMs && autoConnectMs > 0) {
            this.connectWithRetry().catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noop"]);
        }
        this.#isReadyPromise = new Promise((resolve)=>{
            this.#eventemitter.once('connected', ()=>{
                resolve(this);
            });
        });
    }
    /**
     * @summary `true` when this provider supports subscriptions
     */ get hasSubscriptions() {
        return !!true;
    }
    /**
     * @summary `true` when this provider supports clone()
     */ get isClonable() {
        return !!true;
    }
    /**
     * @summary Whether the node is connected or not.
     * @return {boolean} true if connected
     */ get isConnected() {
        return this.#isConnected;
    }
    /**
     * @description Promise that resolves the first time we are connected and loaded
     */ get isReady() {
        return this.#isReadyPromise;
    }
    get endpoint() {
        return this.#endpoints[this.#endpointIndex];
    }
    /**
     * @description Returns a clone of the object
     */ clone() {
        return new WsProvider(this.#endpoints);
    }
    selectEndpointIndex(endpoints) {
        return (this.#endpointIndex + 1) % endpoints.length;
    }
    /**
     * @summary Manually connect
     * @description The [[WsProvider]] connects automatically by default, however if you decided otherwise, you may
     * connect manually using this method.
     */ // eslint-disable-next-line @typescript-eslint/require-await
    async connect() {
        if (this.#websocket) {
            throw new Error('WebSocket is already connected');
        }
        try {
            this.#endpointIndex = this.selectEndpointIndex(this.#endpoints);
            // the as here is Deno-specific - not available on the globalThis
            this.#websocket = typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"].WebSocket !== 'undefined' && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$childClass$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isChildClass"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["xglobal"].WebSocket, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$ws$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["WebSocket"]) ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$ws$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["WebSocket"](this.endpoint) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$ws$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["WebSocket"](this.endpoint, undefined, {
                headers: this.#headers
            });
            if (this.#websocket) {
                this.#websocket.onclose = this.#onSocketClose;
                this.#websocket.onerror = this.#onSocketError;
                this.#websocket.onmessage = this.#onSocketMessage;
                this.#websocket.onopen = this.#onSocketOpen;
            }
            // timeout any handlers that have not had a response
            this.#timeoutId = setInterval(()=>this.#timeoutHandlers(), TIMEOUT_INTERVAL);
        } catch (error) {
            l.error(error);
            this.#emit('error', error);
            throw error;
        }
    }
    /**
     * @description Connect, never throwing an error, but rather forcing a retry
     */ async connectWithRetry() {
        if (this.#autoConnectMs > 0) {
            try {
                await this.connect();
            } catch  {
                setTimeout(()=>{
                    this.connectWithRetry().catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noop"]);
                }, this.#autoConnectMs);
            }
        }
    }
    /**
     * @description Manually disconnect from the connection, clearing auto-connect logic
     */ // eslint-disable-next-line @typescript-eslint/require-await
    async disconnect() {
        // switch off autoConnect, we are in manual mode now
        this.#autoConnectMs = 0;
        try {
            if (this.#websocket) {
                // 1000 - Normal closure; the connection successfully completed
                this.#websocket.close(1000);
            }
        } catch (error) {
            l.error(error);
            this.#emit('error', error);
            throw error;
        }
    }
    /**
     * @description Returns the connection stats
     */ get stats() {
        return {
            active: {
                requests: Object.keys(this.#handlers).length,
                subscriptions: Object.keys(this.#subscriptions).length
            },
            total: this.#stats.total
        };
    }
    /**
    * @description Returns the connection stats
    */ get ttl() {
        return this.#ttl;
    }
    get endpointStats() {
        return this.#endpointStats;
    }
    /**
     * @summary Listens on events after having subscribed using the [[subscribe]] function.
     * @param  {ProviderInterfaceEmitted} type Event
     * @param  {ProviderInterfaceEmitCb}  sub  Callback
     * @return unsubscribe function
     */ on(type, sub) {
        this.#eventemitter.on(type, sub);
        return ()=>{
            this.#eventemitter.removeListener(type, sub);
        };
    }
    /**
     * @summary Send JSON data using WebSockets to configured HTTP Endpoint or queue.
     * @param method The RPC methods to execute
     * @param params Encoded parameters as applicable for the method
     * @param subscription Subscription details (internally used)
     */ send(method, params, isCacheable, subscription) {
        this.#endpointStats.requests++;
        this.#stats.total.requests++;
        const [id, body] = this.#coder.encodeJson(method, params);
        if (this.#cacheCapacity === 0) {
            return this.#send(id, body, method, params, subscription);
        }
        const cacheKey = isCacheable ? `${method}::${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(params)}` : '';
        let resultPromise = isCacheable ? this.#callCache.get(cacheKey) : null;
        if (!resultPromise) {
            resultPromise = this.#send(id, body, method, params, subscription);
            if (isCacheable) {
                this.#callCache.set(cacheKey, resultPromise);
            }
        } else {
            this.#endpointStats.cached++;
            this.#stats.total.cached++;
        }
        return resultPromise;
    }
    async #send(id, body, method, params, subscription) {
        return new Promise((resolve, reject)=>{
            try {
                if (!this.isConnected || this.#websocket === null) {
                    throw new Error('WebSocket is not connected');
                }
                const callback = (error, result)=>{
                    error ? reject(error) : resolve(result);
                };
                l.debug(()=>[
                        'calling',
                        method,
                        body
                    ]);
                this.#handlers[id] = {
                    callback,
                    method,
                    params,
                    start: Date.now(),
                    subscription
                };
                const bytesSent = body.length;
                this.#endpointStats.bytesSent += bytesSent;
                this.#stats.total.bytesSent += bytesSent;
                this.#websocket.send(body);
            } catch (error) {
                this.#endpointStats.errors++;
                this.#stats.total.errors++;
                const rpcError = error;
                const failedRequest = `\nFailed WS Request: ${JSON.stringify({
                    method,
                    params
                })}`;
                // Provide WS Request alongside the error
                rpcError.message = `${rpcError.message}${failedRequest}`;
                reject(rpcError);
            }
        });
    }
    /**
     * @name subscribe
     * @summary Allows subscribing to a specific event.
     *
     * @example
     * <BR>
     *
     * ```javascript
     * const provider = new WsProvider('ws://127.0.0.1:9944');
     * const rpc = new Rpc(provider);
     *
     * rpc.state.subscribeStorage([[storage.system.account, <Address>]], (_, values) => {
     *   console.log(values)
     * }).then((subscriptionId) => {
     *   console.log('balance changes subscription id: ', subscriptionId)
     * })
     * ```
     */ subscribe(type, method, params, callback) {
        this.#endpointStats.subscriptions++;
        this.#stats.total.subscriptions++;
        // subscriptions are not cached, LRU applies to .at(<blockHash>) only
        return this.send(method, params, false, {
            callback,
            type
        });
    }
    /**
     * @summary Allows unsubscribing to subscriptions made with [[subscribe]].
     */ async unsubscribe(type, method, id) {
        const subscription = `${type}::${id}`;
        // FIXME This now could happen with re-subscriptions. The issue is that with a re-sub
        // the assigned id now does not match what the API user originally received. It has
        // a slight complication in solving - since we cannot rely on the send id, but rather
        // need to find the actual subscription id to map it
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(this.#subscriptions[subscription])) {
            l.debug(()=>`Unable to find active subscription=${subscription}`);
            return false;
        }
        delete this.#subscriptions[subscription];
        try {
            return this.isConnected && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNull"])(this.#websocket) ? this.send(method, [
                id
            ]) : true;
        } catch  {
            return false;
        }
    }
    #emit = (type, ...args)=>{
        this.#eventemitter.emit(type, ...args);
    };
    #onSocketClose = (event)=>{
        const error = new Error(`disconnected from ${this.endpoint}: ${event.code}:: ${event.reason || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$rpc$2d$provider$2f$ws$2f$errors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getWSErrorString"])(event.code)}`);
        if (this.#autoConnectMs > 0) {
            l.error(error.message);
        }
        this.#isConnected = false;
        if (this.#websocket) {
            this.#websocket.onclose = null;
            this.#websocket.onerror = null;
            this.#websocket.onmessage = null;
            this.#websocket.onopen = null;
            this.#websocket = null;
        }
        if (this.#timeoutId) {
            clearInterval(this.#timeoutId);
            this.#timeoutId = null;
        }
        // reject all hanging requests
        eraseRecord(this.#handlers, (h)=>{
            try {
                h.callback(error, undefined);
            } catch (err) {
                // does not throw
                l.error(err);
            }
        });
        eraseRecord(this.#waitingForId);
        // Reset stats for active endpoint
        this.#endpointStats = defaultEndpointStats();
        this.#emit('disconnected');
        if (this.#autoConnectMs > 0) {
            setTimeout(()=>{
                this.connectWithRetry().catch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noop"]);
            }, this.#autoConnectMs);
        }
    };
    #onSocketError = (error)=>{
        l.debug(()=>[
                'socket error',
                error
            ]);
        this.#emit('error', error);
    };
    #onSocketMessage = (message)=>{
        l.debug(()=>[
                'received',
                message.data
            ]);
        const bytesRecv = message.data.length;
        this.#endpointStats.bytesRecv += bytesRecv;
        this.#stats.total.bytesRecv += bytesRecv;
        const response = JSON.parse(message.data);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(response.method) ? this.#onSocketMessageResult(response) : this.#onSocketMessageSubscribe(response);
    };
    #onSocketMessageResult = (response)=>{
        const handler = this.#handlers[response.id];
        if (!handler) {
            l.debug(()=>`Unable to find handler for id=${response.id}`);
            return;
        }
        try {
            const { method, params, subscription } = handler;
            const result = this.#coder.decodeResponse(response);
            // first send the result - in case of subs, we may have an update
            // immediately if we have some queued results already
            handler.callback(null, result);
            if (subscription) {
                const subId = `${subscription.type}::${result}`;
                this.#subscriptions[subId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, subscription, {
                    method,
                    params
                });
                // if we have a result waiting for this subscription already
                if (this.#waitingForId[subId]) {
                    this.#onSocketMessageSubscribe(this.#waitingForId[subId]);
                }
            }
        } catch (error) {
            this.#endpointStats.errors++;
            this.#stats.total.errors++;
            handler.callback(error, undefined);
        }
        delete this.#handlers[response.id];
    };
    #onSocketMessageSubscribe = (response)=>{
        if (!response.method) {
            throw new Error('No method found in JSONRPC response');
        }
        const method = ALIASES[response.method] || response.method;
        const subId = `${method}::${response.params.subscription}`;
        const handler = this.#subscriptions[subId];
        if (!handler) {
            // store the JSON, we could have out-of-order subid coming in
            this.#waitingForId[subId] = response;
            l.debug(()=>`Unable to find handler for subscription=${subId}`);
            return;
        }
        // housekeeping
        delete this.#waitingForId[subId];
        try {
            const result = this.#coder.decodeResponse(response);
            handler.callback(null, result);
        } catch (error) {
            this.#endpointStats.errors++;
            this.#stats.total.errors++;
            handler.callback(error, undefined);
        }
    };
    #onSocketOpen = ()=>{
        if (this.#websocket === null) {
            throw new Error('WebSocket cannot be null in onOpen');
        }
        l.debug(()=>[
                'connected to',
                this.endpoint
            ]);
        this.#isConnected = true;
        this.#resubscribe();
        this.#emit('connected');
        return true;
    };
    #resubscribe = ()=>{
        const subscriptions = this.#subscriptions;
        this.#subscriptions = {};
        Promise.all(Object.keys(subscriptions).map(async (id)=>{
            const { callback, method, params, type } = subscriptions[id];
            // only re-create subscriptions which are not in author (only area where
            // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'
            // are not included (and will not be re-broadcast)
            if (type.startsWith('author_')) {
                return;
            }
            try {
                await this.subscribe(type, method, params, callback);
            } catch (error) {
                l.error(error);
            }
        })).catch(l.error);
    };
    #timeoutHandlers = ()=>{
        const now = Date.now();
        const ids = Object.keys(this.#handlers);
        for(let i = 0, count = ids.length; i < count; i++){
            const handler = this.#handlers[ids[i]];
            if (now - handler.start > this.#timeout) {
                try {
                    handler.callback(new Error(`No response received from RPC endpoint in ${this.#timeout / 1000}s`), undefined);
                } catch  {
                // ignore
                }
                this.#endpointStats.timeout++;
                this.#stats.total.timeout++;
                delete this.#handlers[ids[i]];
            }
        }
    };
}
}),
"[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "exposeGlobal",
    ()=>exposeGlobal,
    "extractGlobal",
    ()=>extractGlobal,
    "xglobal",
    ()=>xglobal
]);
;
/** @internal Last-resort "this", if it gets here it probably would fail anyway */ function evaluateThis(fn) {
    return fn('return this');
}
const xglobal = typeof globalThis !== 'undefined' ? globalThis : ("TURBOPACK compile-time truthy", 1) ? /*TURBOPACK member replacement*/ __turbopack_context__.g : "TURBOPACK unreachable";
function extractGlobal(name, fallback) {
    // Not quite sure why this is here - snuck in with TS 4.7.2 with no real idea
    // (as of now) as to why this looks like an "any" when we do cast it to a T
    //
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return typeof xglobal[name] === 'undefined' ? fallback : xglobal[name];
}
function exposeGlobal(name, fallback) {
    if (typeof xglobal[name] === 'undefined') {
        xglobal[name] = fallback;
    }
}
}),
"[project]/node_modules/@polkadot/x-textencoder/node.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TextEncoder",
    ()=>TextEncoder
]);
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$util__$5b$external$5d$__$28$node$3a$util$2c$__cjs$29$__ = __turbopack_context__.i("[externals]/node:util [external] (node:util, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>");
;
;
;
class Fallback {
    #encoder;
    constructor(){
        this.#encoder = new __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$util__$5b$external$5d$__$28$node$3a$util$2c$__cjs$29$__["default"].TextEncoder();
    }
    // For a Jest 26.0.1 environment, Buffer !== Uint8Array
    encode(value) {
        return Uint8Array.from(this.#encoder.encode(value));
    }
}
const TextEncoder = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('TextEncoder', Fallback);
}),
"[project]/node_modules/@scure/base/lib/esm/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */ __turbopack_context__.s([
    "base16",
    ()=>base16,
    "base32",
    ()=>base32,
    "base32crockford",
    ()=>base32crockford,
    "base32hex",
    ()=>base32hex,
    "base32hexnopad",
    ()=>base32hexnopad,
    "base32nopad",
    ()=>base32nopad,
    "base58",
    ()=>base58,
    "base58check",
    ()=>base58check,
    "base58flickr",
    ()=>base58flickr,
    "base58xmr",
    ()=>base58xmr,
    "base58xrp",
    ()=>base58xrp,
    "base64",
    ()=>base64,
    "base64nopad",
    ()=>base64nopad,
    "base64url",
    ()=>base64url,
    "base64urlnopad",
    ()=>base64urlnopad,
    "bech32",
    ()=>bech32,
    "bech32m",
    ()=>bech32m,
    "bytes",
    ()=>bytes,
    "bytesToString",
    ()=>bytesToString,
    "createBase58check",
    ()=>createBase58check,
    "hex",
    ()=>hex,
    "str",
    ()=>str,
    "stringToBytes",
    ()=>stringToBytes,
    "utf8",
    ()=>utf8,
    "utils",
    ()=>utils
]);
function isBytes(a) {
    return a instanceof Uint8Array || ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array';
}
/** Asserts something is Uint8Array. */ function abytes(b, ...lengths) {
    if (!isBytes(b)) throw new Error('Uint8Array expected');
    if (lengths.length > 0 && !lengths.includes(b.length)) throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);
}
function isArrayOf(isString, arr) {
    if (!Array.isArray(arr)) return false;
    if (arr.length === 0) return true;
    if (isString) {
        return arr.every((item)=>typeof item === 'string');
    } else {
        return arr.every((item)=>Number.isSafeInteger(item));
    }
}
// no abytes: seems to have 10% slowdown. Why?!
function afn(input) {
    if (typeof input !== 'function') throw new Error('function expected');
    return true;
}
function astr(label, input) {
    if (typeof input !== 'string') throw new Error(`${label}: string expected`);
    return true;
}
function anumber(n) {
    if (!Number.isSafeInteger(n)) throw new Error(`invalid integer: ${n}`);
}
function aArr(input) {
    if (!Array.isArray(input)) throw new Error('array expected');
}
function astrArr(label, input) {
    if (!isArrayOf(true, input)) throw new Error(`${label}: array of strings expected`);
}
function anumArr(label, input) {
    if (!isArrayOf(false, input)) throw new Error(`${label}: array of numbers expected`);
}
/**
 * @__NO_SIDE_EFFECTS__
 */ function chain(...args) {
    const id = (a)=>a;
    // Wrap call in closure so JIT can inline calls
    const wrap = (a, b)=>(c)=>a(b(c));
    // Construct chain of args[-1].encode(args[-2].encode([...]))
    const encode = args.map((x)=>x.encode).reduceRight(wrap, id);
    // Construct chain of args[0].decode(args[1].decode(...))
    const decode = args.map((x)=>x.decode).reduce(wrap, id);
    return {
        encode,
        decode
    };
}
/**
 * Encodes integer radix representation to array of strings using alphabet and back.
 * Could also be array of strings.
 * @__NO_SIDE_EFFECTS__
 */ function alphabet(letters) {
    // mapping 1 to "b"
    const lettersA = typeof letters === 'string' ? letters.split('') : letters;
    const len = lettersA.length;
    astrArr('alphabet', lettersA);
    // mapping "b" to 1
    const indexes = new Map(lettersA.map((l, i)=>[
            l,
            i
        ]));
    return {
        encode: (digits)=>{
            aArr(digits);
            return digits.map((i)=>{
                if (!Number.isSafeInteger(i) || i < 0 || i >= len) throw new Error(`alphabet.encode: digit index outside alphabet "${i}". Allowed: ${letters}`);
                return lettersA[i];
            });
        },
        decode: (input)=>{
            aArr(input);
            return input.map((letter)=>{
                astr('alphabet.decode', letter);
                const i = indexes.get(letter);
                if (i === undefined) throw new Error(`Unknown letter: "${letter}". Allowed: ${letters}`);
                return i;
            });
        }
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */ function join(separator = '') {
    astr('join', separator);
    return {
        encode: (from)=>{
            astrArr('join.decode', from);
            return from.join(separator);
        },
        decode: (to)=>{
            astr('join.decode', to);
            return to.split(separator);
        }
    };
}
/**
 * Pad strings array so it has integer number of bits
 * @__NO_SIDE_EFFECTS__
 */ function padding(bits, chr = '=') {
    anumber(bits);
    astr('padding', chr);
    return {
        encode (data) {
            astrArr('padding.encode', data);
            while(data.length * bits % 8)data.push(chr);
            return data;
        },
        decode (input) {
            astrArr('padding.decode', input);
            let end = input.length;
            if (end * bits % 8) throw new Error('padding: invalid, string should have whole number of bytes');
            for(; end > 0 && input[end - 1] === chr; end--){
                const last = end - 1;
                const byte = last * bits;
                if (byte % 8 === 0) throw new Error('padding: invalid, string has too much padding');
            }
            return input.slice(0, end);
        }
    };
}
/**
 * @__NO_SIDE_EFFECTS__
 */ function normalize(fn) {
    afn(fn);
    return {
        encode: (from)=>from,
        decode: (to)=>fn(to)
    };
}
/**
 * Slow: O(n^2) time complexity
 */ function convertRadix(data, from, to) {
    // base 1 is impossible
    if (from < 2) throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);
    if (to < 2) throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);
    aArr(data);
    if (!data.length) return [];
    let pos = 0;
    const res = [];
    const digits = Array.from(data, (d)=>{
        anumber(d);
        if (d < 0 || d >= from) throw new Error(`invalid integer: ${d}`);
        return d;
    });
    const dlen = digits.length;
    while(true){
        let carry = 0;
        let done = true;
        for(let i = pos; i < dlen; i++){
            const digit = digits[i];
            const fromCarry = from * carry;
            const digitBase = fromCarry + digit;
            if (!Number.isSafeInteger(digitBase) || fromCarry / from !== carry || digitBase - digit !== fromCarry) {
                throw new Error('convertRadix: carry overflow');
            }
            const div = digitBase / to;
            carry = digitBase % to;
            const rounded = Math.floor(div);
            digits[i] = rounded;
            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase) throw new Error('convertRadix: carry overflow');
            if (!done) continue;
            else if (!rounded) pos = i;
            else done = false;
        }
        res.push(carry);
        if (done) break;
    }
    for(let i = 0; i < data.length - 1 && data[i] === 0; i++)res.push(0);
    return res.reverse();
}
const gcd = (a, b)=>b === 0 ? a : gcd(b, a % b);
const radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from, to)=>from + (to - gcd(from, to));
const powers = /* @__PURE__ */ (()=>{
    let res = [];
    for(let i = 0; i < 40; i++)res.push(2 ** i);
    return res;
})();
/**
 * Implemented with numbers, because BigInt is 5x slower
 */ function convertRadix2(data, from, to, padding) {
    aArr(data);
    if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);
    if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);
    if (radix2carry(from, to) > 32) {
        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);
    }
    let carry = 0;
    let pos = 0; // bitwise position in current element
    const max = powers[from];
    const mask = powers[to] - 1;
    const res = [];
    for (const n of data){
        anumber(n);
        if (n >= max) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);
        carry = carry << from | n;
        if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);
        pos += from;
        for(; pos >= to; pos -= to)res.push((carry >> pos - to & mask) >>> 0);
        const pow = powers[pos];
        if (pow === undefined) throw new Error('invalid carry');
        carry &= pow - 1; // clean carry, otherwise it will cause overflow
    }
    carry = carry << to - pos & mask;
    if (!padding && pos >= from) throw new Error('Excess padding');
    if (!padding && carry > 0) throw new Error(`Non-zero padding: ${carry}`);
    if (padding && pos > 0) res.push(carry >>> 0);
    return res;
}
/**
 * @__NO_SIDE_EFFECTS__
 */ function radix(num) {
    anumber(num);
    const _256 = 2 ** 8;
    return {
        encode: (bytes)=>{
            if (!isBytes(bytes)) throw new Error('radix.encode input should be Uint8Array');
            return convertRadix(Array.from(bytes), _256, num);
        },
        decode: (digits)=>{
            anumArr('radix.decode', digits);
            return Uint8Array.from(convertRadix(digits, num, _256));
        }
    };
}
/**
 * If both bases are power of same number (like `2**8 <-> 2**64`),
 * there is a linear algorithm. For now we have implementation for power-of-two bases only.
 * @__NO_SIDE_EFFECTS__
 */ function radix2(bits, revPadding = false) {
    anumber(bits);
    if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');
    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32) throw new Error('radix2: carry overflow');
    return {
        encode: (bytes)=>{
            if (!isBytes(bytes)) throw new Error('radix2.encode input should be Uint8Array');
            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);
        },
        decode: (digits)=>{
            anumArr('radix2.decode', digits);
            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));
        }
    };
}
function unsafeWrapper(fn) {
    afn(fn);
    return function(...args) {
        try {
            return fn.apply(null, args);
        } catch (e) {}
    };
}
function checksum(len, fn) {
    anumber(len);
    afn(fn);
    return {
        encode (data) {
            if (!isBytes(data)) throw new Error('checksum.encode: input should be Uint8Array');
            const sum = fn(data).slice(0, len);
            const res = new Uint8Array(data.length + len);
            res.set(data);
            res.set(sum, data.length);
            return res;
        },
        decode (data) {
            if (!isBytes(data)) throw new Error('checksum.decode: input should be Uint8Array');
            const payload = data.slice(0, -len);
            const oldChecksum = data.slice(-len);
            const newChecksum = fn(payload).slice(0, len);
            for(let i = 0; i < len; i++)if (newChecksum[i] !== oldChecksum[i]) throw new Error('Invalid checksum');
            return payload;
        }
    };
}
const utils = {
    alphabet,
    chain,
    checksum,
    convertRadix,
    convertRadix2,
    radix,
    radix2,
    join,
    padding
};
const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));
const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));
const base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));
const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));
const base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));
const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s)=>s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));
// Built-in base64 conversion https://caniuse.com/mdn-javascript_builtins_uint8array_frombase64
// prettier-ignore
const hasBase64Builtin = /* @__PURE__ */ (()=>typeof Uint8Array.from([]).toBase64 === 'function' && typeof Uint8Array.fromBase64 === 'function')();
const decodeBase64Builtin = (s, isUrl)=>{
    astr('base64', s);
    const re = isUrl ? /^[A-Za-z0-9=_-]+$/ : /^[A-Za-z0-9=+/]+$/;
    const alphabet = isUrl ? 'base64url' : 'base64';
    if (s.length > 0 && !re.test(s)) throw new Error('invalid base64');
    return Uint8Array.fromBase64(s, {
        alphabet,
        lastChunkHandling: 'strict'
    });
};
const base64 = hasBase64Builtin ? {
    encode (b) {
        abytes(b);
        return b.toBase64();
    },
    decode (s) {
        return decodeBase64Builtin(s, false);
    }
} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));
const base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));
const base64url = hasBase64Builtin ? {
    encode (b) {
        abytes(b);
        return b.toBase64({
            alphabet: 'base64url'
        });
    },
    decode (s) {
        return decodeBase64Builtin(s, true);
    }
} : chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));
const base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));
// base58 code
// -----------
const genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc)=>chain(radix(58), alphabet(abc), join(''));
const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');
const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');
const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');
// Data len (index) -> encoded block len
const XMR_BLOCK_LEN = [
    0,
    2,
    3,
    5,
    6,
    7,
    9,
    10,
    11
];
const base58xmr = {
    encode (data) {
        let res = '';
        for(let i = 0; i < data.length; i += 8){
            const block = data.subarray(i, i + 8);
            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');
        }
        return res;
    },
    decode (str) {
        let res = [];
        for(let i = 0; i < str.length; i += 11){
            const slice = str.slice(i, i + 11);
            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);
            const block = base58.decode(slice);
            for(let j = 0; j < block.length - blockLen; j++){
                if (block[j] !== 0) throw new Error('base58xmr: wrong padding');
            }
            res = res.concat(Array.from(block.slice(block.length - blockLen)));
        }
        return Uint8Array.from(res);
    }
};
const createBase58check = (sha256)=>chain(checksum(4, (data)=>sha256(sha256(data))), base58);
const base58check = createBase58check;
const BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));
const POLYMOD_GENERATORS = [
    0x3b6a57b2,
    0x26508e6d,
    0x1ea119fa,
    0x3d4233dd,
    0x2a1462b3
];
function bech32Polymod(pre) {
    const b = pre >> 25;
    let chk = (pre & 0x1ffffff) << 5;
    for(let i = 0; i < POLYMOD_GENERATORS.length; i++){
        if ((b >> i & 1) === 1) chk ^= POLYMOD_GENERATORS[i];
    }
    return chk;
}
function bechChecksum(prefix, words, encodingConst = 1) {
    const len = prefix.length;
    let chk = 1;
    for(let i = 0; i < len; i++){
        const c = prefix.charCodeAt(i);
        if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);
        chk = bech32Polymod(chk) ^ c >> 5;
    }
    chk = bech32Polymod(chk);
    for(let i = 0; i < len; i++)chk = bech32Polymod(chk) ^ prefix.charCodeAt(i) & 0x1f;
    for (let v of words)chk = bech32Polymod(chk) ^ v;
    for(let i = 0; i < 6; i++)chk = bech32Polymod(chk);
    chk ^= encodingConst;
    return BECH_ALPHABET.encode(convertRadix2([
        chk % powers[30]
    ], 30, 5, false));
}
/**
 * @__NO_SIDE_EFFECTS__
 */ function genBech32(encoding) {
    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;
    const _words = radix2(5);
    const fromWords = _words.decode;
    const toWords = _words.encode;
    const fromWordsUnsafe = unsafeWrapper(fromWords);
    function encode(prefix, words, limit = 90) {
        astr('bech32.encode prefix', prefix);
        if (isBytes(words)) words = Array.from(words);
        anumArr('bech32.encode', words);
        const plen = prefix.length;
        if (plen === 0) throw new TypeError(`Invalid prefix length ${plen}`);
        const actualLength = plen + 7 + words.length;
        if (limit !== false && actualLength > limit) throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);
        const lowered = prefix.toLowerCase();
        const sum = bechChecksum(lowered, words, ENCODING_CONST);
        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;
    }
    function decode(str, limit = 90) {
        astr('bech32.decode input', str);
        const slen = str.length;
        if (slen < 8 || limit !== false && slen > limit) throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);
        // don't allow mixed case
        const lowered = str.toLowerCase();
        if (str !== lowered && str !== str.toUpperCase()) throw new Error(`String must be lowercase or uppercase`);
        const sepIndex = lowered.lastIndexOf('1');
        if (sepIndex === 0 || sepIndex === -1) throw new Error(`Letter "1" must be present between prefix and data only`);
        const prefix = lowered.slice(0, sepIndex);
        const data = lowered.slice(sepIndex + 1);
        if (data.length < 6) throw new Error('Data must be at least 6 characters long');
        const words = BECH_ALPHABET.decode(data).slice(0, -6);
        const sum = bechChecksum(prefix, words, ENCODING_CONST);
        if (!data.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected "${sum}"`);
        return {
            prefix,
            words
        };
    }
    const decodeUnsafe = unsafeWrapper(decode);
    function decodeToBytes(str) {
        const { prefix, words } = decode(str, false);
        return {
            prefix,
            words,
            bytes: fromWords(words)
        };
    }
    function encodeFromBytes(prefix, bytes) {
        return encode(prefix, toWords(bytes));
    }
    return {
        encode,
        decode,
        encodeFromBytes,
        decodeToBytes,
        decodeUnsafe,
        fromWords,
        fromWordsUnsafe,
        toWords
    };
}
const bech32 = genBech32('bech32');
const bech32m = genBech32('bech32m');
const utf8 = {
    encode: (data)=>new TextDecoder().decode(data),
    decode: (str)=>new TextEncoder().encode(str)
};
// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex
// prettier-ignore
const hasHexBuiltin = /* @__PURE__ */ (()=>typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();
// prettier-ignore
const hexBuiltin = {
    encode (data) {
        abytes(data);
        return data.toHex();
    },
    decode (s) {
        astr('hex', s);
        return Uint8Array.fromHex(s);
    }
};
const hex = hasHexBuiltin ? hexBuiltin : chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s)=>{
    if (typeof s !== 'string' || s.length % 2 !== 0) throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);
    return s.toLowerCase();
}));
// prettier-ignore
const CODERS = {
    utf8,
    hex,
    base16,
    base32,
    base64,
    base64url,
    base58,
    base58xmr
};
const coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';
const bytesToString = (type, bytes)=>{
    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);
    if (!isBytes(bytes)) throw new TypeError('bytesToString() expects Uint8Array');
    return CODERS[type].encode(bytes);
};
const str = bytesToString; // as in python, but for bytes only
const stringToBytes = (type, str)=>{
    if (!CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);
    if (typeof str !== 'string') throw new TypeError('stringToBytes() expects string');
    return CODERS[type].decode(str);
};
const bytes = stringToBytes; //# sourceMappingURL=index.js.map
}),
"[project]/node_modules/@polkadot/x-bigint/index.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BigInt",
    ()=>BigInt
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>");
;
;
/**
 * @internal
 *
 * There are _still_ some older environments (specifically RN < 0.70), that does
 * not have proper BigInt support - a non-working fallback is provided for those.
 *
 * We detect availability of BigInt upon usage, so this is purely to allow functional
 * compilation & bundling. Since we have operators such as *+-/ top-level, a number-ish
 * result is used here.
 */ function invalidFallback() {
    return Number.NaN;
}
const BigInt = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('BigInt', invalidFallback);
}),
"[project]/node_modules/@polkadot/x-textdecoder/node.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TextDecoder",
    ()=>TextDecoder
]);
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$util__$5b$external$5d$__$28$node$3a$util$2c$__cjs$29$__ = __turbopack_context__.i("[externals]/node:util [external] (node:util, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>");
;
;
;
const TextDecoder = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('TextDecoder', __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$util__$5b$external$5d$__$28$node$3a$util$2c$__cjs$29$__["default"].TextDecoder);
}),
"[project]/node_modules/@polkadot/x-randomvalues/node.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "crypto",
    ()=>crypto,
    "getRandomValues",
    ()=>getRandomValues
]);
var __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$crypto__$5b$external$5d$__$28$node$3a$crypto$2c$__cjs$29$__ = __turbopack_context__.i("[externals]/node:crypto [external] (node:crypto, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>");
;
;
;
const crypto = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('crypto', __TURBOPACK__imported__module__$5b$externals$5d2f$node$3a$crypto__$5b$external$5d$__$28$node$3a$crypto$2c$__cjs$29$__["default"].webcrypto);
function getRandomValues(output) {
    return crypto.getRandomValues(output);
}
}),
"[project]/node_modules/@polkadot/wasm-bridge/wbg.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Wbg",
    ()=>Wbg
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$randomvalues$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-randomvalues/node.js [app-ssr] (ecmascript) <locals>");
;
const DEFAULT_CRYPTO = {
    getRandomValues: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$randomvalues$2f$node$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["getRandomValues"]
};
const DEFAULT_SELF = {
    crypto: DEFAULT_CRYPTO
};
class Wbg {
    #bridge;
    constructor(bridge){
        this.#bridge = bridge;
    }
    /** @internal */ abort = ()=>{
        throw new Error('abort');
    };
    /** @internal */ __wbindgen_is_undefined = (idx)=>{
        return this.#bridge.getObject(idx) === undefined;
    };
    /** @internal */ __wbindgen_throw = (ptr, len)=>{
        throw new Error(this.#bridge.getString(ptr, len));
    };
    /** @internal */ __wbg_self_1b7a39e3a92c949c = ()=>{
        return this.#bridge.addObject(DEFAULT_SELF);
    };
    /** @internal */ __wbg_require_604837428532a733 = (ptr, len)=>{
        throw new Error(`Unable to require ${this.#bridge.getString(ptr, len)}`);
    };
    /** @internal */ __wbg_crypto_968f1772287e2df0 = (_idx)=>{
        return this.#bridge.addObject(DEFAULT_CRYPTO);
    };
    /** @internal */ __wbg_getRandomValues_a3d34b4fee3c2869 = (_idx)=>{
        return this.#bridge.addObject(DEFAULT_CRYPTO.getRandomValues);
    };
    /** @internal */ __wbg_getRandomValues_f5e14ab7ac8e995d = (_arg0, ptr, len)=>{
        DEFAULT_CRYPTO.getRandomValues(this.#bridge.getU8a(ptr, len));
    };
    /** @internal */ __wbg_randomFillSync_d5bd2d655fdf256a = (_idx, _ptr, _len)=>{
        throw new Error('randomFillsync is not available');
    // getObject(idx).randomFillSync(getU8a(ptr, len));
    };
    /** @internal */ __wbindgen_object_drop_ref = (idx)=>{
        this.#bridge.takeObject(idx);
    };
}
}),
"[project]/node_modules/@polkadot/wasm-bridge/bridge.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Bridge",
    ()=>Bridge
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toString.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$wbg$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/wasm-bridge/wbg.js [app-ssr] (ecmascript)");
;
;
class Bridge {
    #createWasm;
    #heap;
    #wbg;
    #cachegetInt32;
    #cachegetUint8;
    #heapNext;
    #wasm;
    #wasmError;
    #wasmPromise;
    #type;
    constructor(createWasm){
        this.#createWasm = createWasm;
        this.#cachegetInt32 = null;
        this.#cachegetUint8 = null;
        this.#heap = new Array(32).fill(undefined).concat(undefined, null, true, false);
        this.#heapNext = this.#heap.length;
        this.#type = 'none';
        this.#wasm = null;
        this.#wasmError = null;
        this.#wasmPromise = null;
        this.#wbg = {
            ...new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$wbg$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Wbg"](this)
        };
    }
    /** @description Returns the init error */ get error() {
        return this.#wasmError;
    }
    /** @description Returns the init type */ get type() {
        return this.#type;
    }
    /** @description Returns the created wasm interface */ get wasm() {
        return this.#wasm;
    }
    /** @description Performs the wasm initialization */ async init(createWasm) {
        if (!this.#wasmPromise || createWasm) {
            this.#wasmPromise = (createWasm || this.#createWasm)(this.#wbg);
        }
        const { error, type, wasm } = await this.#wasmPromise;
        this.#type = type;
        this.#wasm = wasm;
        this.#wasmError = error;
        return this.#wasm;
    }
    /**
     * @internal
     * @description Gets an object from the heap
     */ getObject(idx) {
        return this.#heap[idx];
    }
    /**
     * @internal
     * @description Removes an object from the heap
     */ dropObject(idx) {
        if (idx < 36) {
            return;
        }
        this.#heap[idx] = this.#heapNext;
        this.#heapNext = idx;
    }
    /**
     * @internal
     * @description Retrieves and removes an object to the heap
     */ takeObject(idx) {
        const ret = this.getObject(idx);
        this.dropObject(idx);
        return ret;
    }
    /**
     * @internal
     * @description Adds an object to the heap
     */ addObject(obj) {
        if (this.#heapNext === this.#heap.length) {
            this.#heap.push(this.#heap.length + 1);
        }
        const idx = this.#heapNext;
        this.#heapNext = this.#heap[idx];
        this.#heap[idx] = obj;
        return idx;
    }
    /**
     * @internal
     * @description Retrieve an Int32 in the WASM interface
     */ getInt32() {
        if (this.#cachegetInt32 === null || this.#cachegetInt32.buffer !== this.#wasm.memory.buffer) {
            this.#cachegetInt32 = new Int32Array(this.#wasm.memory.buffer);
        }
        return this.#cachegetInt32;
    }
    /**
     * @internal
     * @description Retrieve an Uint8Array in the WASM interface
     */ getUint8() {
        if (this.#cachegetUint8 === null || this.#cachegetUint8.buffer !== this.#wasm.memory.buffer) {
            this.#cachegetUint8 = new Uint8Array(this.#wasm.memory.buffer);
        }
        return this.#cachegetUint8;
    }
    /**
     * @internal
     * @description Retrieves an Uint8Array in the WASM interface
     */ getU8a(ptr, len) {
        return this.getUint8().subarray(ptr / 1, ptr / 1 + len);
    }
    /**
     * @internal
     * @description Retrieves a string in the WASM interface
     */ getString(ptr, len) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToString"])(this.getU8a(ptr, len));
    }
    /**
     * @internal
     * @description Allocates an Uint8Array in the WASM interface
     */ allocU8a(arg) {
        const ptr = this.#wasm.__wbindgen_malloc(arg.length * 1);
        this.getUint8().set(arg, ptr / 1);
        return [
            ptr,
            arg.length
        ];
    }
    /**
     * @internal
     * @description Allocates a string in the WASM interface
     */ allocString(arg) {
        return this.allocU8a((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringToU8a"])(arg));
    }
    /**
     * @internal
     * @description Retrieves an Uint8Array from the WASM interface
     */ resultU8a() {
        const r0 = this.getInt32()[8 / 4 + 0];
        const r1 = this.getInt32()[8 / 4 + 1];
        const ret = this.getU8a(r0, r1).slice();
        this.#wasm.__wbindgen_free(r0, r1 * 1);
        return ret;
    }
    /**
     * @internal
     * @description Retrieve a string from the WASM interface
     */ resultString() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToString"])(this.resultU8a());
    }
}
}),
"[project]/node_modules/@polkadot/wasm-bridge/init.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name createWasmFn
 * @description
 * Create a WASM (or ASM.js) creator interface based on the supplied information.
 *
 * It will attempt to create a WASM interface first and if this fails or is not available in
 * the environment, will fallback to attempting to create an ASM.js interface.
 */ __turbopack_context__.s([
    "createWasmFn",
    ()=>createWasmFn
]);
function createWasmFn(root, wasmBytes, asmFn) {
    return async (wbg)=>{
        const result = {
            error: null,
            type: 'none',
            wasm: null
        };
        try {
            if (!wasmBytes?.length) {
                throw new Error('No WebAssembly provided for initialization');
            } else if (typeof WebAssembly !== 'object' || typeof WebAssembly.instantiate !== 'function') {
                throw new Error('WebAssembly is not available in your environment');
            }
            const source = await WebAssembly.instantiate(wasmBytes, {
                wbg
            });
            result.wasm = source.instance.exports;
            result.type = 'wasm';
        } catch (error) {
            // if we have a valid supplied asm.js, return that
            if (typeof asmFn === 'function') {
                result.wasm = asmFn(wbg);
                result.type = 'asm';
            } else {
                result.error = `FATAL: Unable to initialize @polkadot/wasm-${root}:: ${error.message}`;
                console.error(result.error);
            }
        }
        return result;
    };
}
}),
"[project]/node_modules/@polkadot/wasm-util/base64.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "base64Decode",
    ()=>base64Decode
]);
const CHR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
const map = new Array(256);
for(let i = 0, count = CHR.length; i < count; i++){
    map[CHR.charCodeAt(i)] = i;
}
function base64Decode(data, out) {
    let byte = 0;
    let bits = 0;
    let pos = -1;
    for(let i = 0, last = out.length - 1; pos !== last; i++){
        // each character represents 6 bits
        byte = byte << 6 | map[data.charCodeAt(i)];
        // each byte needs to contain 8 bits
        if ((bits += 6) >= 8) {
            out[++pos] = byte >>> (bits -= 8) & 0xff;
        }
    }
    return out;
}
}),
"[project]/node_modules/@polkadot/wasm-util/fflate.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "unzlibSync",
    ()=>unzlibSync
]);
const u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;
const clim = new u8([
    16,
    17,
    18,
    0,
    8,
    7,
    9,
    6,
    10,
    5,
    11,
    4,
    12,
    3,
    13,
    2,
    14,
    1,
    15
]);
const fleb = new u8([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    0,
    /* unused */ 0,
    0,
    /* impossible */ 0
]);
const fdeb = new u8([
    0,
    0,
    0,
    0,
    1,
    1,
    2,
    2,
    3,
    3,
    4,
    4,
    5,
    5,
    6,
    6,
    7,
    7,
    8,
    8,
    9,
    9,
    10,
    10,
    11,
    11,
    12,
    12,
    13,
    13,
    /* unused */ 0,
    0
]);
const freb = (eb, start)=>{
    const b = new u16(31);
    for(let i = 0; i < 31; ++i){
        b[i] = start += 1 << eb[i - 1];
    }
    // numbers here are at max 18 bits
    const r = new u32(b[30]);
    for(let i = 1; i < 30; ++i){
        for(let j = b[i]; j < b[i + 1]; ++j){
            r[j] = j - b[i] << 5 | i;
        }
    }
    return [
        b,
        r
    ];
};
const [fl, revfl] = freb(fleb, 2);
fl[28] = 258, revfl[258] = 28;
const [fd] = freb(fdeb, 0);
const rev = new u16(32768);
for(let i = 0; i < 32768; ++i){
    // reverse table algorithm from SO
    let x = (i & 0xAAAA) >>> 1 | (i & 0x5555) << 1;
    x = (x & 0xCCCC) >>> 2 | (x & 0x3333) << 2;
    x = (x & 0xF0F0) >>> 4 | (x & 0x0F0F) << 4;
    rev[i] = ((x & 0xFF00) >>> 8 | (x & 0x00FF) << 8) >>> 1;
}
const hMap = (cd, mb, r)=>{
    const s = cd.length;
    // index
    let i = 0;
    // u16 "map": index -> # of codes with bit length = index
    const l = new u16(mb);
    // length of cd must be 288 (total # of codes)
    for(; i < s; ++i){
        if (cd[i]) ++l[cd[i] - 1];
    }
    // u16 "map": index -> minimum code for bit length = index
    const le = new u16(mb);
    for(i = 1; i < mb; ++i){
        le[i] = le[i - 1] + l[i - 1] << 1;
    }
    let co;
    if (r) {
        // u16 "map": index -> number of actual bits, symbol for code
        co = new u16(1 << mb);
        // bits to remove for reverser
        const rvb = 15 - mb;
        for(i = 0; i < s; ++i){
            // ignore 0 lengths
            if (cd[i]) {
                // num encoding both symbol and bits read
                const sv = i << 4 | cd[i];
                // free bits
                const r = mb - cd[i];
                // start value
                let v = le[cd[i] - 1]++ << r;
                // m is end value
                for(const m = v | (1 << r) - 1; v <= m; ++v){
                    // every 16 bit value starting with the code yields the same result
                    co[rev[v] >> rvb] = sv;
                }
            }
        }
    } else {
        co = new u16(s);
        for(i = 0; i < s; ++i){
            if (cd[i]) {
                co[i] = rev[le[cd[i] - 1]++] >> 15 - cd[i];
            }
        }
    }
    return co;
};
const flt = new u8(288);
for(let i = 0; i < 144; ++i)flt[i] = 8;
for(let i = 144; i < 256; ++i)flt[i] = 9;
for(let i = 256; i < 280; ++i)flt[i] = 7;
for(let i = 280; i < 288; ++i)flt[i] = 8;
const fdt = new u8(32);
for(let i = 0; i < 32; ++i)fdt[i] = 5;
const flrm = hMap(flt, 9, 1);
const fdrm = hMap(fdt, 5, 1);
const bits = (d, p, m)=>{
    const o = p >>> 3;
    return (d[o] | d[o + 1] << 8) >>> (p & 7) & m;
};
const bits16 = (d, p)=>{
    const o = p >>> 3;
    return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >>> (p & 7);
};
const shft = (p)=>(p >>> 3) + (p & 7 && 1);
const slc = (v, s, e)=>{
    if (s == null || s < 0) s = 0;
    if (e == null || e > v.length) e = v.length;
    // can't use .constructor in case user-supplied
    const n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);
    n.set(v.subarray(s, e));
    return n;
};
const max = (a)=>{
    let m = a[0];
    for(let i = 1, count = a.length; i < count; ++i){
        if (a[i] > m) m = a[i];
    }
    return m;
};
const inflt = (dat, buf, st)=>{
    const noSt = !st || st.i;
    if (!st) st = {};
    // source length
    const sl = dat.length;
    // have to estimate size
    const noBuf = !buf || !noSt;
    // Assumes roughly 33% compression ratio average
    if (!buf) buf = new u8(sl * 3);
    // ensure buffer can fit at least l elements
    const cbuf = (l)=>{
        let bl = buf.length;
        // need to increase size to fit
        if (l > bl) {
            // Double or set to necessary, whichever is greater
            const nbuf = new u8(Math.max(bl << 1, l));
            nbuf.set(buf);
            buf = nbuf;
        }
    };
    //  last chunk         bitpos           bytes
    let final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;
    if (final && !lm) return buf;
    // total bits
    const tbts = sl << 3;
    do {
        if (!lm) {
            // BFINAL - this is only 1 when last chunk is next
            st.f = final = bits(dat, pos, 1);
            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman
            const type = bits(dat, pos + 1, 3);
            pos += 3;
            if (!type) {
                // go to end of byte boundary
                const s = shft(pos) + 4, l = dat[s - 4] | dat[s - 3] << 8, t = s + l;
                if (t > sl) {
                    if (noSt) throw 'unexpected EOF';
                    break;
                }
                // ensure size
                if (noBuf) cbuf(bt + l);
                // Copy over uncompressed data
                buf.set(dat.subarray(s, t), bt);
                // Get new bitpos, update byte count
                st.b = bt += l, st.p = pos = t << 3;
                continue;
            } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;
            else if (type == 2) {
                //  literal                            lengths
                const hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;
                const tl = hLit + bits(dat, pos + 5, 31) + 1;
                pos += 14;
                // length+distance tree
                const ldt = new u8(tl);
                // code length tree
                const clt = new u8(19);
                for(let i = 0; i < hcLen; ++i){
                    // use index map to get real code
                    clt[clim[i]] = bits(dat, pos + i * 3, 7);
                }
                pos += hcLen * 3;
                // code lengths bits
                const clb = max(clt), clbmsk = (1 << clb) - 1;
                if (!noSt && pos + tl * (clb + 7) > tbts) break;
                // code lengths map
                const clm = hMap(clt, clb, 1);
                for(let i = 0; i < tl;){
                    const r = clm[bits(dat, pos, clbmsk)];
                    // bits read
                    pos += r & 15;
                    // symbol
                    const s = r >>> 4;
                    // code length to copy
                    if (s < 16) {
                        ldt[i++] = s;
                    } else {
                        //  copy   count
                        let c = 0, n = 0;
                        if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];
                        else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;
                        else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;
                        while(n--)ldt[i++] = c;
                    }
                }
                //    length tree                 distance tree
                const lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);
                // max length bits
                lbt = max(lt);
                // max dist bits
                dbt = max(dt);
                lm = hMap(lt, lbt, 1);
                dm = hMap(dt, dbt, 1);
            } else throw 'invalid block type';
            if (pos > tbts) throw 'unexpected EOF';
        }
        // Make sure the buffer can hold this + the largest possible addition
        // maximum chunk size (practically, theoretically infinite) is 2^17;
        if (noBuf) cbuf(bt + 131072);
        const lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;
        const mxa = lbt + dbt + 18;
        while(noSt || pos + mxa < tbts){
            // bits read, code
            const c = lm[bits16(dat, pos) & lms], sym = c >>> 4;
            pos += c & 15;
            if (pos > tbts) throw 'unexpected EOF';
            if (!c) throw 'invalid length/literal';
            if (sym < 256) buf[bt++] = sym;
            else if (sym == 256) {
                lm = undefined;
                break;
            } else {
                let add = sym - 254;
                // no extra bits needed if less
                if (sym > 264) {
                    // index
                    const i = sym - 257, b = fleb[i];
                    add = bits(dat, pos, (1 << b) - 1) + fl[i];
                    pos += b;
                }
                // dist
                const d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;
                if (!d) throw 'invalid distance';
                pos += d & 15;
                let dt = fd[dsym];
                if (dsym > 3) {
                    const b = fdeb[dsym];
                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;
                }
                if (pos > tbts) throw 'unexpected EOF';
                if (noBuf) cbuf(bt + 131072);
                const end = bt + add;
                for(; bt < end; bt += 4){
                    buf[bt] = buf[bt - dt];
                    buf[bt + 1] = buf[bt + 1 - dt];
                    buf[bt + 2] = buf[bt + 2 - dt];
                    buf[bt + 3] = buf[bt + 3 - dt];
                }
                bt = end;
            }
        }
        st.l = lm, st.p = pos, st.b = bt;
        if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;
    }while (!final)
    return bt == buf.length ? buf : slc(buf, 0, bt);
};
const zlv = (d)=>{
    if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) throw 'invalid zlib data';
    if (d[1] & 32) throw 'invalid zlib data: preset dictionaries not supported';
};
function unzlibSync(data, out) {
    return inflt((zlv(data), data.subarray(2, -4)), out);
}
}),
"[project]/node_modules/@polkadot/wasm-crypto-init/wasm.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createWasm",
    ()=>createWasm
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/wasm-bridge/init.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2d$wasm$2f$bundle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/wasm-crypto-wasm/bundle.js [app-ssr] (ecmascript) <locals>");
;
;
;
const createWasm = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createWasmFn"])('crypto', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2d$wasm$2f$bundle$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["wasmBytes"], null);
}),
"[project]/node_modules/@polkadot/wasm-crypto/init.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "bridge",
    ()=>bridge,
    "initBridge",
    ()=>initBridge
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$bridge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/wasm-bridge/bridge.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2d$init$2f$wasm$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/wasm-crypto-init/wasm.js [app-ssr] (ecmascript) <locals>");
;
;
const bridge = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$bridge$2f$bridge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Bridge"](__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2d$init$2f$wasm$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["createWasm"]);
async function initBridge(createWasm) {
    return bridge.init(createWasm);
}
}),
"[project]/node_modules/@polkadot/wasm-crypto/bundle.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "bip39Generate",
    ()=>bip39Generate,
    "bip39ToEntropy",
    ()=>bip39ToEntropy,
    "bip39ToMiniSecret",
    ()=>bip39ToMiniSecret,
    "bip39ToSeed",
    ()=>bip39ToSeed,
    "bip39Validate",
    ()=>bip39Validate,
    "blake2b",
    ()=>blake2b,
    "ed25519KeypairFromSeed",
    ()=>ed25519KeypairFromSeed,
    "ed25519Sign",
    ()=>ed25519Sign,
    "ed25519Verify",
    ()=>ed25519Verify,
    "hmacSha256",
    ()=>hmacSha256,
    "hmacSha512",
    ()=>hmacSha512,
    "isReady",
    ()=>isReady,
    "keccak256",
    ()=>keccak256,
    "keccak512",
    ()=>keccak512,
    "pbkdf2",
    ()=>pbkdf2,
    "scrypt",
    ()=>scrypt,
    "secp256k1Compress",
    ()=>secp256k1Compress,
    "secp256k1Expand",
    ()=>secp256k1Expand,
    "secp256k1FromSeed",
    ()=>secp256k1FromSeed,
    "secp256k1Recover",
    ()=>secp256k1Recover,
    "secp256k1Sign",
    ()=>secp256k1Sign,
    "sha256",
    ()=>sha256,
    "sha512",
    ()=>sha512,
    "sr25519Agree",
    ()=>sr25519Agree,
    "sr25519DeriveKeypairHard",
    ()=>sr25519DeriveKeypairHard,
    "sr25519DeriveKeypairSoft",
    ()=>sr25519DeriveKeypairSoft,
    "sr25519DerivePublicSoft",
    ()=>sr25519DerivePublicSoft,
    "sr25519KeypairFromSeed",
    ()=>sr25519KeypairFromSeed,
    "sr25519Sign",
    ()=>sr25519Sign,
    "sr25519Verify",
    ()=>sr25519Verify,
    "twox",
    ()=>twox,
    "vrfSign",
    ()=>vrfSign,
    "vrfVerify",
    ()=>vrfVerify,
    "waitReady",
    ()=>waitReady
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/wasm-crypto/init.js [app-ssr] (ecmascript)");
;
;
;
/**
 * @internal
 * @description
 * This create an extenal interface function from the signature, all the while checking
 * the actual bridge wasm interface to ensure it has been initialized.
 *
 * This means that we can call it
 *
 *   withWasm(wasm: WasmCryptoInstance, a: number, b: string) => Uint8Array
 *
 * and in this case it will create an interface function with the signarure
 *
 *   (a: number, b: string) => Uint8Array
 */ function withWasm(fn) {
    return (...params)=>{
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].wasm) {
            throw new Error('The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');
        }
        return fn(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].wasm, ...params);
    };
}
const bip39Generate = /*#__PURE__*/ withWasm((wasm, words)=>{
    wasm.ext_bip39_generate(8, words);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultString();
});
const bip39ToEntropy = /*#__PURE__*/ withWasm((wasm, phrase)=>{
    wasm.ext_bip39_to_entropy(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocString(phrase));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const bip39ToMiniSecret = /*#__PURE__*/ withWasm((wasm, phrase, password)=>{
    wasm.ext_bip39_to_mini_secret(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocString(phrase), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocString(password));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const bip39ToSeed = /*#__PURE__*/ withWasm((wasm, phrase, password)=>{
    wasm.ext_bip39_to_seed(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocString(phrase), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocString(password));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const bip39Validate = /*#__PURE__*/ withWasm((wasm, phrase)=>{
    const ret = wasm.ext_bip39_validate(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocString(phrase));
    return ret !== 0;
});
const ed25519KeypairFromSeed = /*#__PURE__*/ withWasm((wasm, seed)=>{
    wasm.ext_ed_from_seed(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(seed));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const ed25519Sign = /*#__PURE__*/ withWasm((wasm, pubkey, seckey, message)=>{
    wasm.ext_ed_sign(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(seckey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const ed25519Verify = /*#__PURE__*/ withWasm((wasm, signature, message, pubkey)=>{
    const ret = wasm.ext_ed_verify(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(signature), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey));
    return ret !== 0;
});
const secp256k1FromSeed = /*#__PURE__*/ withWasm((wasm, seckey)=>{
    wasm.ext_secp_from_seed(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(seckey));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const secp256k1Compress = /*#__PURE__*/ withWasm((wasm, pubkey)=>{
    wasm.ext_secp_pub_compress(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const secp256k1Expand = /*#__PURE__*/ withWasm((wasm, pubkey)=>{
    wasm.ext_secp_pub_expand(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const secp256k1Recover = /*#__PURE__*/ withWasm((wasm, msgHash, sig, recovery)=>{
    wasm.ext_secp_recover(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(msgHash), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(sig), recovery);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const secp256k1Sign = /*#__PURE__*/ withWasm((wasm, msgHash, seckey)=>{
    wasm.ext_secp_sign(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(msgHash), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(seckey));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519DeriveKeypairHard = /*#__PURE__*/ withWasm((wasm, pair, cc)=>{
    wasm.ext_sr_derive_keypair_hard(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pair), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(cc));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519DeriveKeypairSoft = /*#__PURE__*/ withWasm((wasm, pair, cc)=>{
    wasm.ext_sr_derive_keypair_soft(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pair), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(cc));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519DerivePublicSoft = /*#__PURE__*/ withWasm((wasm, pubkey, cc)=>{
    wasm.ext_sr_derive_public_soft(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(cc));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519KeypairFromSeed = /*#__PURE__*/ withWasm((wasm, seed)=>{
    wasm.ext_sr_from_seed(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(seed));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519Sign = /*#__PURE__*/ withWasm((wasm, pubkey, secret, message)=>{
    wasm.ext_sr_sign(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(secret), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sr25519Verify = /*#__PURE__*/ withWasm((wasm, signature, message, pubkey)=>{
    const ret = wasm.ext_sr_verify(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(signature), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey));
    return ret !== 0;
});
const sr25519Agree = /*#__PURE__*/ withWasm((wasm, pubkey, secret)=>{
    wasm.ext_sr_agree(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(secret));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const vrfSign = /*#__PURE__*/ withWasm((wasm, secret, context, message, extra)=>{
    wasm.ext_vrf_sign(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(secret), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(context), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(extra));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const vrfVerify = /*#__PURE__*/ withWasm((wasm, pubkey, context, message, extra, outAndProof)=>{
    const ret = wasm.ext_vrf_verify(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(pubkey), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(context), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(message), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(extra), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(outAndProof));
    return ret !== 0;
});
const blake2b = /*#__PURE__*/ withWasm((wasm, data, key, size)=>{
    wasm.ext_blake2b(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(key), size);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const hmacSha256 = /*#__PURE__*/ withWasm((wasm, key, data)=>{
    wasm.ext_hmac_sha256(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(key), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const hmacSha512 = /*#__PURE__*/ withWasm((wasm, key, data)=>{
    wasm.ext_hmac_sha512(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(key), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const keccak256 = /*#__PURE__*/ withWasm((wasm, data)=>{
    wasm.ext_keccak256(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const keccak512 = /*#__PURE__*/ withWasm((wasm, data)=>{
    wasm.ext_keccak512(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const pbkdf2 = /*#__PURE__*/ withWasm((wasm, data, salt, rounds)=>{
    wasm.ext_pbkdf2(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(salt), rounds);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const scrypt = /*#__PURE__*/ withWasm((wasm, password, salt, log2n, r, p)=>{
    wasm.ext_scrypt(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(password), ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(salt), log2n, r, p);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sha256 = /*#__PURE__*/ withWasm((wasm, data)=>{
    wasm.ext_sha256(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const sha512 = /*#__PURE__*/ withWasm((wasm, data)=>{
    wasm.ext_sha512(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data));
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
const twox = /*#__PURE__*/ withWasm((wasm, data, rounds)=>{
    wasm.ext_twox(8, ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].allocU8a(data), rounds);
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].resultU8a();
});
function isReady() {
    return !!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bridge"].wasm;
}
async function waitReady() {
    try {
        const wasm = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$wasm$2d$crypto$2f$init$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["initBridge"])();
        return !!wasm;
    } catch  {
        return false;
    }
}
}),
"[project]/node_modules/@substrate/ss58-registry/esm/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

// Copyright (C) 2021-2024 Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
const __TURBOPACK__default__export__ = [
    {
        "prefix": 0,
        "network": "polkadot",
        "displayName": "Polkadot Relay Chain",
        "symbols": [
            "DOT"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://polkadot.network"
    },
    {
        "prefix": 1,
        "network": "BareSr25519",
        "displayName": "Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",
        "symbols": [],
        "decimals": [],
        "standardAccount": "Sr25519",
        "website": null
    },
    {
        "prefix": 2,
        "network": "kusama",
        "displayName": "Kusama Relay Chain",
        "symbols": [
            "KSM"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://kusama.network"
    },
    {
        "prefix": 3,
        "network": "BareEd25519",
        "displayName": "Bare 32-bit Ed25519 public key.",
        "symbols": [],
        "decimals": [],
        "standardAccount": "Ed25519",
        "website": null
    },
    {
        "prefix": 4,
        "network": "katalchain",
        "displayName": "Katal Chain",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": null
    },
    {
        "prefix": 5,
        "network": "astar",
        "displayName": "Astar Network",
        "symbols": [
            "ASTR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://astar.network"
    },
    {
        "prefix": 6,
        "network": "bifrost",
        "displayName": "Bifrost",
        "symbols": [
            "BNC"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://bifrost.finance/"
    },
    {
        "prefix": 7,
        "network": "edgeware",
        "displayName": "Edgeware",
        "symbols": [
            "EDG"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://edgewa.re"
    },
    {
        "prefix": 8,
        "network": "karura",
        "displayName": "Karura",
        "symbols": [
            "KAR"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://karura.network/"
    },
    {
        "prefix": 9,
        "network": "reynolds",
        "displayName": "Laminar Reynolds Canary",
        "symbols": [
            "REY"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "http://laminar.network/"
    },
    {
        "prefix": 10,
        "network": "acala",
        "displayName": "Acala",
        "symbols": [
            "ACA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://acala.network/"
    },
    {
        "prefix": 11,
        "network": "laminar",
        "displayName": "Laminar",
        "symbols": [
            "LAMI"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "http://laminar.network/"
    },
    {
        "prefix": 12,
        "network": "polymesh",
        "displayName": "Polymesh",
        "symbols": [
            "POLYX"
        ],
        "decimals": [
            6
        ],
        "standardAccount": "*25519",
        "website": "https://polymath.network/"
    },
    {
        "prefix": 13,
        "network": "integritee",
        "displayName": "Integritee",
        "symbols": [
            "TEER"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://integritee.network"
    },
    {
        "prefix": 14,
        "network": "totem",
        "displayName": "Totem",
        "symbols": [
            "TOTEM"
        ],
        "decimals": [
            0
        ],
        "standardAccount": "*25519",
        "website": "https://totemaccounting.com"
    },
    {
        "prefix": 15,
        "network": "synesthesia",
        "displayName": "Synesthesia",
        "symbols": [
            "SYN"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://synesthesia.network/"
    },
    {
        "prefix": 16,
        "network": "kulupu",
        "displayName": "Kulupu",
        "symbols": [
            "KLP"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://kulupu.network/"
    },
    {
        "prefix": 17,
        "network": "dark",
        "displayName": "Dark Mainnet",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": null
    },
    {
        "prefix": 18,
        "network": "darwinia",
        "displayName": "Darwinia Network",
        "symbols": [
            "RING"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://darwinia.network"
    },
    {
        "prefix": 19,
        "network": "watr",
        "displayName": "Watr Protocol",
        "symbols": [
            "WATR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://www.watr.org"
    },
    {
        "prefix": 20,
        "network": "stafi",
        "displayName": "Stafi",
        "symbols": [
            "FIS"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://stafi.io"
    },
    {
        "prefix": 21,
        "network": "karmachain",
        "displayName": "Karmacoin",
        "symbols": [
            "KCOIN"
        ],
        "decimals": [
            6
        ],
        "standardAccount": "*25519",
        "website": "https://karmaco.in"
    },
    {
        "prefix": 22,
        "network": "dock-pos-mainnet",
        "displayName": "Dock Mainnet",
        "symbols": [
            "DCK"
        ],
        "decimals": [
            6
        ],
        "standardAccount": "*25519",
        "website": "https://dock.io"
    },
    {
        "prefix": 23,
        "network": "shift",
        "displayName": "ShiftNrg",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": null
    },
    {
        "prefix": 24,
        "network": "zero",
        "displayName": "ZERO",
        "symbols": [
            "ZERO"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://zero.io"
    },
    {
        "prefix": 25,
        "network": "zero-alphaville",
        "displayName": "ZERO Alphaville",
        "symbols": [
            "ZERO"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://zero.io"
    },
    {
        "prefix": 26,
        "network": "jupiter",
        "displayName": "Jupiter",
        "symbols": [
            "jDOT"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://jupiter.patract.io"
    },
    {
        "prefix": 27,
        "network": "kabocha",
        "displayName": "Kabocha",
        "symbols": [
            "KAB"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://kabocha.network"
    },
    {
        "prefix": 28,
        "network": "subsocial",
        "displayName": "Subsocial",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": null
    },
    {
        "prefix": 29,
        "network": "cord",
        "displayName": "CORD Network",
        "symbols": [
            "DHI",
            "WAY"
        ],
        "decimals": [
            12,
            12
        ],
        "standardAccount": "*25519",
        "website": "https://cord.network/"
    },
    {
        "prefix": 30,
        "network": "phala",
        "displayName": "Phala Network",
        "symbols": [
            "PHA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://phala.network"
    },
    {
        "prefix": 31,
        "network": "litentry",
        "displayName": "Litentry Network",
        "symbols": [
            "LIT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://litentry.com/"
    },
    {
        "prefix": 32,
        "network": "robonomics",
        "displayName": "Robonomics",
        "symbols": [
            "XRT"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://robonomics.network"
    },
    {
        "prefix": 33,
        "network": "datahighway",
        "displayName": "DataHighway",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": null
    },
    {
        "prefix": 34,
        "network": "ares",
        "displayName": "Ares Protocol",
        "symbols": [
            "ARES"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://www.aresprotocol.com/"
    },
    {
        "prefix": 35,
        "network": "vln",
        "displayName": "Valiu Liquidity Network",
        "symbols": [
            "USDv"
        ],
        "decimals": [
            15
        ],
        "standardAccount": "*25519",
        "website": "https://valiu.com/"
    },
    {
        "prefix": 36,
        "network": "centrifuge",
        "displayName": "Centrifuge Chain",
        "symbols": [
            "CFG"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://centrifuge.io/"
    },
    {
        "prefix": 37,
        "network": "nodle",
        "displayName": "Nodle Chain",
        "symbols": [
            "NODL"
        ],
        "decimals": [
            11
        ],
        "standardAccount": "*25519",
        "website": "https://nodle.io/"
    },
    {
        "prefix": 38,
        "network": "kilt",
        "displayName": "KILT Spiritnet",
        "symbols": [
            "KILT"
        ],
        "decimals": [
            15
        ],
        "standardAccount": "*25519",
        "website": "https://kilt.io/"
    },
    {
        "prefix": 39,
        "network": "mathchain",
        "displayName": "MathChain mainnet",
        "symbols": [
            "MATH"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://mathwallet.org"
    },
    {
        "prefix": 40,
        "network": "mathchain-testnet",
        "displayName": "MathChain testnet",
        "symbols": [
            "MATH"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://mathwallet.org"
    },
    {
        "prefix": 41,
        "network": "polimec",
        "displayName": "Polimec Protocol",
        "symbols": [
            "PLMC"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://www.polimec.org/"
    },
    {
        "prefix": 42,
        "network": "substrate",
        "displayName": "Substrate",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": "https://substrate.io/"
    },
    {
        "prefix": 43,
        "network": "BareSecp256k1",
        "displayName": "Bare 32-bit ECDSA SECP-256k1 public key.",
        "symbols": [],
        "decimals": [],
        "standardAccount": "secp256k1",
        "website": null
    },
    {
        "prefix": 44,
        "network": "chainx",
        "displayName": "ChainX",
        "symbols": [
            "PCX"
        ],
        "decimals": [
            8
        ],
        "standardAccount": "*25519",
        "website": "https://chainx.org/"
    },
    {
        "prefix": 45,
        "network": "uniarts",
        "displayName": "UniArts Network",
        "symbols": [
            "UART",
            "UINK"
        ],
        "decimals": [
            12,
            12
        ],
        "standardAccount": "*25519",
        "website": "https://uniarts.me"
    },
    {
        "prefix": 46,
        "network": "reserved46",
        "displayName": "This prefix is reserved.",
        "symbols": [],
        "decimals": [],
        "standardAccount": null,
        "website": null
    },
    {
        "prefix": 47,
        "network": "reserved47",
        "displayName": "This prefix is reserved.",
        "symbols": [],
        "decimals": [],
        "standardAccount": null,
        "website": null
    },
    {
        "prefix": 48,
        "network": "neatcoin",
        "displayName": "Neatcoin Mainnet",
        "symbols": [
            "NEAT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://neatcoin.org"
    },
    {
        "prefix": 49,
        "network": "picasso",
        "displayName": "Picasso",
        "symbols": [
            "PICA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://picasso.composable.finance"
    },
    {
        "prefix": 50,
        "network": "composable",
        "displayName": "Composable Finance",
        "symbols": [
            "LAYR"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://composable.finance"
    },
    {
        "prefix": 51,
        "network": "oak",
        "displayName": "OAK Network",
        "symbols": [
            "OAK",
            "TUR"
        ],
        "decimals": [
            10,
            10
        ],
        "standardAccount": "*25519",
        "website": "https://oak.tech"
    },
    {
        "prefix": 52,
        "network": "KICO",
        "displayName": "KICO",
        "symbols": [
            "KICO"
        ],
        "decimals": [
            14
        ],
        "standardAccount": "*25519",
        "website": "https://dico.io"
    },
    {
        "prefix": 53,
        "network": "DICO",
        "displayName": "DICO",
        "symbols": [
            "DICO"
        ],
        "decimals": [
            14
        ],
        "standardAccount": "*25519",
        "website": "https://dico.io"
    },
    {
        "prefix": 54,
        "network": "cere",
        "displayName": "Cere Network",
        "symbols": [
            "CERE"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://cere.network"
    },
    {
        "prefix": 55,
        "network": "xxnetwork",
        "displayName": "xx network",
        "symbols": [
            "XX"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://xx.network"
    },
    {
        "prefix": 56,
        "network": "pendulum",
        "displayName": "Pendulum chain",
        "symbols": [
            "PEN"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://pendulumchain.org/"
    },
    {
        "prefix": 57,
        "network": "amplitude",
        "displayName": "Amplitude chain",
        "symbols": [
            "AMPE"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://pendulumchain.org/"
    },
    {
        "prefix": 58,
        "network": "eternal-civilization",
        "displayName": "Eternal Civilization",
        "symbols": [
            "ECC"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "http://www.ysknfr.cn/"
    },
    {
        "prefix": 63,
        "network": "hydradx",
        "displayName": "Hydration",
        "symbols": [
            "HDX"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://hydration.net"
    },
    {
        "prefix": 65,
        "network": "aventus",
        "displayName": "Aventus Mainnet",
        "symbols": [
            "AVT"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://aventus.io"
    },
    {
        "prefix": 66,
        "network": "crust",
        "displayName": "Crust Network",
        "symbols": [
            "CRU"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://crust.network"
    },
    {
        "prefix": 67,
        "network": "genshiro",
        "displayName": "Genshiro Network",
        "symbols": [
            "GENS",
            "EQD",
            "LPT0"
        ],
        "decimals": [
            9,
            9,
            9
        ],
        "standardAccount": "*25519",
        "website": "https://genshiro.equilibrium.io"
    },
    {
        "prefix": 68,
        "network": "equilibrium",
        "displayName": "Equilibrium Network",
        "symbols": [
            "EQ"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://equilibrium.io"
    },
    {
        "prefix": 69,
        "network": "sora",
        "displayName": "SORA Network",
        "symbols": [
            "XOR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://sora.org"
    },
    {
        "prefix": 71,
        "network": "p3d",
        "displayName": "3DP network",
        "symbols": [
            "P3D"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://3dpass.org"
    },
    {
        "prefix": 72,
        "network": "p3dt",
        "displayName": "3DP test network",
        "symbols": [
            "P3Dt"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://3dpass.org"
    },
    {
        "prefix": 73,
        "network": "zeitgeist",
        "displayName": "Zeitgeist",
        "symbols": [
            "ZTG"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://zeitgeist.pm"
    },
    {
        "prefix": 77,
        "network": "manta",
        "displayName": "Manta network",
        "symbols": [
            "MANTA"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://manta.network"
    },
    {
        "prefix": 78,
        "network": "calamari",
        "displayName": "Calamari: Manta Canary Network",
        "symbols": [
            "KMA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://manta.network"
    },
    {
        "prefix": 81,
        "network": "sora_dot_para",
        "displayName": "SORA Polkadot Parachain",
        "symbols": [
            "XOR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://sora.org"
    },
    {
        "prefix": 88,
        "network": "polkadex",
        "displayName": "Polkadex Mainnet",
        "symbols": [
            "PDEX"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://polkadex.trade"
    },
    {
        "prefix": 89,
        "network": "polkadexparachain",
        "displayName": "Polkadex Parachain",
        "symbols": [
            "PDEX"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://polkadex.trade"
    },
    {
        "prefix": 90,
        "network": "frequency",
        "displayName": "Frequency",
        "symbols": [
            "FRQCY"
        ],
        "decimals": [
            8
        ],
        "standardAccount": "*25519",
        "website": "https://www.frequency.xyz"
    },
    {
        "prefix": 92,
        "network": "anmol",
        "displayName": "Anmol Network",
        "symbols": [
            "ANML"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://anmol.network/"
    },
    {
        "prefix": 93,
        "network": "fragnova",
        "displayName": "Fragnova Network",
        "symbols": [
            "NOVA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://fragnova.com"
    },
    {
        "prefix": 98,
        "network": "polkasmith",
        "displayName": "PolkaSmith Canary Network",
        "symbols": [
            "PKS"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://polkafoundry.com"
    },
    {
        "prefix": 99,
        "network": "polkafoundry",
        "displayName": "PolkaFoundry Network",
        "symbols": [
            "PKF"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://polkafoundry.com"
    },
    {
        "prefix": 100,
        "network": "ibtida",
        "displayName": "Anmol Network Ibtida Canary network",
        "symbols": [
            "IANML"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://anmol.network/"
    },
    {
        "prefix": 101,
        "network": "origintrail-parachain",
        "displayName": "OriginTrail Parachain",
        "symbols": [
            "OTP"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://parachain.origintrail.io/"
    },
    {
        "prefix": 105,
        "network": "pontem-network",
        "displayName": "Pontem Network",
        "symbols": [
            "PONT"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://pontem.network"
    },
    {
        "prefix": 110,
        "network": "heiko",
        "displayName": "Heiko",
        "symbols": [
            "HKO"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://parallel.fi/"
    },
    {
        "prefix": 113,
        "network": "integritee-incognito",
        "displayName": "Integritee Incognito",
        "symbols": [],
        "decimals": [],
        "standardAccount": "*25519",
        "website": "https://integritee.network"
    },
    {
        "prefix": 117,
        "network": "tinker",
        "displayName": "Tinker",
        "symbols": [
            "TNKR"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://invarch.network"
    },
    {
        "prefix": 126,
        "network": "joystream",
        "displayName": "Joystream",
        "symbols": [
            "JOY"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://www.joystream.org"
    },
    {
        "prefix": 128,
        "network": "clover",
        "displayName": "Clover Finance",
        "symbols": [
            "CLV"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://clover.finance"
    },
    {
        "prefix": 129,
        "network": "dorafactory-polkadot",
        "displayName": "Dorafactory Polkadot Network",
        "symbols": [
            "DORA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://dorafactory.org"
    },
    {
        "prefix": 131,
        "network": "litmus",
        "displayName": "Litmus Network",
        "symbols": [
            "LIT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://litentry.com/"
    },
    {
        "prefix": 136,
        "network": "altair",
        "displayName": "Altair",
        "symbols": [
            "AIR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://centrifuge.io/"
    },
    {
        "prefix": 137,
        "network": "vara",
        "displayName": "Vara Network",
        "symbols": [
            "VARA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://vara.network/"
    },
    {
        "prefix": 172,
        "network": "parallel",
        "displayName": "Parallel",
        "symbols": [
            "PARA"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://parallel.fi/"
    },
    {
        "prefix": 252,
        "network": "social-network",
        "displayName": "Social Network",
        "symbols": [
            "NET"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://social.network"
    },
    {
        "prefix": 255,
        "network": "quartz_mainnet",
        "displayName": "QUARTZ by UNIQUE",
        "symbols": [
            "QTZ"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://unique.network"
    },
    {
        "prefix": 268,
        "network": "pioneer_network",
        "displayName": "Pioneer Network by Bit.Country",
        "symbols": [
            "NEER"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://bit.country"
    },
    {
        "prefix": 420,
        "network": "sora_kusama_para",
        "displayName": "SORA Kusama Parachain",
        "symbols": [
            "XOR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://sora.org"
    },
    {
        "prefix": 440,
        "network": "allfeat_network",
        "displayName": "Allfeat Network",
        "symbols": [
            "AFT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://allfeat.network"
    },
    {
        "prefix": 666,
        "network": "metaquity_network",
        "displayName": "Metaquity Network",
        "symbols": [
            "MQTY"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://metaquity.xyz/"
    },
    {
        "prefix": 777,
        "network": "curio",
        "displayName": "Curio",
        "symbols": [
            "CGT"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://parachain.capitaldex.exchange/"
    },
    {
        "prefix": 789,
        "network": "geek",
        "displayName": "GEEK Network",
        "symbols": [
            "GEEK"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://geek.gl"
    },
    {
        "prefix": 995,
        "network": "ternoa",
        "displayName": "Ternoa",
        "symbols": [
            "CAPS"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://www.ternoa.network"
    },
    {
        "prefix": 1110,
        "network": "efinity",
        "displayName": "Efinity",
        "symbols": [
            "EFI"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://efinity.io/"
    },
    {
        "prefix": 1221,
        "network": "peaq",
        "displayName": "Peaq Network",
        "symbols": [
            "PEAQ"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "Sr25519",
        "website": "https://www.peaq.network/"
    },
    {
        "prefix": 1222,
        "network": "krest",
        "displayName": "Krest Network",
        "symbols": [
            "KREST"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "Sr25519",
        "website": "https://www.peaq.network/"
    },
    {
        "prefix": 1284,
        "network": "moonbeam",
        "displayName": "Moonbeam",
        "symbols": [
            "GLMR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://moonbeam.network"
    },
    {
        "prefix": 1285,
        "network": "moonriver",
        "displayName": "Moonriver",
        "symbols": [
            "MOVR"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://moonbeam.network"
    },
    {
        "prefix": 1328,
        "network": "ajuna",
        "displayName": "Ajuna Network",
        "symbols": [
            "AJUN"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://ajuna.io"
    },
    {
        "prefix": 1337,
        "network": "bajun",
        "displayName": "Bajun Network",
        "symbols": [
            "BAJU"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://ajuna.io"
    },
    {
        "prefix": 1516,
        "network": "societal",
        "displayName": "Societal",
        "symbols": [
            "SCTL"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://www.sctl.xyz"
    },
    {
        "prefix": 1985,
        "network": "seals",
        "displayName": "Seals Network",
        "symbols": [
            "SEAL"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://seals.app"
    },
    {
        "prefix": 2007,
        "network": "kapex",
        "displayName": "Kapex",
        "symbols": [
            "KAPEX"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://totemaccounting.com"
    },
    {
        "prefix": 2009,
        "network": "cloudwalk_mainnet",
        "displayName": "CloudWalk Network Mainnet",
        "symbols": [
            "CWN"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://explorer.mainnet.cloudwalk.io"
    },
    {
        "prefix": 2021,
        "network": "logion",
        "displayName": "logion network",
        "symbols": [
            "LGNT"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://logion.network"
    },
    {
        "prefix": 2024,
        "network": "vow-chain",
        "displayName": "Enigmatic Smile",
        "symbols": [
            "VOW"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://www.vow.foundation/"
    },
    {
        "prefix": 2032,
        "network": "interlay",
        "displayName": "Interlay",
        "symbols": [
            "INTR"
        ],
        "decimals": [
            10
        ],
        "standardAccount": "*25519",
        "website": "https://interlay.io/"
    },
    {
        "prefix": 2092,
        "network": "kintsugi",
        "displayName": "Kintsugi",
        "symbols": [
            "KINT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://interlay.io/"
    },
    {
        "prefix": 2106,
        "network": "bitgreen",
        "displayName": "Bitgreen",
        "symbols": [
            "BBB"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://bitgreen.org/"
    },
    {
        "prefix": 2112,
        "network": "chainflip",
        "displayName": "Chainflip",
        "symbols": [
            "FLIP"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://chainflip.io/"
    },
    {
        "prefix": 2199,
        "network": "moonsama",
        "displayName": "Moonsama",
        "symbols": [
            "SAMA"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://moonsama.com"
    },
    {
        "prefix": 2206,
        "network": "ICE",
        "displayName": "ICE Network",
        "symbols": [
            "ICY"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://icenetwork.io"
    },
    {
        "prefix": 2207,
        "network": "SNOW",
        "displayName": "SNOW: ICE Canary Network",
        "symbols": [
            "ICZ"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://icenetwork.io"
    },
    {
        "prefix": 2254,
        "network": "subspace_testnet",
        "displayName": "Subspace testnet",
        "symbols": [
            "tSSC"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://subspace.network"
    },
    {
        "prefix": 3333,
        "network": "peerplays",
        "displayName": "Peerplays",
        "symbols": [
            "PPY"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://www.peerplays.com/"
    },
    {
        "prefix": 4450,
        "network": "g1",
        "displayName": "Ğ1",
        "symbols": [
            "G1"
        ],
        "decimals": [
            2
        ],
        "standardAccount": "*25519",
        "website": "https://duniter.org"
    },
    {
        "prefix": 5234,
        "network": "humanode",
        "displayName": "Humanode Network",
        "symbols": [
            "HMND"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://humanode.io"
    },
    {
        "prefix": 5845,
        "network": "tangle",
        "displayName": "Tangle Network",
        "symbols": [
            "TNT"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://www.tangle.tools/"
    },
    {
        "prefix": 6094,
        "network": "autonomys",
        "displayName": "Autonomys",
        "symbols": [
            "AI3"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://autonomys.xyz"
    },
    {
        "prefix": 7007,
        "network": "tidefi",
        "displayName": "Tidefi",
        "symbols": [
            "TDFY"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://tidefi.com"
    },
    {
        "prefix": 7013,
        "network": "gm",
        "displayName": "GM",
        "symbols": [
            "FREN",
            "GM",
            "GN"
        ],
        "decimals": [
            12,
            0,
            0
        ],
        "standardAccount": "*25519",
        "website": "https://gmordie.com"
    },
    {
        "prefix": 7306,
        "network": "krigan",
        "displayName": "Krigan Network",
        "symbols": [
            "KRGN"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://krigan.network"
    },
    {
        "prefix": 7391,
        "network": "unique_mainnet",
        "displayName": "Unique Network",
        "symbols": [
            "UNQ"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://unique.network"
    },
    {
        "prefix": 8866,
        "network": "golden_gate",
        "displayName": "Golden Gate",
        "symbols": [
            "GGX"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://ggxchain.io/"
    },
    {
        "prefix": 8883,
        "network": "sapphire_mainnet",
        "displayName": "Sapphire by Unique",
        "symbols": [
            "QTZ"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://unique.network"
    },
    {
        "prefix": 8886,
        "network": "golden_gate_sydney",
        "displayName": "Golden Gate Sydney",
        "symbols": [
            "GGXT"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://ggxchain.io/"
    },
    {
        "prefix": 9072,
        "network": "hashed",
        "displayName": "Hashed Network",
        "symbols": [
            "HASH"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://hashed.network"
    },
    {
        "prefix": 9807,
        "network": "dentnet",
        "displayName": "DENTNet",
        "symbols": [
            "DENTX"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://www.dentnet.io"
    },
    {
        "prefix": 9935,
        "network": "t3rn",
        "displayName": "t3rn",
        "symbols": [
            "TRN"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://t3rn.io/"
    },
    {
        "prefix": 10041,
        "network": "basilisk",
        "displayName": "Basilisk",
        "symbols": [
            "BSX"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://bsx.fi"
    },
    {
        "prefix": 11330,
        "network": "cess-testnet",
        "displayName": "CESS Testnet",
        "symbols": [
            "TCESS"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://cess.cloud"
    },
    {
        "prefix": 11331,
        "network": "cess",
        "displayName": "CESS",
        "symbols": [
            "CESS"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://cess.cloud"
    },
    {
        "prefix": 11486,
        "network": "luhn",
        "displayName": "Luhn Network",
        "symbols": [
            "LUHN"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://luhn.network"
    },
    {
        "prefix": 11820,
        "network": "contextfree",
        "displayName": "Automata ContextFree",
        "symbols": [
            "CTX"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://ata.network"
    },
    {
        "prefix": 12155,
        "network": "impact",
        "displayName": "Impact Protocol Network",
        "symbols": [
            "BSTY"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://impactprotocol.network/"
    },
    {
        "prefix": 12191,
        "network": "nftmart",
        "displayName": "NFTMart",
        "symbols": [
            "NMT"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://nftmart.io"
    },
    {
        "prefix": 12850,
        "network": "analog-timechain",
        "displayName": "Analog Timechain",
        "symbols": [
            "ANLOG"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://analog.one"
    },
    {
        "prefix": 13116,
        "network": "bittensor",
        "displayName": "Bittensor",
        "symbols": [
            "TAO"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://bittensor.com"
    },
    {
        "prefix": 14697,
        "network": "goro",
        "displayName": "GORO Network",
        "symbols": [
            "GORO"
        ],
        "decimals": [
            9
        ],
        "standardAccount": "*25519",
        "website": "https://goro.network"
    },
    {
        "prefix": 14998,
        "network": "mosaic-chain",
        "displayName": "Mosaic Chain",
        "symbols": [
            "MOS"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "*25519",
        "website": "https://mosaicchain.io"
    },
    {
        "prefix": 29972,
        "network": "mythos",
        "displayName": "Mythos",
        "symbols": [
            "MYTH"
        ],
        "decimals": [
            18
        ],
        "standardAccount": "secp256k1",
        "website": "https://mythos.foundation"
    },
    {
        "prefix": 8888,
        "network": "xcavate",
        "displayName": "Xcavate Protocol",
        "symbols": [
            "XCAV"
        ],
        "decimals": [
            12
        ],
        "standardAccount": "*25519",
        "website": "https://xcavate.io/"
    }
];
}),
"[project]/node_modules/@polkadot/networks/defaults/genesis.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "knownGenesis",
    ()=>knownGenesis
]);
const knownGenesis = {
    acala: [
        '0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'
    ],
    ajuna: [
        '0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee'
    ],
    'aleph-node': [
        '0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e'
    ],
    astar: [
        '0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'
    ],
    basilisk: [
        '0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'
    ],
    bifrost: [
        '0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b'
    ],
    'bifrost-kusama': [
        '0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed'
    ],
    bittensor: [
        '0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03'
    ],
    centrifuge: [
        '0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82',
        '0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'
    ],
    cere: [
        '0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c'
    ],
    composable: [
        '0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d'
    ],
    creditcoin3: [
        '0x4436a7d64e363df85e065a894721002a86643283f9707338bf195d360ba2ee71',
        '0xfc4ec97a1c1f119c4353aecb4a17c7c0cf7b40d5d660143d8bad9117e9866572',
        '0xfc9df99a665f964aed6649f275055e54df5e3420489538ed31d7788f53d11ef6' // cc3 devnet
    ],
    darwinia: [
        '0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6'
    ],
    dentnet: [
        '0x0313f6a011d128d22f996703cbab05162e2fdc9e031493314fe6db79979c5ca7'
    ],
    'dock-mainnet': [
        '0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae',
        '0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'
    ],
    edgeware: [
        '0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'
    ],
    encointer: [
        '0x7dd99936c1e9e6d1ce7d90eb6f33bea8393b4bf87677d675aa63c9cb3e8c5b5b'
    ],
    enjin: [
        '0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9'
    ],
    equilibrium: [
        '0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'
    ],
    frequency: [
        '0x4a587bf17a404e3572747add7aab7bbe56e805a5479c6c436f07f36fcc8d3ae1'
    ],
    genshiro: [
        '0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'
    ],
    hydradx: [
        '0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d',
        '0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc',
        '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9',
        '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047',
        '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1
    ],
    integritee: [
        '0xcdedc8eadbfa209d3f207bba541e57c3c58a667b05a2e1d1e86353c9000758da',
        '0xe13e7af377c64e83f95e0d70d5e5c3c01d697a84538776c5b9bbe0e7d7b6034c' // on Polkadot
    ],
    'interlay-parachain': [
        '0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72'
    ],
    karura: [
        '0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'
    ],
    khala: [
        '0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d'
    ],
    kulupu: [
        '0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'
    ],
    kusama: [
        '0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe',
        '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636',
        '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1
    ],
    liberland: [
        '0x6bd89e052d67a45bb60a9a23e8581053d5e0d619f15cb9865946937e690c42d6'
    ],
    matrixchain: [
        '0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615'
    ],
    mythos: [
        '0xf6ee56e9c5277df5b4ce6ae9983ee88f3cbed27d31beeb98f9f84f997a1ab0b9'
    ],
    nodle: [
        '0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21'
    ],
    origintrail: [
        '0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174'
    ],
    p3d: [
        '0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66'
    ],
    parallel: [
        '0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97'
    ],
    peaq: [
        '0xd2a5d385932d1f650dae03ef8e2748983779ee342c614f80854d32b8cd8fa48c'
    ],
    pendulum: [
        '0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86'
    ],
    phala: [
        '0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736'
    ],
    picasso: [
        '0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc',
        '0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'
    ],
    polimec: [
        '0x7eb9354488318e7549c722669dcbdcdc526f1fef1420e7944667212f3601fdbd'
    ],
    polkadex: [
        '0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c'
    ],
    polkadot: [
        '0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'
    ],
    polymesh: [
        '0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'
    ],
    quartz: [
        '0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554'
    ],
    rococo: [
        '0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e',
        '0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897',
        '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770',
        '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff',
        '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a',
        '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9',
        '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779',
        '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215',
        '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9',
        '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147',
        '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd',
        '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'
    ],
    sora: [
        '0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'
    ],
    stafi: [
        '0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'
    ],
    statemine: [
        '0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'
    ],
    statemint: [
        '0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f'
    ],
    subsocial: [
        '0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8'
    ],
    ternoa: [
        '0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e'
    ],
    unique: [
        '0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31'
    ],
    vara: [
        '0xfe1b4c55fd4d668101126434206571a7838a8b6b93a6d1b95d607e78e6c53763'
    ],
    vtb: [
        '0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f',
        '0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa'
    ],
    westend: [
        '0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'
    ],
    xxnetwork: [
        '0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa'
    ],
    zeitgeist: [
        '0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060'
    ]
};
}),
"[project]/node_modules/@polkadot/networks/defaults/icons.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "knownIcon",
    ()=>knownIcon
]);
const knownIcon = {
    centrifuge: 'polkadot',
    kusama: 'polkadot',
    polkadot: 'polkadot',
    sora: 'polkadot',
    statemine: 'polkadot',
    statemint: 'polkadot',
    westmint: 'polkadot'
};
}),
"[project]/node_modules/@polkadot/networks/defaults/ledger.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "knownLedger",
    ()=>knownLedger
]);
const knownLedger = {
    acala: 0x00000313,
    ajuna: 0x00000162,
    'aleph-node': 0x00000283,
    astar: 0x0000032a,
    bifrost: 0x00000314,
    'bifrost-kusama': 0x00000314,
    bittensor: 0x00000162,
    centrifuge: 0x000002eb,
    composable: 0x00000162,
    creditcoin3: 0x00000162,
    darwinia: 0x00000162,
    dentnet: 0x000002de,
    'dock-mainnet': 0x00000252,
    edgeware: 0x0000020b,
    encointer: 0x000001b2,
    enjin: 0x00000483,
    equilibrium: 0x05f5e0fd,
    frequency: 0x0000082b,
    genshiro: 0x05f5e0fc,
    hydradx: 0x00000162,
    integritee: 0x000007df,
    'interlay-parachain': 0x00000162,
    karura: 0x000002ae,
    khala: 0x000001b2,
    kusama: 0x000001b2,
    liberland: 0x000002ff,
    matrixchain: 0x00000483,
    mythos: 0x0000003c,
    nodle: 0x000003eb,
    origintrail: 0x00000162,
    parallel: 0x00000162,
    peaq: 0x00000d0a,
    pendulum: 0x00000162,
    phala: 0x00000162,
    picasso: 0x000001b2,
    polimec: 0x00000d10,
    polkadex: 0x0000031f,
    polkadot: 0x00000162,
    polymesh: 0x00000253,
    quartz: 0x00000277,
    sora: 0x00000269,
    stafi: 0x0000038b,
    statemine: 0x000001b2,
    statemint: 0x00000162,
    ternoa: 0x00003e3,
    unique: 0x00000295,
    vara: 0x00001370,
    vtb: 0x000002b6,
    xxnetwork: 0x000007a3,
    zeitgeist: 0x00000162
};
}),
"[project]/node_modules/@polkadot/networks/defaults/testnets.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "knownTestnet",
    ()=>knownTestnet
]);
const knownTestnet = {
    '': true,
    'cess-testnet': true,
    'dock-testnet': true,
    jupiter: true,
    'mathchain-testnet': true,
    p3dt: true,
    subspace_testnet: true,
    'zero-alphaville': true
};
}),
"[project]/node_modules/@polkadot/networks/interfaces.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "allNetworks",
    ()=>allNetworks,
    "availableNetworks",
    ()=>availableNetworks,
    "selectableNetworks",
    ()=>selectableNetworks
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$substrate$2f$ss58$2d$registry$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@substrate/ss58-registry/esm/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$genesis$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/networks/defaults/genesis.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$icons$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/networks/defaults/icons.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$ledger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/networks/defaults/ledger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$testnets$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/networks/defaults/testnets.js [app-ssr] (ecmascript)");
;
;
const UNSORTED = [
    0,
    2,
    42
];
const TESTNETS = [
    'testnet'
];
function toExpanded(o) {
    const network = o.network || '';
    const nameParts = network.replace(/_/g, '-').split('-');
    const n = o;
    // ledger additions
    n.slip44 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$ledger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["knownLedger"][network];
    n.hasLedgerSupport = !!n.slip44;
    // general items
    n.genesisHash = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$genesis$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["knownGenesis"][network] || [];
    n.icon = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$icons$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["knownIcon"][network] || 'substrate';
    // filtering
    n.isTestnet = !!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$networks$2f$defaults$2f$testnets$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["knownTestnet"][network] || TESTNETS.includes(nameParts[nameParts.length - 1]);
    n.isIgnored = n.isTestnet || !(o.standardAccount && o.decimals?.length && o.symbols?.length) && o.prefix !== 42;
    return n;
}
function filterSelectable({ genesisHash, prefix }) {
    return !!genesisHash.length || prefix === 42;
}
function filterAvailable(n) {
    return !n.isIgnored && !!n.network;
}
function sortNetworks(a, b) {
    const isUnSortedA = UNSORTED.includes(a.prefix);
    const isUnSortedB = UNSORTED.includes(b.prefix);
    return isUnSortedA === isUnSortedB ? isUnSortedA ? 0 : a.displayName.localeCompare(b.displayName) : isUnSortedA ? -1 : 1;
}
const allNetworks = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$substrate$2f$ss58$2d$registry$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].map(toExpanded);
const availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks);
const selectableNetworks = availableNetworks.filter(filterSelectable);
}),
"[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript)", ((__turbopack_context__, module, exports) => {

(function(module1, exports) {
    'use strict';
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {};
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) {
            return number;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if ("TURBOPACK compile-time truthy", 1) {
        module1.exports = BN;
    } else //TURBOPACK unreachable
    ;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
        ;
        else {
            Buffer = __turbopack_context__.r("[externals]/buffer [external] (buffer, cjs)").Buffer;
        }
    } catch (e) {}
    BN.isBN = function isBN(num) {
        if (num instanceof BN) {
            return true;
        }
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') {
            return this._initNumber(number, base, endian);
        }
        if (typeof number === 'object') {
            return this._initArray(number, base, endian);
        }
        if (base === 'hex') {
            base = 16;
        }
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) {
                this._parseHex(number, start, endian);
            } else {
                this._parseBase(number, base, start);
                if (endian === 'le') {
                    this._initArray(this.toArray(), base, endian);
                }
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 0x4000000) {
            this.words = [
                number & 0x3ffffff
            ];
            this.length = 1;
        } else if (number < 0x10000000000000) {
            this.words = [
                number & 0x3ffffff,
                number / 0x4000000 & 0x3ffffff
            ];
            this.length = 2;
        } else {
            assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
            this.words = [
                number & 0x3ffffff,
                number / 0x4000000 & 0x3ffffff,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++){
            this.words[i] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === 'be') {
            for(i = number.length - 1, j = 0; i >= 0; i -= 3){
                w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
                this.words[j] |= w << off & 0x3ffffff;
                this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
                off += 24;
                if (off >= 26) {
                    off -= 26;
                    j++;
                }
            }
        } else if (endian === 'le') {
            for(i = 0, j = 0; i < number.length; i += 3){
                w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
                this.words[j] |= w << off & 0x3ffffff;
                this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
                off += 24;
                if (off >= 26) {
                    off -= 26;
                    j++;
                }
            }
        }
        return this._strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // '0' - '9'
        if (c >= 48 && c <= 57) {
            return c - 48;
        // 'A' - 'F'
        } else if (c >= 65 && c <= 70) {
            return c - 55;
        // 'a' - 'f'
        } else if (c >= 97 && c <= 102) {
            return c - 87;
        } else {
            assert(false, 'Invalid character in ' + string);
        }
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) {
            r |= parseHex4Bits(string, index - 1) << 4;
        }
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++){
            this.words[i] = 0;
        }
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === 'be') {
            for(i = number.length - 1; i >= start; i -= 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 0x3ffffff;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else {
                    off += 8;
                }
            }
        } else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 0x3ffffff;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else {
                    off += 8;
                }
            }
        }
        this._strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) {
                b = c - 49 + 0xa;
            // 'A'
            } else if (c >= 17) {
                b = c - 17 + 0xa;
            // '0' - '9'
            } else {
                b = c;
            }
            assert(c >= 0 && b < mul, 'Invalid character');
            r += b;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base){
            limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 0x4000000) {
                this.words[0] += word;
            } else {
                this._iaddn(word);
            }
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++){
                pow *= base;
            }
            this.imuln(pow);
            if (this.words[0] + word < 0x4000000) {
                this.words[0] += word;
            } else {
                this._iaddn(word);
            }
        }
        this._strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++){
            dest.words[i] = this.words[i];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    function move(dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
    }
    BN.prototype._move = function _move(dest) {
        move(dest, this);
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size){
            this.words[this.length++] = 0;
        }
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype._strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0){
            this.length--;
        }
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) {
            this.negative = 0;
        }
        return this;
    };
    // Check Symbol.for because not everywhere where Symbol defined
    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
    if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {
        try {
            BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
        } catch (e) {
            BN.prototype.inspect = inspect;
        }
    } else {
        BN.prototype.inspect = inspect;
    }
    function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    }
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 0xffffff).toString(16);
                carry = w >>> 24 - off & 0xffffff;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
                if (carry !== 0 || i !== this.length - 1) {
                    out = zeros[6 - word.length] + word + out;
                } else {
                    out = word + out;
                }
            }
            if (carry !== 0) {
                out = carry.toString(16) + out;
            }
            while(out.length % padding !== 0){
                out = '0' + out;
            }
            if (this.negative !== 0) {
                out = '-' + out;
            }
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modrn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) {
                    out = zeros[groupSize - r.length] + r + out;
                } else {
                    out = r + out;
                }
            }
            if (this.isZero()) {
                out = '0' + out;
            }
            while(out.length % padding !== 0){
                out = '0' + out;
            }
            if (this.negative !== 0) {
                out = '-' + out;
            }
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
            ret += this.words[1] * 0x4000000;
        } else if (this.length === 3 && this.words[2] === 0x01) {
            // NOTE: at this stage it is known that the top bit is set
            ret += 0x10000000000000 + this.words[1] * 0x4000000;
        } else if (this.length > 2) {
            assert(false, 'Number can only safely store up to 53 bits');
        }
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16, 2);
    };
    if (Buffer) {
        BN.prototype.toBuffer = function toBuffer(endian, length) {
            return this.toArrayLike(Buffer, endian, length);
        };
    }
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    var allocate = function allocate(ArrayType, size) {
        if (ArrayType.allocUnsafe) {
            return ArrayType.allocUnsafe(size);
        }
        return new ArrayType(size);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        this._strip();
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        var res = allocate(ArrayType, reqLength);
        var postfix = endian === 'le' ? 'LE' : 'BE';
        this['_toArrayLike' + postfix](res, byteLength);
        return res;
    };
    BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
        var position = 0;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position++] = word & 0xff;
            if (position < res.length) {
                res[position++] = word >> 8 & 0xff;
            }
            if (position < res.length) {
                res[position++] = word >> 16 & 0xff;
            }
            if (shift === 6) {
                if (position < res.length) {
                    res[position++] = word >> 24 & 0xff;
                }
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position < res.length) {
            res[position++] = carry;
            while(position < res.length){
                res[position++] = 0;
            }
        }
    };
    BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
        var position = res.length - 1;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position--] = word & 0xff;
            if (position >= 0) {
                res[position--] = word >> 8 & 0xff;
            }
            if (position >= 0) {
                res[position--] = word >> 16 & 0xff;
            }
            if (shift === 6) {
                if (position >= 0) {
                    res[position--] = word >> 24 & 0xff;
                }
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position >= 0) {
            res[position--] = carry;
            while(position >= 0){
                res[position--] = 0;
            }
        }
    };
    if (Math.clz32) {
        BN.prototype._countBits = function _countBits(w) {
            return 32 - Math.clz32(w);
        };
    } else {
        BN.prototype._countBits = function _countBits(w) {
            var t = w;
            var r = 0;
            if (t >= 0x1000) {
                r += 13;
                t >>>= 13;
            }
            if (t >= 0x40) {
                r += 7;
                t >>>= 7;
            }
            if (t >= 0x8) {
                r += 4;
                t >>>= 4;
            }
            if (t >= 0x02) {
                r += 2;
                t >>>= 2;
            }
            return r + t;
        };
    }
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 0x1fff) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 0x7f) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 0xf) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 0x3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 0x1) === 0) {
            r++;
        }
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = num.words[off] >>> wbit & 0x01;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
            return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
            return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) {
            this.negative ^= 1;
        }
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length){
            this.words[this.length++] = 0;
        }
        for(var i = 0; i < num.length; i++){
            this.words[i] = this.words[i] | num.words[i];
        }
        return this._strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) {
            b = num;
        } else {
            b = this;
        }
        for(var i = 0; i < b.length; i++){
            this.words[i] = this.words[i] & num.words[i];
        }
        this.length = b.length;
        return this._strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++){
            this.words[i] = a.words[i] ^ b.words[i];
        }
        if (this !== a) {
            for(; i < a.length; i++){
                this.words[i] = a.words[i];
            }
        }
        this.length = a.length;
        return this._strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
            bytesNeeded--;
        }
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++){
            this.words[i] = ~this.words[i] & 0x3ffffff;
        }
        // Handle the residue
        if (bitsLeft > 0) {
            this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;
        }
        // And remove leading zeroes
        return this._strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
            this.words[off] = this.words[off] | 1 << wbit;
        } else {
            this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this._strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 0x3ffffff;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 0x3ffffff;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) {
            for(; i < a.length; i++){
                this.words[i] = a.words[i];
            }
        }
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 0x3ffffff;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 0x3ffffff;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) {
            for(; i < a.length; i++){
                this.words[i] = a.words[i];
            }
        }
        this.length = Math.max(this.length, i);
        if (a !== this) {
            this.negative = 1;
        }
        return this._strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 0x3ffffff;
        var carry = r / 0x4000000 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 0x3ffffff;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 0x4000000 | 0;
                rword = r & 0x3ffffff;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) {
            out.words[k] = carry | 0;
        } else {
            out.length--;
        }
        return out._strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 0x1fff;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 0x1fff;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 0x1fff;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 0x1fff;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 0x1fff;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 0x1fff;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 0x1fff;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 0x1fff;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 0x1fff;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 0x1fff;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 0x1fff;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 0x1fff;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 0x1fff;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 0x1fff;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 0x1fff;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 0x1fff;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 0x1fff;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 0x1fff;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 0x1fff;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 0x1fff;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 0x3ffffff;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 0x3ffffff;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 0x3ffffff;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 0x3ffffff;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 0x3ffffff;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 0x3ffffff;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 0x3ffffff;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 0x3ffffff;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 0x3ffffff;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 0x3ffffff;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 0x3ffffff;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 0x3ffffff;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 0x3ffffff;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 0x3ffffff;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 0x3ffffff;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 0x3ffffff;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 0x3ffffff;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 0x3ffffff;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 0x3ffffff;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) {
        comb10MulTo = smallMulTo;
    }
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 0x3ffffff;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 0x3ffffff;
                ncarry = ncarry + (r / 0x4000000 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 0x3ffffff;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 0x3ffffff;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) {
            out.words[k] = carry;
        } else {
            out.length--;
        }
        return out._strip();
    }
    function jumboMulTo(self, num, out) {
        // Temporary disable, see https://github.com/indutny/bn.js/issues/211
        // var fftm = new FFTM();
        // return fftm.mulp(self, num, out);
        return bigMulTo(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
            res = comb10MulTo(this, num, out);
        } else if (len < 63) {
            res = smallMulTo(this, num, out);
        } else if (len < 1024) {
            res = bigMulTo(this, num, out);
        } else {
            res = jumboMulTo(this, num, out);
        }
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++){
            t[i] = this.revBin(i, l, N);
        }
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1){
            i++;
        }
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 0x3ffffff;
            if (w < 0x4000000) {
                carry = 0;
            } else {
                carry = w / 0x4000000 | 0;
            }
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 0x1fff;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 0x1fff;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i){
            rws[i] = 0;
        }
        assert(carry === 0);
        assert((carry & ~0x1fff) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++){
            ph[i] = 0;
        }
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out._strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(typeof num === 'number');
        assert(num < 0x4000000);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
            carry >>= 26;
            carry += w / 0x4000000 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 0x3ffffff;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        this.length = num === 0 ? 1 : this.length;
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if (++i < w.length) {
            for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
                if (w[i] === 0) continue;
                res = res.mul(q);
            }
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 0x3ffffff >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--){
                this.words[i + s] = this.words[i];
            }
            for(i = 0; i < s; i++){
                this.words[i] = 0;
            }
            this.length += s;
        }
        return this._strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) {
            h = (hint - hint % 26) / 26;
        } else {
            h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++){
                maskedWords.words[i] = this.words[i];
            }
            maskedWords.length = s;
        }
        if (s === 0) {
        // No-op, we should not move anything at all
        } else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++){
                this.words[i] = this.words[i + s];
            }
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) {
            maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this._strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) {
            return this;
        }
        if (r !== 0) {
            s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this._strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 0x4000000);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) <= num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 0x4000000; i++){
            this.words[i] -= 0x4000000;
            if (i === this.length - 1) {
                this.words[i + 1] = 1;
            } else {
                this.words[i + 1]++;
            }
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 0x4000000);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else {
            // Carry
            for(var i = 0; i < this.length && this.words[i] < 0; i++){
                this.words[i] += 0x4000000;
                this.words[i + 1] -= 1;
            }
        }
        return this._strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul;
            w -= right & 0x3ffffff;
            carry = (w >> 26) - (right / 0x4000000 | 0);
            this.words[i + shift] = w & 0x3ffffff;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 0x3ffffff;
        }
        if (carry === 0) return this._strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 0x3ffffff;
        }
        this.negative = 1;
        return this._strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++){
                q.words[i] = 0;
            }
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) {
                q.words[m] = 1;
            }
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 0x3ffffff);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) {
                    a.negative ^= 1;
                }
            }
            if (q) {
                q.words[j] = qj;
            }
        }
        if (q) {
            q._strip();
        }
        a._strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) {
            a.iushrn(shift);
        }
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) {
            return {
                div: new BN(0),
                mod: new BN(0)
            };
        }
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') {
                div = res.div.neg();
            }
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) {
                    mod.iadd(num);
                }
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') {
                div = res.div.neg();
            }
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) {
                    mod.isub(num);
                }
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) {
            return {
                div: new BN(0),
                mod: this
            };
        }
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') {
                return {
                    div: this.divn(num.words[0]),
                    mod: null
                };
            }
            if (mode === 'mod') {
                return {
                    div: null,
                    mod: new BN(this.modrn(num.words[0]))
                };
            }
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modrn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modrn = function modrn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 0x3ffffff);
        var p = (1 << 26) % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--){
            acc = (p * acc + (this.words[i] | 0)) % num;
        }
        return isNegNum ? -acc : acc;
    };
    // WARNING: DEPRECATED
    BN.prototype.modn = function modn(num) {
        return this.modrn(num);
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 0x3ffffff);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 0x4000000;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        this._strip();
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
            x = x.umod(p);
        } else {
            x = x.clone();
        }
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while(i-- > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while(j-- > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) {
            a = a.umod(p);
        } else {
            a = a.clone();
        }
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while(i-- > 0){
                    if (x1.isOdd()) {
                        x1.iadd(delta);
                    }
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while(j-- > 0){
                    if (x2.isOdd()) {
                        x2.iadd(delta);
                    }
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) {
            res = x1;
        } else {
            res = x2;
        }
        if (res.cmpn(0) < 0) {
            res.iadd(p);
        }
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven()){
                a.iushrn(1);
            }
            while(b.isEven()){
                b.iushrn(1);
            }
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) {
                break;
            }
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 0x3ffffff;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this._strip();
        var res;
        if (this.length > 1) {
            res = 1;
        } else {
            if (negative) {
                num = -num;
            }
            assert(num <= 0x3ffffff, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) {
                res = -1;
            } else if (a > b) {
                res = 1;
            }
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp > 0) {
            r.isub(this.p);
        } else {
            if (r.strip !== undefined) {
                // r is a BN v4 instance
                r.strip();
            } else {
                // r is a BN v5 instance
                r._strip();
            }
        }
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 0x3fffff;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++){
            output.words[i] = input.words[i];
        }
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) {
            input.length -= 10;
        } else {
            input.length -= 9;
        }
    };
    K256.prototype.imulK = function imulK(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 0x3d1;
            num.words[i] = lo & 0x3ffffff;
            lo = w * 0x40 + (lo / 0x4000000 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) {
                num.length--;
            }
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 0x13 + carry;
            var lo = hi & 0x3ffffff;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) {
            num.words[num.length++] = carry;
        }
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') {
            prime = new K256();
        } else if (name === 'p224') {
            prime = new P224();
        } else if (name === 'p192') {
            prime = new P192();
        } else if (name === 'p25519') {
            prime = new P25519();
        } else {
            throw new Error('Unknown prime ' + name);
        }
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime = BN._prime(m);
            this.m = prime.p;
            this.prime = prime;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        move(a, a.umod(this.m)._forceRed(this));
        return a;
    };
    Red.prototype.neg = function neg(a) {
        if (a.isZero()) {
            return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
        }
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
        }
        return res;
    };
    Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) {
            res.iadd(this.m);
        }
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) {
            res.iadd(this.m);
        }
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0){
            z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++){
                tmp = tmp.redSqr();
            }
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else {
            return this.imod(inv);
        }
    };
    Red.prototype.pow = function pow(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++){
            wnd[i] = this.mul(wnd[i - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
            start = 26;
        }
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) {
                    res = this.sqr(res);
                }
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
            this.shift += 26 - this.shift % 26;
        }
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
        }
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
        }
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})(("TURBOPACK compile-time value", "object") === 'undefined' || module, /*TURBOPACK member replacement*/ __turbopack_context__.e);
}),
"[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BN",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/keyring/pair/defaults.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/** public/secret section divider (generation 1-3, will change in 4, don't rely on value) */ __turbopack_context__.s([
    "PAIR_DIV",
    ()=>PAIR_DIV,
    "PAIR_HDR",
    ()=>PAIR_HDR,
    "PUB_LENGTH",
    ()=>PUB_LENGTH,
    "SALT_LENGTH",
    ()=>SALT_LENGTH,
    "SEC_LENGTH",
    ()=>SEC_LENGTH,
    "SEED_LENGTH",
    ()=>SEED_LENGTH
]);
const PAIR_DIV = new Uint8Array([
    161,
    35,
    3,
    33,
    0
]);
const PAIR_HDR = new Uint8Array([
    48,
    83,
    2,
    1,
    1,
    48,
    5,
    6,
    3,
    43,
    101,
    112,
    4,
    34,
    4,
    32
]);
const PUB_LENGTH = 32;
const SALT_LENGTH = 32;
const SEC_LENGTH = 64;
const SEED_LENGTH = 32;
}),
"[project]/node_modules/@polkadot/keyring/pair/decode.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "decodePair",
    ()=>decodePair
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/eq.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$json$2f$decryptData$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/json/decryptData.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/keyring/pair/defaults.js [app-ssr] (ecmascript)");
;
;
;
const SEED_OFFSET = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PAIR_HDR"].length;
function decodePair(passphrase, encrypted, _encType) {
    const encType = Array.isArray(_encType) || _encType === undefined ? _encType : [
        _encType
    ];
    const decrypted = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$json$2f$decryptData$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsonDecryptData"])(encrypted, passphrase, encType);
    const header = decrypted.subarray(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PAIR_HDR"].length);
    // check the start header (generations 1-3)
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aEq"])(header, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PAIR_HDR"])) {
        throw new Error('Invalid encoding header found in body');
    }
    // setup for generation 3 format
    let secretKey = decrypted.subarray(SEED_OFFSET, SEED_OFFSET + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SEC_LENGTH"]);
    let divOffset = SEED_OFFSET + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SEC_LENGTH"];
    let divider = decrypted.subarray(divOffset, divOffset + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PAIR_DIV"].length);
    // old-style (generation 1 & 2), we have the seed here
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aEq"])(divider, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PAIR_DIV"])) {
        divOffset = SEED_OFFSET + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SEED_LENGTH"];
        secretKey = decrypted.subarray(SEED_OFFSET, divOffset);
        divider = decrypted.subarray(divOffset, divOffset + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PAIR_DIV"].length);
        // check the divisior at this point (already checked for generation 3)
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aEq"])(divider, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PAIR_DIV"])) {
            throw new Error('Invalid encoding divider found in body');
        }
    }
    const pubOffset = divOffset + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PAIR_DIV"].length;
    const publicKey = decrypted.subarray(pubOffset, pubOffset + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PUB_LENGTH"]);
    return {
        publicKey,
        secretKey
    };
}
}),
"[project]/node_modules/@polkadot/keyring/pair/encode.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "encodePair",
    ()=>encodePair
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$nacl$2f$encrypt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/nacl/encrypt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$scrypt$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/scrypt/encode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$scrypt$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/scrypt/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/keyring/pair/defaults.js [app-ssr] (ecmascript)");
;
;
;
function encodePair({ publicKey, secretKey }, passphrase) {
    if (!secretKey) {
        throw new Error('Expected a valid secretKey to be passed to encode');
    }
    const encoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PAIR_HDR"], secretKey, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PAIR_DIV"], publicKey);
    if (!passphrase) {
        return encoded;
    }
    // this is only for generation 3 (previous generations are only handled in decoding)
    const { params, password, salt } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$scrypt$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["scryptEncode"])(passphrase);
    const { encrypted, nonce } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$nacl$2f$encrypt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["naclEncrypt"])(encoded, password.subarray(0, 32));
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$scrypt$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["scryptToU8a"])(salt, params), nonce, encrypted);
}
}),
"[project]/node_modules/@polkadot/keyring/pair/toJson.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "pairToJson",
    ()=>pairToJson
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$json$2f$encryptFormat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/json/encryptFormat.js [app-ssr] (ecmascript)");
;
;
function pairToJson(type, { address, meta }, encoded, isEncrypted) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$json$2f$encryptFormat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsonEncryptFormat"])(encoded, [
        'pkcs8',
        type
    ], isEncrypted), {
        address,
        meta
    });
}
}),
"[project]/node_modules/@polkadot/keyring/pair/index.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createPair",
    ()=>createPair
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$empty$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/empty.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/eq.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/blake2/asU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ed25519$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ed25519$2f$sign$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/ed25519/sign.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ethereum$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/ethereum/encode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$keccak$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/keccak/asU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$key$2f$extractPath$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/key/extractPath.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$key$2f$fromPath$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/key/fromPath.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$compress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/secp256k1/compress.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$expand$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/secp256k1/expand.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$sign$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/secp256k1/sign.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$signature$2f$verify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/signature/verify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$sr25519$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/sr25519/pair/fromSeed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$sr25519$2f$sign$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/sr25519/sign.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$sr25519$2f$vrfSign$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/sr25519/vrfSign.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$sr25519$2f$vrfVerify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/sr25519/vrfVerify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/keyring/pair/decode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/keyring/pair/encode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$toJson$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/keyring/pair/toJson.js [app-ssr] (ecmascript)");
;
;
;
;
;
const SIG_TYPE_NONE = new Uint8Array();
const TYPE_FROM_SEED = {
    ecdsa: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["secp256k1PairFromSeed"],
    ed25519: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ed25519$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ed25519PairFromSeed"],
    ethereum: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["secp256k1PairFromSeed"],
    sr25519: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$sr25519$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sr25519PairFromSeed"]
};
const TYPE_PREFIX = {
    ecdsa: new Uint8Array([
        2
    ]),
    ed25519: new Uint8Array([
        0
    ]),
    ethereum: new Uint8Array([
        2
    ]),
    sr25519: new Uint8Array([
        1
    ])
};
const TYPE_SIGNATURE = {
    ecdsa: (m, p)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$sign$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["secp256k1Sign"])(m, p, 'blake2'),
    ed25519: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ed25519$2f$sign$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ed25519Sign"],
    ethereum: (m, p)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$sign$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["secp256k1Sign"])(m, p, 'keccak'),
    sr25519: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$sr25519$2f$sign$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sr25519Sign"]
};
const TYPE_ADDRESS = {
    ecdsa: (p)=>p.length > 32 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["blake2AsU8a"])(p) : p,
    ed25519: (p)=>p,
    ethereum: (p)=>p.length === 20 ? p : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$keccak$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["keccakAsU8a"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$expand$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["secp256k1Expand"])(p)),
    sr25519: (p)=>p
};
function isLocked(secretKey) {
    return !secretKey || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$empty$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aEmpty"])(secretKey);
}
function vrfHash(proof, context, extra) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$blake2$2f$asU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["blake2AsU8a"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])(context || '', extra || '', proof));
}
function createPair({ toSS58, type }, { publicKey, secretKey }, meta = {}, encoded = null, encTypes) {
    const decodePkcs8 = (passphrase, userEncoded)=>{
        const decoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodePair"])(passphrase, userEncoded || encoded, encTypes);
        if (decoded.secretKey.length === 64) {
            publicKey = decoded.publicKey;
            secretKey = decoded.secretKey;
        } else {
            const pair = TYPE_FROM_SEED[type](decoded.secretKey);
            publicKey = pair.publicKey;
            secretKey = pair.secretKey;
        }
    };
    const recode = (passphrase)=>{
        isLocked(secretKey) && encoded && decodePkcs8(passphrase, encoded);
        encoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encodePair"])({
            publicKey,
            secretKey
        }, passphrase); // re-encode, latest version
        encTypes = undefined; // swap to defaults, latest version follows
        return encoded;
    };
    const encodeAddress = ()=>{
        const raw = TYPE_ADDRESS[type](publicKey);
        return type === 'ethereum' ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ethereum$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ethereumEncode"])(raw) : toSS58(raw);
    };
    return {
        get address () {
            return encodeAddress();
        },
        get addressRaw () {
            const raw = TYPE_ADDRESS[type](publicKey);
            return type === 'ethereum' ? raw.slice(-20) : raw;
        },
        get isLocked () {
            return isLocked(secretKey);
        },
        get meta () {
            return meta;
        },
        get publicKey () {
            return publicKey;
        },
        get type () {
            return type;
        },
        // eslint-disable-next-line sort-keys
        decodePkcs8,
        derive: (suri, meta)=>{
            if (type === 'ethereum') {
                throw new Error('Unable to derive on this keypair');
            } else if (isLocked(secretKey)) {
                throw new Error('Cannot derive on a locked keypair');
            }
            const { path } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$key$2f$extractPath$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["keyExtractPath"])(suri);
            const derived = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$key$2f$fromPath$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["keyFromPath"])({
                publicKey,
                secretKey
            }, path, type);
            return createPair({
                toSS58,
                type
            }, derived, meta, null);
        },
        encodePkcs8: (passphrase)=>{
            return recode(passphrase);
        },
        lock: ()=>{
            secretKey = new Uint8Array();
        },
        setMeta: (additional)=>{
            meta = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, meta, additional);
        },
        sign: (message, options = {})=>{
            if (isLocked(secretKey)) {
                throw new Error('Cannot sign with a locked key pair');
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])(options.withType ? TYPE_PREFIX[type] : SIG_TYPE_NONE, TYPE_SIGNATURE[type]((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(message), {
                publicKey,
                secretKey
            }));
        },
        toJson: (passphrase)=>{
            // NOTE: For ecdsa and ethereum, the publicKey cannot be extracted from the address. For these
            // pass the hex-encoded publicKey through to the address portion of the JSON (before decoding)
            // unless the publicKey is already an address
            const address = [
                'ecdsa',
                'ethereum'
            ].includes(type) ? publicKey.length === 20 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(publicKey) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$compress$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["secp256k1Compress"])(publicKey)) : encodeAddress();
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$toJson$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["pairToJson"])(type, {
                address,
                meta
            }, recode(passphrase), !!passphrase);
        },
        unlock: (passphrase)=>{
            return decodePkcs8(passphrase);
        },
        verify: (message, signature, signerPublic)=>{
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$signature$2f$verify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["signatureVerify"])(message, signature, TYPE_ADDRESS[type]((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(signerPublic))).isValid;
        },
        vrfSign: (message, context, extra)=>{
            if (isLocked(secretKey)) {
                throw new Error('Cannot sign with a locked key pair');
            }
            if (type === 'sr25519') {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$sr25519$2f$vrfSign$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sr25519VrfSign"])(message, {
                    secretKey
                }, context, extra);
            }
            const proof = TYPE_SIGNATURE[type]((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(message), {
                publicKey,
                secretKey
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])(vrfHash(proof, context, extra), proof);
        },
        vrfVerify: (message, vrfResult, signerPublic, context, extra)=>{
            if (type === 'sr25519') {
                return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$sr25519$2f$vrfVerify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sr25519VrfVerify"])(message, vrfResult, publicKey, context, extra);
            }
            const result = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$signature$2f$verify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["signatureVerify"])(message, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcat"])(TYPE_PREFIX[type], vrfResult.subarray(32)), TYPE_ADDRESS[type]((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(signerPublic)));
            return result.isValid && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aEq"])(vrfResult.subarray(0, 32), vrfHash(vrfResult.subarray(32), context, extra));
        }
    };
}
}),
"[project]/node_modules/@polkadot/keyring/defaults.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "DEV_PHRASE",
    ()=>DEV_PHRASE,
    "DEV_SEED",
    ()=>DEV_SEED
]);
const DEV_PHRASE = 'bottom drive obey lake curtain smoke basket hold race lonely fit walk';
const DEV_SEED = '0xfac7959dbfe72f052e5a0c3c8d6530f202b02fd8f9f5ca3580ec8deb7797479e';
}),
"[project]/node_modules/@polkadot/keyring/pairs.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Pairs",
    ()=>Pairs
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/address/decode.js [app-ssr] (ecmascript)");
;
;
class Pairs {
    #map = {};
    add(pair) {
        this.#map[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeAddress"])(pair.address).toString()] = pair;
        return pair;
    }
    all() {
        return Object.values(this.#map);
    }
    get(address) {
        const pair = this.#map[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeAddress"])(address).toString()];
        if (!pair) {
            throw new Error(`Unable to retrieve keypair '${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(address) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(address) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(address)) : address}'`);
        }
        return pair;
    }
    remove(address) {
        delete this.#map[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeAddress"])(address).toString()];
    }
}
}),
"[project]/node_modules/@polkadot/keyring/keyring.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Keyring",
    ()=>Keyring
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$base64$2f$bs64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/base64/bs64.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/address/decode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ed25519$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/ed25519/pair/fromSeed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/address/encode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ethereum$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/ethereum/encode.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$hd$2f$ethereum$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/hd/ethereum/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$key$2f$extractSuri$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/key/extractSuri.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$key$2f$fromPath$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/key/fromPath.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$mnemonic$2f$toLegacySeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/mnemonic/toLegacySeed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$mnemonic$2f$toMiniSecret$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/mnemonic/toMiniSecret.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/secp256k1/pair/fromSeed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$sr25519$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util-crypto/sr25519/pair/fromSeed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/keyring/pair/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/keyring/defaults.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pairs$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/keyring/pairs.js [app-ssr] (ecmascript)");
;
;
;
;
;
const PairFromSeed = {
    ecdsa: (seed)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["secp256k1PairFromSeed"])(seed),
    ed25519: (seed)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ed25519$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ed25519PairFromSeed"])(seed),
    ethereum: (seed)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$secp256k1$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["secp256k1PairFromSeed"])(seed),
    sr25519: (seed)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$sr25519$2f$pair$2f$fromSeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sr25519PairFromSeed"])(seed)
};
function pairToPublic({ publicKey }) {
    return publicKey;
}
class Keyring {
    #pairs;
    #type;
    #ss58;
    decodeAddress = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$decode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeAddress"];
    constructor(options = {}){
        options.type = options.type || 'ed25519';
        if (![
            'ecdsa',
            'ethereum',
            'ed25519',
            'sr25519'
        ].includes(options.type || 'undefined')) {
            throw new Error(`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${options.type || 'unknown'}`);
        }
        this.#pairs = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pairs$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Pairs"]();
        this.#ss58 = options.ss58Format;
        this.#type = options.type;
    }
    /**
     * @description retrieve the pairs (alias for getPairs)
     */ get pairs() {
        return this.getPairs();
    }
    /**
     * @description retrieve the publicKeys (alias for getPublicKeys)
     */ get publicKeys() {
        return this.getPublicKeys();
    }
    /**
     * @description Returns the type of the keyring, ed25519, sr25519 or ecdsa
     */ get type() {
        return this.#type;
    }
    /**
     * @name addPair
     * @summary Stores an account, given a keyring pair, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     */ addPair(pair) {
        return this.#pairs.add(pair);
    }
    /**
     * @name addFromAddress
     * @summary Stores an account, given an account address, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Allows user to explicitly provide separate inputs including account address or public key, and optionally
     * the associated account metadata, and the default encoded value as arguments (that may be obtained from the json file
     * of an account backup), and then generates a keyring pair from them that it passes to
     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */ addFromAddress(address, meta = {}, encoded = null, type = this.type, ignoreChecksum, encType) {
        const publicKey = this.decodeAddress(address, ignoreChecksum);
        return this.addPair((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createPair"])({
            toSS58: this.encodeAddress,
            type
        }, {
            publicKey,
            secretKey: new Uint8Array()
        }, meta, encoded, encType));
    }
    /**
     * @name addFromJson
     * @summary Stores an account, given JSON data, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Allows user to provide a json object argument that contains account information (that may be obtained from the json file
     * of an account backup), and then generates a keyring pair from it that it passes to
     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */ addFromJson(json, ignoreChecksum) {
        return this.addPair(this.createFromJson(json, ignoreChecksum));
    }
    /**
     * @name addFromMnemonic
     * @summary Stores an account, given a mnemonic, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Allows user to provide a mnemonic (seed phrase that is provided when account is originally created)
     * argument and a metadata argument that contains account information (that may be obtained from the json file
     * of an account backup), and then generates a keyring pair from it that it passes to
     * `addPair` to stores in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */ addFromMnemonic(mnemonic, meta = {}, type = this.type, wordlist) {
        return this.addFromUri(mnemonic, meta, type, wordlist);
    }
    /**
     * @name addFromPair
     * @summary Stores an account created from an explicit publicKey/secreteKey combination
     */ addFromPair(pair, meta = {}, type = this.type) {
        return this.addPair(this.createFromPair(pair, meta, type));
    }
    /**
     * @name addFromSeed
     * @summary Stores an account, given seed data, as a Key/Value (public key, pair) in Keyring Pair Dictionary
     * @description Stores in a keyring pair dictionary the public key of the pair as a key and the pair as the associated value.
     * Allows user to provide the account seed as an argument, and then generates a keyring pair from it that it passes to
     * `addPair` to store in a keyring pair dictionary the public key of the generated pair as a key and the pair as the associated value.
     */ addFromSeed(seed, meta = {}, type = this.type) {
        return this.addPair((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createPair"])({
            toSS58: this.encodeAddress,
            type
        }, PairFromSeed[type](seed), meta, null));
    }
    /**
     * @name addFromUri
     * @summary Creates an account via an suri
     * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed). The secret can be a hex string, mnemonic phrase or a string (to be padded)
     * @param _suri
     * @param meta
     * @param type The supported types of pairs. Either 'ed25519' | 'sr25519' | 'ecdsa' | 'ethereum'.
     * @param wordlist - Optional custom wordlist for mnemonic.
     * @param rounds - Optional: Number of PBKDF2 iterations to run (default: 210000 (when onlyJS = true) or 2048 (when onlyJS = false).
    */ addFromUri(suri, meta = {}, type = this.type, wordlist, rounds) {
        return this.addPair(this.createFromUri(suri, meta, type, wordlist, rounds));
    }
    /**
     * @name createFromJson
     * @description Creates a pair from a JSON keyfile
     */ createFromJson({ address, encoded, encoding: { content, type, version }, meta }, ignoreChecksum) {
        if (version === '3' && content[0] !== 'pkcs8') {
            throw new Error(`Unable to decode non-pkcs8 type, [${content.join(',')}] found}`);
        }
        const cryptoType = version === '0' || !Array.isArray(content) ? this.type : content[1];
        const encType = !Array.isArray(type) ? [
            type
        ] : type;
        if (![
            'ed25519',
            'sr25519',
            'ecdsa',
            'ethereum'
        ].includes(cryptoType)) {
            throw new Error(`Unknown crypto type ${cryptoType}`);
        }
        // Here the address and publicKey are 32 bytes and isomorphic. This is why the address field needs to be the public key for ethereum type pairs
        const publicKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(address) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(address) : this.decodeAddress(address, ignoreChecksum);
        const decoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(encoded) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(encoded) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$base64$2f$bs64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["base64Decode"])(encoded);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createPair"])({
            toSS58: this.encodeAddress,
            type: cryptoType
        }, {
            publicKey,
            secretKey: new Uint8Array()
        }, meta, decoded, encType);
    }
    /**
     * @name createFromPair
     * @summary Creates a pair from an explicit publicKey/secreteKey combination
     */ createFromPair(pair, meta = {}, type = this.type) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createPair"])({
            toSS58: this.encodeAddress,
            type
        }, pair, meta, null);
    }
    /**
     * @name createFromUri
     * @summary Creates a Keypair from an suri
     * @description This creates a pair from the suri, but does not add it to the keyring
     *
     * @param _suri
     * @param meta
     * @param type The supported types of pairs. Either 'ed25519' | 'sr25519' | 'ecdsa' | 'ethereum'.
     * @param wordlist - Optional custom wordlist for mnemonic.
     * @param rounds - Optional: Number of PBKDF2 iterations to run (default: 210000 (when onlyJS = true) or 2048 (when onlyJS = false).
     */ createFromUri(_suri, meta = {}, type = this.type, wordlist, rounds) {
        // here we only aut-add the dev phrase if we have a hard-derived path
        const suri = _suri.startsWith('//') ? `${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$defaults$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEV_PHRASE"]}${_suri}` : _suri;
        const { derivePath, password, path, phrase } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$key$2f$extractSuri$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["keyExtractSuri"])(suri);
        let seed;
        const isPhraseHex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(phrase, 256);
        if (isPhraseHex) {
            seed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(phrase);
        } else {
            const parts = phrase.split(' ');
            if ([
                12,
                15,
                18,
                21,
                24
            ].includes(parts.length)) {
                seed = type === 'ethereum' ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$mnemonic$2f$toLegacySeed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mnemonicToLegacySeed"])(phrase, '', false, 64, rounds) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$mnemonic$2f$toMiniSecret$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mnemonicToMiniSecret"])(phrase, password, wordlist, false, rounds);
            } else {
                if (phrase.length > 32) {
                    throw new Error('specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes');
                }
                seed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringToU8a"])(phrase.padEnd(32));
            }
        }
        const derived = type === 'ethereum' ? isPhraseHex ? PairFromSeed[type](seed) // for eth, if the private key is provided as suri, it must be derived only once
         : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$hd$2f$ethereum$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hdEthereum"])(seed, derivePath.substring(1)) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$key$2f$fromPath$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["keyFromPath"])(PairFromSeed[type](seed), path, type);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$keyring$2f$pair$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createPair"])({
            toSS58: this.encodeAddress,
            type
        }, derived, meta, null);
    }
    /**
     * @name encodeAddress
     * @description Encodes the input into an ss58 representation
     */ encodeAddress = (address, ss58Format)=>{
        return this.type === 'ethereum' ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$ethereum$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ethereumEncode"])(address) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2d$crypto$2f$address$2f$encode$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encodeAddress"])(address, ss58Format ?? this.#ss58);
    };
    /**
     * @name getPair
     * @summary Retrieves an account keyring pair from the Keyring Pair Dictionary, given an account address
     * @description Returns a keyring pair value from the keyring pair dictionary by performing
     * a key lookup using the provided account address or public key (after decoding it).
     */ getPair(address) {
        return this.#pairs.get(address);
    }
    /**
     * @name getPairs
     * @summary Retrieves all account keyring pairs from the Keyring Pair Dictionary
     * @description Returns an array list of all the keyring pair values that are stored in the keyring pair dictionary.
     */ getPairs() {
        return this.#pairs.all();
    }
    /**
     * @name getPublicKeys
     * @summary Retrieves Public Keys of all Keyring Pairs stored in the Keyring Pair Dictionary
     * @description Returns an array list of all the public keys associated with each of the keyring pair values that are stored in the keyring pair dictionary.
     */ getPublicKeys() {
        return this.#pairs.all().map(pairToPublic);
    }
    /**
     * @name removePair
     * @description Deletes the provided input address or public key from the stored Keyring Pair Dictionary.
     */ removePair(address) {
        this.#pairs.remove(address);
    }
    /**
     * @name setSS58Format;
     * @description Sets the ss58 format for the keyring
     */ setSS58Format(ss58) {
        this.#ss58 = ss58;
    }
    /**
     * @name toJson
     * @summary Returns a JSON object associated with the input argument that contains metadata assocated with an account
     * @description Returns a JSON object containing the metadata associated with an account
     * when valid address or public key and when the account passphrase is provided if the account secret
     * is not already unlocked and available in memory. Note that in [Polkadot-JS Apps](https://github.com/polkadot-js/apps) the user
     * may backup their account to a JSON file that contains this information.
     */ toJson(address, passphrase) {
        return this.#pairs.get(address).toJson(passphrase);
    }
}
}),
"[project]/node_modules/@polkadot/x-fetch/node.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "fetch",
    ()=>fetch
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>");
;
;
const importFetch = __turbopack_context__.A("[project]/node_modules/node-fetch/src/index.js [app-ssr] (ecmascript, async loader)").catch(()=>null);
let modFn = null;
async function nodeFetch(...args) {
    if (!modFn) {
        const mod = await importFetch;
        if (!mod?.default) {
            throw new Error('Unable to import node-fetch in this environment');
        }
        modFn = mod.default;
    }
    return modFn(...args);
}
const fetch = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('fetch', nodeFetch);
}),
"[project]/node_modules/eventemitter3/index.js [app-ssr] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var has = Object.prototype.hasOwnProperty, prefix = '~';
/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */ function Events() {}
//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
    Events.prototype = Object.create(null);
    //
    // This hack is needed because the `__proto__` property is still inherited in
    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
    //
    if (!new Events().__proto__) prefix = false;
}
/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */ function EE(fn, context, once) {
    this.fn = fn;
    this.context = context;
    this.once = once || false;
}
/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */ function addListener(emitter, event, fn, context, once) {
    if (typeof fn !== 'function') {
        throw new TypeError('The listener must be a function');
    }
    var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;
    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
    else emitter._events[evt] = [
        emitter._events[evt],
        listener
    ];
    return emitter;
}
/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */ function clearEvent(emitter, evt) {
    if (--emitter._eventsCount === 0) emitter._events = new Events();
    else delete emitter._events[evt];
}
/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */ function EventEmitter() {
    this._events = new Events();
    this._eventsCount = 0;
}
/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */ EventEmitter.prototype.eventNames = function eventNames() {
    var names = [], events, name;
    if (this._eventsCount === 0) return names;
    for(name in events = this._events){
        if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
    }
    if (Object.getOwnPropertySymbols) {
        return names.concat(Object.getOwnPropertySymbols(events));
    }
    return names;
};
/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */ EventEmitter.prototype.listeners = function listeners(event) {
    var evt = prefix ? prefix + event : event, handlers = this._events[evt];
    if (!handlers) return [];
    if (handlers.fn) return [
        handlers.fn
    ];
    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++){
        ee[i] = handlers[i].fn;
    }
    return ee;
};
/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */ EventEmitter.prototype.listenerCount = function listenerCount(event) {
    var evt = prefix ? prefix + event : event, listeners = this._events[evt];
    if (!listeners) return 0;
    if (listeners.fn) return 1;
    return listeners.length;
};
/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */ EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt]) return false;
    var listeners = this._events[evt], len = arguments.length, args, i;
    if (listeners.fn) {
        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);
        switch(len){
            case 1:
                return listeners.fn.call(listeners.context), true;
            case 2:
                return listeners.fn.call(listeners.context, a1), true;
            case 3:
                return listeners.fn.call(listeners.context, a1, a2), true;
            case 4:
                return listeners.fn.call(listeners.context, a1, a2, a3), true;
            case 5:
                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
            case 6:
                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
        }
        for(i = 1, args = new Array(len - 1); i < len; i++){
            args[i - 1] = arguments[i];
        }
        listeners.fn.apply(listeners.context, args);
    } else {
        var length = listeners.length, j;
        for(i = 0; i < length; i++){
            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);
            switch(len){
                case 1:
                    listeners[i].fn.call(listeners[i].context);
                    break;
                case 2:
                    listeners[i].fn.call(listeners[i].context, a1);
                    break;
                case 3:
                    listeners[i].fn.call(listeners[i].context, a1, a2);
                    break;
                case 4:
                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                    break;
                default:
                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++){
                        args[j - 1] = arguments[j];
                    }
                    listeners[i].fn.apply(listeners[i].context, args);
            }
        }
    }
    return true;
};
/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.on = function on(event, fn, context) {
    return addListener(this, event, fn, context, false);
};
/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.once = function once(event, fn, context) {
    return addListener(this, event, fn, context, true);
};
/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt]) return this;
    if (!fn) {
        clearEvent(this, evt);
        return this;
    }
    var listeners = this._events[evt];
    if (listeners.fn) {
        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
            clearEvent(this, evt);
        }
    } else {
        for(var i = 0, events = [], length = listeners.length; i < length; i++){
            if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
                events.push(listeners[i]);
            }
        }
        //
        // Reset the array, or remove it completely if we have no more listeners.
        //
        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
        else clearEvent(this, evt);
    }
    return this;
};
/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */ EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
    var evt;
    if (event) {
        evt = prefix ? prefix + event : event;
        if (this._events[evt]) clearEvent(this, evt);
    } else {
        this._events = new Events();
        this._eventsCount = 0;
    }
    return this;
};
//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;
//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;
//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;
//
// Expose the module.
//
if ("TURBOPACK compile-time truthy", 1) {
    module.exports = EventEmitter;
}
}),
"[project]/node_modules/eventemitter3/index.mjs [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "default",
    ()=>__TURBOPACK__default__export__
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/eventemitter3/index.js [app-ssr] (ecmascript)");
;
;
const __TURBOPACK__default__export__ = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"];
}),
"[project]/node_modules/eventemitter3/index.js [app-ssr] (ecmascript) <export default as EventEmitter>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "EventEmitter",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$eventemitter3$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/eventemitter3/index.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/x-ws/node.js [app-ssr] (ecmascript) <locals>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "WebSocket",
    ()=>WebSocket
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ws$2f$wrapper$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/ws/wrapper.mjs [app-ssr] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/x-global/index.js [app-ssr] (ecmascript) <locals>");
;
;
;
const WebSocket = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$x$2d$global$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["extractGlobal"])('WebSocket', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ws$2f$wrapper$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["default"]);
}),
"[project]/node_modules/@polkadot/types-create/types/types.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "TypeDefInfo",
    ()=>TypeDefInfo
]);
var TypeDefInfo;
(function(TypeDefInfo) {
    TypeDefInfo[TypeDefInfo["BTreeMap"] = 0] = "BTreeMap";
    TypeDefInfo[TypeDefInfo["BTreeSet"] = 1] = "BTreeSet";
    TypeDefInfo[TypeDefInfo["Compact"] = 2] = "Compact";
    TypeDefInfo[TypeDefInfo["DoNotConstruct"] = 3] = "DoNotConstruct";
    TypeDefInfo[TypeDefInfo["Enum"] = 4] = "Enum";
    TypeDefInfo[TypeDefInfo["HashMap"] = 5] = "HashMap";
    TypeDefInfo[TypeDefInfo["Int"] = 6] = "Int";
    TypeDefInfo[TypeDefInfo["Linkage"] = 7] = "Linkage";
    TypeDefInfo[TypeDefInfo["Null"] = 8] = "Null";
    TypeDefInfo[TypeDefInfo["Option"] = 9] = "Option";
    TypeDefInfo[TypeDefInfo["Plain"] = 10] = "Plain";
    TypeDefInfo[TypeDefInfo["Range"] = 11] = "Range";
    TypeDefInfo[TypeDefInfo["RangeInclusive"] = 12] = "RangeInclusive";
    TypeDefInfo[TypeDefInfo["Result"] = 13] = "Result";
    TypeDefInfo[TypeDefInfo["Set"] = 14] = "Set";
    TypeDefInfo[TypeDefInfo["Si"] = 15] = "Si";
    TypeDefInfo[TypeDefInfo["Struct"] = 16] = "Struct";
    TypeDefInfo[TypeDefInfo["Tuple"] = 17] = "Tuple";
    TypeDefInfo[TypeDefInfo["UInt"] = 18] = "UInt";
    TypeDefInfo[TypeDefInfo["Vec"] = 19] = "Vec";
    TypeDefInfo[TypeDefInfo["VecFixed"] = 20] = "VecFixed";
    TypeDefInfo[TypeDefInfo["WrapperKeepOpaque"] = 21] = "WrapperKeepOpaque";
    TypeDefInfo[TypeDefInfo["WrapperOpaque"] = 22] = "WrapperOpaque";
})(TypeDefInfo || (TypeDefInfo = {}));
}),
"[project]/node_modules/@polkadot/types-create/util/typeSplit.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "typeSplit",
    ()=>typeSplit
]);
function typeSplit(type) {
    const result = [];
    // these are the depths of the various tokens: <, [, {, (
    let c = 0;
    let f = 0;
    let s = 0;
    let t = 0;
    // current start position
    let start = 0;
    for(let i = 0, count = type.length; i < count; i++){
        switch(type[i]){
            // if we are not nested, add the type
            case ',':
                {
                    if (!(c || f || s || t)) {
                        result.push(type.substring(start, i).trim());
                        start = i + 1;
                    }
                    break;
                }
            // adjust compact/vec (and friends) depth
            case '<':
                c++;
                break;
            case '>':
                c--;
                break;
            // adjust fixed vec depths
            case '[':
                f++;
                break;
            case ']':
                f--;
                break;
            // adjust struct depth
            case '{':
                s++;
                break;
            case '}':
                s--;
                break;
            // adjust tuple depth
            case '(':
                t++;
                break;
            case ')':
                t--;
                break;
        }
    }
    // ensure we have all the terminators taken care of
    if (c || f || s || t) {
        throw new Error(`Invalid definition (missing terminators) found in ${type}`);
    }
    // the final leg of the journey
    result.push(type.substring(start, type.length).trim());
    return result;
}
}),
"[project]/node_modules/@polkadot/types-create/util/getTypeDef.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "getTypeDef",
    ()=>getTypeDef
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sanitize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/sanitize.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/types/types.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$typeSplit$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/util/typeSplit.js [app-ssr] (ecmascript)");
;
;
;
;
const KNOWN_INTERNALS = [
    '_alias',
    '_fallback'
];
function getTypeString(typeOrObj) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(typeOrObj) ? typeOrObj.toString() : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(typeOrObj);
}
function isRustEnum(details) {
    const values = Object.values(details);
    if (values.some((v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(v))) {
        if (!values.every((v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(v) && v >= 0 && v <= 255)) {
            throw new Error('Invalid number-indexed enum definition');
        }
        return false;
    }
    return true;
}
function _decodeEnum(value, details, count, fallbackType) {
    value.info = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Enum;
    value.fallbackType = fallbackType;
    // not as pretty, but remain compatible with oo7 for both struct and Array types
    if (Array.isArray(details)) {
        value.sub = details.map((name, index)=>({
                index,
                info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
                name,
                type: 'Null'
            }));
    } else if (isRustEnum(details)) {
        value.sub = Object.entries(details).map(([name, typeOrObj], index)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, getTypeDef(getTypeString(typeOrObj || 'Null'), {
                name
            }, count), {
                index
            }));
    } else {
        value.sub = Object.entries(details).map(([name, index])=>({
                index,
                info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
                name,
                type: 'Null'
            }));
    }
    return value;
}
function _decodeSet(value, details, fallbackType) {
    value.info = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Set;
    value.fallbackType = fallbackType;
    value.length = details._bitLength;
    value.sub = Object.entries(details).filter(([name])=>!name.startsWith('_')).map(([name, index])=>({
            index,
            info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
            name,
            type: 'Null'
        }));
    return value;
}
function _decodeStruct(value, type, _, count) {
    const parsed = JSON.parse(type);
    const keys = Object.keys(parsed);
    if (parsed._enum) {
        return _decodeEnum(value, parsed._enum, count, parsed._fallback);
    } else if (parsed._set) {
        return _decodeSet(value, parsed._set, parsed._fallback);
    }
    value.alias = parsed._alias ? new Map(Object.entries(parsed._alias)) : undefined;
    value.fallbackType = parsed._fallback;
    value.sub = keys.filter((name)=>!KNOWN_INTERNALS.includes(name)).map((name)=>getTypeDef(getTypeString(parsed[name]), {
            name
        }, count));
    return value;
}
function _decodeFixedVec(value, type, _, count) {
    const max = type.length - 1;
    let index = -1;
    let inner = 0;
    for(let i = 1; i < max && index === -1; i++){
        switch(type[i]){
            case ';':
                {
                    if (inner === 0) {
                        index = i;
                    }
                    break;
                }
            case '[':
            case '(':
            case '<':
                inner++;
                break;
            case ']':
            case ')':
            case '>':
                inner--;
                break;
        }
    }
    if (index === -1) {
        throw new Error(`${type}: Unable to extract location of ';'`);
    }
    const vecType = type.substring(1, index);
    const [strLength, displayName] = type.substring(index + 1, max).split(';');
    const length = parseInt(strLength.trim(), 10);
    if (length > 2048) {
        throw new Error(`${type}: Only support for [Type; <length>], where length <= 2048`);
    }
    value.displayName = displayName;
    value.length = length;
    value.sub = getTypeDef(vecType, {}, count);
    return value;
}
function _decodeTuple(value, _, subType, count) {
    value.sub = subType.length === 0 ? [] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$typeSplit$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeSplit"])(subType).map((inner)=>getTypeDef(inner, {}, count));
    return value;
}
function _decodeAnyInt(value, type, _, clazz) {
    const [strLength, displayName] = type.substring(clazz.length + 1, type.length - 1).split(',');
    const length = parseInt(strLength.trim(), 10);
    if (length > 8192 || length % 8) {
        throw new Error(`${type}: Only support for ${clazz}<bitLength>, where length <= 8192 and a power of 8, found ${length}`);
    }
    value.displayName = displayName;
    value.length = length;
    return value;
}
function _decodeInt(value, type, subType) {
    return _decodeAnyInt(value, type, subType, 'Int');
}
function _decodeUInt(value, type, subType) {
    return _decodeAnyInt(value, type, subType, 'UInt');
}
function _decodeDoNotConstruct(value, type, _) {
    const NAME_LENGTH = 'DoNotConstruct'.length;
    value.displayName = type.substring(NAME_LENGTH + 1, type.length - 1);
    return value;
}
function hasWrapper(type, [start, end]) {
    return type.startsWith(start) && type.slice(-1 * end.length) === end;
}
const nestedExtraction = [
    [
        '[',
        ']',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].VecFixed,
        _decodeFixedVec
    ],
    [
        '{',
        '}',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Struct,
        _decodeStruct
    ],
    [
        '(',
        ')',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Tuple,
        _decodeTuple
    ],
    // the inner for these are the same as tuple, multiple values
    [
        'BTreeMap<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeMap,
        _decodeTuple
    ],
    [
        'HashMap<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].HashMap,
        _decodeTuple
    ],
    [
        'Int<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Int,
        _decodeInt
    ],
    [
        'Result<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Result,
        _decodeTuple
    ],
    [
        'UInt<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].UInt,
        _decodeUInt
    ],
    [
        'DoNotConstruct<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].DoNotConstruct,
        _decodeDoNotConstruct
    ]
];
const wrappedExtraction = [
    [
        'BTreeSet<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeSet
    ],
    [
        'Compact<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Compact
    ],
    [
        'Linkage<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Linkage
    ],
    [
        'Opaque<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque
    ],
    [
        'Option<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Option
    ],
    [
        'Range<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Range
    ],
    [
        'RangeInclusive<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].RangeInclusive
    ],
    [
        'Vec<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Vec
    ],
    [
        'WrapperKeepOpaque<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperKeepOpaque
    ],
    [
        'WrapperOpaque<',
        '>',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque
    ]
];
function extractSubType(type, [start, end]) {
    return type.substring(start.length, type.length - end.length);
}
function getTypeDef(_type, { displayName, name } = {}, count = 0) {
    // create the type via Type, allowing types to be sanitized
    const type = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sanitize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sanitize"])(_type);
    const value = {
        displayName,
        info: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain,
        name,
        type
    };
    if (++count > 64) {
        throw new Error('getTypeDef: Maximum nested limit reached');
    }
    const nested = nestedExtraction.find((nested)=>hasWrapper(type, nested));
    if (nested) {
        value.info = nested[2];
        return nested[3](value, type, extractSubType(type, nested), count);
    }
    const wrapped = wrappedExtraction.find((wrapped)=>hasWrapper(type, wrapped));
    if (wrapped) {
        value.info = wrapped[2];
        value.sub = getTypeDef(extractSubType(type, wrapped), {}, count);
    }
    return value;
}
}),
"[project]/node_modules/@polkadot/types-create/create/class.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "constructTypeClass",
    ()=>constructTypeClass,
    "createClassUnsafe",
    ()=>createClassUnsafe,
    "getTypeClass",
    ()=>getTypeClass
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$BTreeMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/BTreeMap.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$BTreeSet$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/BTreeSet.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Bytes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/Bytes.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Set$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Set.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Compact$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Compact.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$DoNotConstruct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/DoNotConstruct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Enum.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$HashMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/HashMap.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Int.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Null.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Option.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Range$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/Range.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$RangeInclusive$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/RangeInclusive.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Result$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Result.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Tuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Tuple.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/U8aFixed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/UInt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Vec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Vec.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$VecFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/VecFixed.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$WrapperKeepOpaque$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$WrapperOpaque$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/WrapperOpaque.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/types/types.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/util/getTypeDef.js [app-ssr] (ecmascript)");
;
;
;
;
function getTypeDefType({ lookupName, type }) {
    return lookupName || type;
}
function getSubDefArray(value) {
    if (!Array.isArray(value.sub)) {
        throw new Error(`Expected subtype as TypeDef[] in ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(value)}`);
    }
    return value.sub;
}
function getSubDef(value) {
    if (!value.sub || Array.isArray(value.sub)) {
        throw new Error(`Expected subtype as TypeDef in ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(value)}`);
    }
    return value.sub;
}
function getSubType(value) {
    return getTypeDefType(getSubDef(value));
}
function getTypeClassMap(value) {
    const subs = getSubDefArray(value);
    const map = {};
    for(let i = 0, count = subs.length; i < count; i++){
        const sub = subs[i];
        if (!sub.name) {
            throw new Error(`No name found in definition ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(sub)}`);
        }
        map[sub.name] = getTypeDefType(sub);
    }
    return map;
}
function getTypeClassArray(value) {
    return getSubDefArray(value).map(getTypeDefType);
}
function createInt(Clazz, { displayName, length }) {
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(length)) {
        throw new Error(`Expected bitLength information for ${displayName || Clazz.constructor.name}<bitLength>`);
    }
    return Clazz.with(length, displayName);
}
function createHashMap(Clazz, value) {
    const [keyType, valueType] = getTypeClassArray(value);
    return Clazz.with(keyType, valueType);
}
function createWithSub(Clazz, value) {
    return Clazz.with(getSubType(value));
}
const infoMapping = {
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeMap]: (_registry, value)=>createHashMap(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$BTreeMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BTreeMap"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeSet]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$BTreeSet$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BTreeSet"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Compact]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Compact$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Compact"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].DoNotConstruct]: (_registry, value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$DoNotConstruct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DoNotConstruct"].with(value.displayName || value.type),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Enum]: (_registry, value)=>{
        const subs = getSubDefArray(value);
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Enum"].with(subs.every(({ type })=>type === 'Null') ? subs.reduce((out, { index, name }, count)=>{
            if (!name) {
                throw new Error('No name found in sub definition');
            }
            out[name] = index || count;
            return out;
        }, {}) : getTypeClassMap(value));
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].HashMap]: (_registry, value)=>createHashMap(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$HashMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HashMap"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Int]: (_registry, value)=>createInt(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Int"], value),
    // We have circular deps between Linkage & Struct
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Linkage]: (_registry, value)=>{
        const type = `Option<${getSubType(value)}>`;
        // eslint-disable-next-line sort-keys
        const Clazz = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"].with({
            previous: type,
            next: type
        });
        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
        Clazz.prototype.toRawType = function() {
            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call
            return `Linkage<${this.next.toRawType(true)}>`;
        };
        return Clazz;
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Null]: (_registry, _value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Null"],
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Option]: (_registry, value)=>{
        if (!value.sub || Array.isArray(value.sub)) {
            throw new Error('Expected type information for Option');
        }
        // NOTE This is opt-in (unhandled), not by default
        // if (value.sub.type === 'bool') {
        //   return OptionBool;
        // }
        return createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Option"], value);
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain]: (registry, value)=>registry.getOrUnknown(value.type),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Range]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Range$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Range"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].RangeInclusive]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$RangeInclusive$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RangeInclusive"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Result]: (_registry, value)=>{
        const [Ok, Err] = getTypeClassArray(value);
        // eslint-disable-next-line @typescript-eslint/no-use-before-define
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Result$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Result"].with({
            Err,
            Ok
        });
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Set]: (_registry, value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Set$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CodecSet"].with(getSubDefArray(value).reduce((result, { index, name })=>{
            if (!name || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(index)) {
                throw new Error('No name found in sub definition');
            }
            result[name] = index;
            return result;
        }, {}), value.length),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Si]: (registry, value)=>getTypeClass(registry, registry.lookup.getTypeDef(value.type)),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Struct]: (_registry, value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"].with(getTypeClassMap(value), value.alias),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Tuple]: (_registry, value)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Tuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Tuple"].with(getTypeClassArray(value)),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].UInt]: (_registry, value)=>createInt(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UInt"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Vec]: (_registry, { sub })=>{
        if (!sub || Array.isArray(sub)) {
            throw new Error('Expected type information for vector');
        }
        return sub.type === 'u8' ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Bytes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Bytes"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Vec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].with(getTypeDefType(sub));
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].VecFixed]: (_registry, { displayName, length, sub })=>{
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(length) || !sub || Array.isArray(sub)) {
            throw new Error('Expected length & type information for fixed vector');
        }
        return sub.type === 'u8' ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$U8aFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["U8aFixed"].with(length * 8, displayName) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$VecFixed$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["VecFixed"].with(getTypeDefType(sub), length);
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperKeepOpaque]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$WrapperKeepOpaque$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WrapperKeepOpaque"], value),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque]: (_registry, value)=>createWithSub(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$WrapperOpaque$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WrapperOpaque"], value)
};
function constructTypeClass(registry, typeDef) {
    try {
        const Type = infoMapping[typeDef.info](registry, typeDef);
        if (!Type) {
            throw new Error('No class created');
        }
        // don't clobber any existing
        if (!Type.__fallbackType && typeDef.fallbackType) {
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore ...this is the only place we we actually assign this...
            Type.__fallbackType = typeDef.fallbackType;
        }
        return Type;
    } catch (error) {
        throw new Error(`Unable to construct class from ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(typeDef)}: ${error.message}`);
    }
}
function getTypeClass(registry, typeDef) {
    return registry.getUnsafe(typeDef.type, false, typeDef);
}
function createClassUnsafe(registry, type) {
    return(// just retrieve via name, no creation via typeDef
    registry.getUnsafe(type) || // we don't have an existing type, create the class via typeDef
    getTypeClass(registry, registry.isLookupType(type) ? registry.lookup.getTypeDef(type) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$util$2f$getTypeDef$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getTypeDef"])(type)));
}
}),
"[project]/node_modules/@polkadot/types-create/create/type.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "createTypeUnsafe",
    ()=>createTypeUnsafe
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Option.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/eq.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/create/class.js [app-ssr] (ecmascript)");
;
;
;
function checkInstance(created, matcher) {
    const u8a = created.toU8a();
    const rawType = created.toRawType();
    const isOk = // full match, all ok
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$eq$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aEq"])(u8a, matcher) || // on a length-prefixed type, just check the actual length
    [
        'Bytes',
        'Text',
        'Type'
    ].includes(rawType) && matcher.length === created.length || // when the created is empty and matcher is also empty, let it slide...
    created.isEmpty && matcher.every((v)=>!v);
    if (!isOk) {
        throw new Error(`${rawType}:: Decoded input doesn't match input, received ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(matcher, 512)} (${matcher.length} bytes), created ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(u8a, 512)} (${u8a.length} bytes)`);
    }
}
function checkPedantic(created, [value]) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value)) {
        checkInstance(created, value);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        checkInstance(created, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value));
    }
}
function initType(registry, Type, params = [], { blockHash, isFallback, isOptional, isPedantic } = {}) {
    const created = new (isOptional ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Option"].with(Type) : Type)(registry, ...params);
    isPedantic && checkPedantic(created, params);
    if (blockHash) {
        created.createdAtHash = createTypeUnsafe(registry, 'BlockHash', [
            blockHash
        ]);
    }
    if (isFallback) {
        created.isStorageFallback = true;
    }
    return created;
}
function createTypeUnsafe(registry, type, params = [], options = {}) {
    let Clazz = null;
    let firstError = null;
    try {
        Clazz = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createClassUnsafe"])(registry, type);
        return initType(registry, Clazz, params, options);
    } catch (error) {
        firstError = new Error(`createType(${type}):: ${error.message}`);
    }
    if (Clazz?.__fallbackType) {
        try {
            Clazz = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$create$2f$class$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createClassUnsafe"])(registry, Clazz.__fallbackType);
            return initType(registry, Clazz, params, options);
        } catch  {
        // swallow, we will throw the first error again
        }
    }
    throw firstError;
}
}),
"[project]/node_modules/@polkadot/types-create/util/xcm.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "XCM_MAPPINGS",
    ()=>XCM_MAPPINGS,
    "mapXcmTypes",
    ()=>mapXcmTypes
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
;
const XCM_MAPPINGS = [
    'AssetInstance',
    'Fungibility',
    'Junction',
    'Junctions',
    'MultiAsset',
    'MultiAssetFilter',
    'MultiLocation',
    'Response',
    'WildFungibility',
    'WildMultiAsset',
    'Xcm',
    'XcmError'
];
function mapXcmTypes(version) {
    return XCM_MAPPINGS.reduce((all, key)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])(all, {
            [key]: `${key}${version}`
        }), {});
}
}),
"[project]/node_modules/@polkadot/types-create/util/encodeTypes.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "encodeTypeDef",
    ()=>encodeTypeDef,
    "paramsNotation",
    ()=>paramsNotation,
    "withTypeString",
    ()=>withTypeString
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/spread.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-create/types/types.js [app-ssr] (ecmascript)");
;
;
const stringIdentity = (value)=>value.toString();
const INFO_WRAP = [
    'BTreeMap',
    'BTreeSet',
    'Compact',
    'HashMap',
    'Option',
    'Result',
    'Vec'
];
function paramsNotation(outer, inner, transform = stringIdentity) {
    return `${outer}${inner ? `<${(Array.isArray(inner) ? inner : [
        inner
    ]).map(transform).join(', ')}>` : ''}`;
}
function encodeWithParams(registry, typeDef, outer) {
    const { info, sub } = typeDef;
    switch(info){
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeMap:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeSet:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Compact:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].HashMap:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Linkage:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Option:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Range:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].RangeInclusive:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Result:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Vec:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperKeepOpaque:
        case __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque:
            return paramsNotation(outer, sub, (p)=>encodeTypeDef(registry, p));
    }
    throw new Error(`Unable to encode ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(typeDef)} with params`);
}
function encodeSubTypes(registry, sub, asEnum, extra) {
    const names = sub.map(({ name })=>name);
    if (!names.every((n)=>!!n)) {
        throw new Error(`Subtypes does not have consistent names, ${names.join(', ')}`);
    }
    const inner = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, extra);
    for(let i = 0, count = sub.length; i < count; i++){
        const def = sub[i];
        if (!def.name) {
            throw new Error(`No name found in ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(def)}`);
        }
        inner[def.name] = encodeTypeDef(registry, def);
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(asEnum ? {
        _enum: inner
    } : inner);
}
const encoders = {
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeMap]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'BTreeMap'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].BTreeSet]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'BTreeSet'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Compact]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Compact'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].DoNotConstruct]: (registry, { displayName, lookupIndex, lookupName })=>`DoNotConstruct<${lookupName || displayName || ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(lookupIndex) ? 'Unknown' : registry.createLookupType(lookupIndex))}>`,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Enum]: (registry, { sub })=>{
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Enum type');
        }
        // c-like enums have all Null entries
        // TODO We need to take the disciminant into account and auto-add empty entries
        return sub.every(({ type })=>type === 'Null') ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])({
            _enum: sub.map(({ name }, index)=>`${name || `Empty${index}`}`)
        }) : encodeSubTypes(registry, sub, true);
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].HashMap]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'HashMap'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Int]: (_registry, { length = 32 })=>`Int<${length}>`,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Linkage]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Linkage'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Null]: (_registry, _typeDef)=>'Null',
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Option]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Option'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Plain]: (_registry, { displayName, type })=>displayName || type,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Range]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Range'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].RangeInclusive]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'RangeInclusive'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Result]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Result'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Set]: (_registry, { length = 8, sub })=>{
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Set type');
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])({
            _set: sub.reduce((all, { index, name }, count)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])(all, {
                    [`${name || `Unknown${index || count}`}`]: index || count
                }), {
                _bitLength: length || 8
            })
        });
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Si]: (_registry, { lookupName, type })=>lookupName || type,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Struct]: (registry, { alias, sub })=>{
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Struct type');
        }
        return encodeSubTypes(registry, sub, false, alias ? {
            _alias: [
                ...alias.entries()
            ].reduce((all, [k, v])=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])(all, {
                    [k]: v
                }), {})
        } : {});
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Tuple]: (registry, { sub })=>{
        if (!Array.isArray(sub)) {
            throw new Error('Unable to encode Tuple type');
        }
        return `(${sub.map((type)=>encodeTypeDef(registry, type)).join(',')})`;
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].UInt]: (_registry, { length = 32 })=>`UInt<${length}>`,
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].Vec]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'Vec'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].VecFixed]: (_registry, { length, sub })=>{
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(length) || !sub || Array.isArray(sub)) {
            throw new Error('Unable to encode VecFixed type');
        }
        return `[${sub.type};${length}]`;
    },
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperKeepOpaque]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'WrapperKeepOpaque'),
    [__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$create$2f$types$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TypeDefInfo"].WrapperOpaque]: (registry, typeDef)=>encodeWithParams(registry, typeDef, 'WrapperOpaque')
};
function encodeType(registry, typeDef, withLookup = true) {
    return withLookup && typeDef.lookupName ? typeDef.lookupName : encoders[typeDef.info](registry, typeDef);
}
function encodeTypeDef(registry, typeDef) {
    // In the case of contracts we do have the unfortunate situation where the displayName would
    // refer to "Option" when it is an option. For these, string it out, only using when actually
    // not a top-level element to be used
    return typeDef.displayName && !INFO_WRAP.some((i)=>typeDef.displayName === i) ? typeDef.displayName : encodeType(registry, typeDef);
}
function withTypeString(registry, typeDef) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$spread$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectSpread"])({}, typeDef, {
        type: encodeType(registry, typeDef, false)
    });
}
}),
];

//# sourceMappingURL=node_modules_9a1377ac._.js.map