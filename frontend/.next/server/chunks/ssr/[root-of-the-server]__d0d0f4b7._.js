module.exports=[18622,(a,b,c)=>{b.exports=a.x("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js",()=>require("next/dist/compiled/next-server/app-page-turbo.runtime.prod.js"))},56704,(a,b,c)=>{b.exports=a.x("next/dist/server/app-render/work-async-storage.external.js",()=>require("next/dist/server/app-render/work-async-storage.external.js"))},32319,(a,b,c)=>{b.exports=a.x("next/dist/server/app-render/work-unit-async-storage.external.js",()=>require("next/dist/server/app-render/work-unit-async-storage.external.js"))},20635,(a,b,c)=>{b.exports=a.x("next/dist/server/app-render/action-async-storage.external.js",()=>require("next/dist/server/app-render/action-async-storage.external.js"))},24725,(a,b,c)=>{b.exports=a.x("next/dist/server/app-render/after-task-async-storage.external.js",()=>require("next/dist/server/app-render/after-task-async-storage.external.js"))},43285,(a,b,c)=>{b.exports=a.x("next/dist/server/app-render/dynamic-access-async-storage.external.js",()=>require("next/dist/server/app-render/dynamic-access-async-storage.external.js"))},31699,(a,b,c)=>{"use strict";b.exports=a.r(18622)},57850,(a,b,c)=>{"use strict";b.exports=a.r(31699).vendored["react-ssr"].ReactJsxRuntime},45056,(a,b,c)=>{"use strict";b.exports=a.r(31699).vendored["react-ssr"].React},2057,(a,b,c)=>{"use strict";b.exports=a.r(31699).vendored.contexts.AppRouterContext},3420,(a,b,c)=>{"use strict";b.exports=a.r(31699).vendored.contexts.HooksClientContext},98823,(a,b,c)=>{"use strict";b.exports=a.r(31699).vendored.contexts.ServerInsertedHtml},23957,a=>{"use strict";a.s(["WalletProvider",()=>f,"useWallet",()=>e]);var b=a.i(57850),c=a.i(45056);let d=(0,c.createContext)(void 0),e=()=>{let a=(0,c.useContext)(d);if(void 0===a)throw Error("useWallet must be used within a WalletProvider");return a},f=({children:a})=>{let[e,f]=(0,c.useState)({userBalance:0,userName:"Guest User",walletAddress:"",walletType:null,isConnected:!1});(0,c.useEffect)(()=>{let a=localStorage.getItem("walletState");if(a)try{let b=JSON.parse(a);f(b)}catch(a){console.error("Error loading wallet state from localStorage:",a),localStorage.removeItem("walletState")}},[]),(0,c.useEffect)(()=>{localStorage.setItem("walletState",JSON.stringify(e))},[e]);let g={...e,connectWallet:(a,b,c)=>{f({userBalance:parseFloat(c),userName:"metamask"===a?"ETH Wallet":"DOT Wallet",walletAddress:b,walletType:a,isConnected:!0})},disconnectWallet:()=>{f({userBalance:0,userName:"Guest User",walletAddress:"",walletType:null,isConnected:!1}),localStorage.removeItem("walletState")},updateBalance:a=>{f(b=>({...b,userBalance:a}))}};return(0,b.jsx)(d.Provider,{value:g,children:a})}}];

//# sourceMappingURL=%5Broot-of-the-server%5D__d0d0f4b7._.js.map