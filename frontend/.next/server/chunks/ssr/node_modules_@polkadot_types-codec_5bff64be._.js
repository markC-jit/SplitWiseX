module.exports = [
"[project]/node_modules/@polkadot/types-codec/utils/util.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "hasEq",
    ()=>hasEq
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
;
function hasEq(o) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(o.eq);
}
}),
"[project]/node_modules/@polkadot/types-codec/utils/compareMap.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "compareMap",
    ()=>compareMap
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/util.js [app-ssr] (ecmascript)");
;
;
function hasMismatch(a, b) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(a) || ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hasEq"])(a) ? !a.eq(b) : a !== b);
}
function notEntry(value) {
    return !Array.isArray(value) || value.length !== 2;
}
function compareMapArray(a, b) {
    // equal number of entries and each entry in the array should match
    return a.size === b.length && !b.some((e)=>notEntry(e) || hasMismatch(a.get(e[0]), e[1]));
}
function compareMap(a, b) {
    if (Array.isArray(b)) {
        return compareMapArray(a, b);
    } else if (b instanceof Map) {
        return compareMapArray(a, [
            ...b.entries()
        ]);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(b)) {
        return compareMapArray(a, Object.entries(b));
    }
    return false;
}
}),
"[project]/node_modules/@polkadot/types-codec/utils/decodeU8a.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "decodeU8a",
    ()=>decodeU8a,
    "decodeU8aStruct",
    ()=>decodeU8aStruct,
    "decodeU8aVec",
    ()=>decodeU8aVec
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
;
const MAX_DEPTH = 1024;
/** @internal */ function isComplexType(Type) {
    const typeName = Type.name?.toLowerCase() || '';
    return [
        'enum',
        'hashmap',
        'linkage',
        'null',
        'option',
        'range',
        'rangeinclusive',
        'result',
        'struct',
        'tuple',
        'vec',
        'vecfixed'
    ].includes(typeName);
}
/** @internal */ function formatFailure(registry, fn, _result, { message }, u8a, i, count, Type, key) {
    let type = '';
    try {
        type = `: ${new Type(registry).toRawType()}`;
    } catch  {
    // ignore
    }
    // This is extra debugging info (we most-probably want this in in some way, shape or form,
    // but at this point not quite sure how to include and format it (it can be quite massive)
    // console.error(JSON.stringify(result, null, 2));
    return `${fn}: failed at ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(u8a.subarray(0, 16))}â€¦${key ? ` on ${key}` : ''} (index ${i + 1}/${count})${type}:: ${message}`;
}
function decodeU8a(registry, result, u8a, [Types, keys]) {
    const count = result.length;
    let offset = 0;
    let i = 0;
    try {
        while(i < count){
            const value = new Types[i](registry, u8a.subarray(offset));
            offset += value.initialU8aLength || value.encodedLength;
            result[i] = value;
            i++;
        }
    } catch (error) {
        throw new Error(formatFailure(registry, 'decodeU8a', result, error, u8a.subarray(offset), i, count, Types[i], keys[i]));
    }
    return [
        result,
        offset
    ];
}
function decodeU8aStruct(registry, result, u8a, [Types, keys]) {
    const count = result.length;
    let offset = 0;
    let i = 0;
    if (count > MAX_DEPTH && isComplexType(Types[i])) {
        throw new Error(`decodeU8aStruct: Maximum depth exceeded, received ${count} elements, limit ${MAX_DEPTH}`);
    }
    try {
        while(i < count){
            const value = new Types[i](registry, u8a.subarray(offset));
            offset += value.initialU8aLength || value.encodedLength;
            result[i] = [
                keys[i],
                value
            ];
            i++;
        }
    } catch (error) {
        throw new Error(formatFailure(registry, 'decodeU8aStruct', result, error, u8a.subarray(offset), i, count, Types[i], keys[i]));
    }
    return [
        result,
        offset
    ];
}
function decodeU8aVec(registry, result, u8a, startAt, Type) {
    const count = result.length;
    if (count > MAX_DEPTH && isComplexType(Type)) {
        throw new Error(`decodeU8aVec: Maximum depth exceeded, received ${count} elements, limit ${MAX_DEPTH}`);
    }
    let offset = startAt;
    let i = 0;
    try {
        while(i < count){
            const value = new Type(registry, u8a.subarray(offset));
            offset += value.initialU8aLength || value.encodedLength;
            result[i] = value;
            i++;
        }
    } catch (error) {
        throw new Error(formatFailure(registry, 'decodeU8aVec', result, error, u8a.subarray(offset), i, count, Type));
    }
    return [
        offset,
        offset - startAt
    ];
}
}),
"[project]/node_modules/@polkadot/types-codec/utils/toConstructors.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @internal
 * From a type string or class, return the associated type class
 */ __turbopack_context__.s([
    "mapToTypeMap",
    ()=>mapToTypeMap,
    "typeToConstructor",
    ()=>typeToConstructor,
    "typesToConstructors",
    ()=>typesToConstructors
]);
function typeToConstructor(registry, type) {
    return typeof type === 'function' ? type : registry.createClassUnsafe(type);
}
function typesToConstructors(registry, types) {
    const count = types.length;
    const result = new Array(count);
    for(let i = 0; i < count; i++){
        result[i] = typeToConstructor(registry, types[i]);
    }
    return result;
}
function mapToTypeMap(registry, input) {
    const entries = Object.entries(input);
    const count = entries.length;
    const output = [
        new Array(count),
        new Array(count)
    ];
    for(let i = 0; i < count; i++){
        output[1][i] = entries[i][0];
        output[0][i] = typeToConstructor(registry, entries[i][1]);
    }
    return output;
}
}),
"[project]/node_modules/@polkadot/types-codec/utils/typesToMap.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "typesToMap",
    ()=>typesToMap
]);
function typesToMap(registry, [Types, keys]) {
    const result = {};
    for(let i = 0, count = keys.length; i < count; i++){
        result[keys[i]] = registry.getClassName(Types[i]) || new Types[i](registry).toRawType();
    }
    return result;
}
}),
"[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Struct",
    ()=>Struct
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$boolean$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/boolean.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/property.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/compareMap.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/decodeU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/toConstructors.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$typesToMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/typesToMap.js [app-ssr] (ecmascript)");
;
;
function noopSetDefinition(d) {
    return d;
}
/** @internal */ function decodeStructFromObject(registry, [Types, keys], value, jsonMap) {
    let jsonObj;
    const typeofArray = Array.isArray(value);
    const typeofMap = value instanceof Map;
    const count = keys.length;
    if (!typeofArray && !typeofMap && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(value)) {
        throw new Error(`Struct: Cannot decode value ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(value)} (typeof ${typeof value}), expected an input object, map or array`);
    } else if (typeofArray && value.length !== count) {
        throw new Error(`Struct: Unable to map ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(value)} array to object with known keys ${keys.join(', ')}`);
    }
    const raw = new Array(count);
    for(let i = 0; i < count; i++){
        const key = keys[i];
        const jsonKey = jsonMap.get(key) || key;
        const Type = Types[i];
        let assign;
        try {
            if (typeofArray) {
                assign = value[i];
            } else if (typeofMap) {
                assign = jsonKey && value.get(jsonKey);
            } else {
                assign = jsonKey && Object.prototype.hasOwnProperty.call(value, jsonKey) ? value[jsonKey] : undefined;
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(assign)) {
                    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(jsonObj)) {
                        const entries = Object.entries(value);
                        jsonObj = {};
                        for(let e = 0, ecount = entries.length; e < ecount; e++){
                            if (Object.prototype.hasOwnProperty.call(value, entries[e][0])) {
                                jsonObj[(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(entries[e][0])] = entries[e][1];
                            }
                        }
                    }
                    assign = jsonKey && Object.prototype.hasOwnProperty.call(jsonObj, jsonKey) ? jsonObj[jsonKey] : undefined;
                }
            }
            raw[i] = [
                key,
                assign instanceof Type ? assign : new Type(registry, assign)
            ];
        } catch (error) {
            let type = Type.name;
            try {
                type = new Type(registry).toRawType();
            } catch  {
            // ignore
            }
            throw new Error(`Struct: failed on ${jsonKey}: ${type}:: ${error.message}`);
        }
    }
    return [
        raw,
        0
    ];
}
class Struct extends Map {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    #jsonMap;
    #Types;
    constructor(registry, Types, value, jsonMap = new Map(), { definition, setDefinition = noopSetDefinition } = {}){
        const typeMap = definition || setDefinition((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mapToTypeMap"])(registry, Types));
        const [decoded, decodedLength] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeU8aStruct"])(registry, new Array(typeMap[0].length), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value), typeMap) : value instanceof Struct ? [
            value,
            0
        ] : decodeStructFromObject(registry, typeMap, value || {}, jsonMap);
        super(decoded);
        this.initialU8aLength = decodedLength;
        this.registry = registry;
        this.#jsonMap = jsonMap;
        this.#Types = typeMap;
    }
    static with(Types, jsonMap) {
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d)=>definition = d;
        return class extends Struct {
            static{
                const keys = Object.keys(Types);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectProperties"])(this.prototype, keys, (k, _, self)=>self.get(k));
            }
            constructor(registry, value){
                super(registry, Types, value, jsonMap, {
                    definition,
                    setDefinition
                });
            }
        };
    }
    /**
     * @description The available keys for this struct
     */ get defKeys() {
        return this.#Types[1];
    }
    /**
     * @description Checks if the value is an empty value '{}'
     */ get isEmpty() {
        return [
            ...this.keys()
        ].length === 0;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        let total = 0;
        for (const v of this.values()){
            total += v.encodedLength;
        }
        return total;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Returns the Type description of the structure
     */ get Type() {
        const result = {};
        const [Types, keys] = this.#Types;
        for(let i = 0, count = keys.length; i < count; i++){
            result[keys[i]] = new Types[i](this.registry).toRawType();
        }
        return result;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compareMap"])(this, other);
    }
    /**
     * @description Returns a specific names entry in the structure
     * @param key The name of the entry to retrieve
     */ get(key) {
        return super.get(key);
    }
    /**
     * @description Returns the values of a member at a specific index (Rather use get(name) for performance)
     */ getAtIndex(index) {
        return this.toArray()[index];
    }
    /**
     * @description Returns the a types value by name
     */ getT(key) {
        return super.get(key);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect(isBare) {
        const inner = [];
        for (const [k, v] of this.entries()){
            inner.push({
                ...v.inspect(!isBare || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$boolean$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBoolean"])(isBare) ? isBare : isBare[k]),
                name: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(k)
            });
        }
        return {
            inner
        };
    }
    /**
     * @description Converts the Object to an standard JavaScript Array
     */ toArray() {
        return [
            ...this.values()
        ];
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExtended, disableAscii) {
        const json = {};
        for (const [k, v] of this.entries()){
            json[k] = v.toHuman(isExtended, disableAscii);
        }
        return json;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        const json = {};
        for (const [k, v] of this.entries()){
            // Here we pull out the entry against the JSON mapping (if supplied)
            // since this representation goes over RPC and needs to be correct
            json[this.#jsonMap.get(k) || k] = v.toJSON();
        }
        return json;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive(disableAscii) {
        const json = {};
        for (const [k, v] of this.entries()){
            json[k] = v.toPrimitive(disableAscii);
        }
        return json;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$typesToMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typesToMap"])(this.registry, this.#Types));
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        const encoded = [];
        for (const [k, v] of this.entries()){
            encoded.push(v.toU8a(!isBare || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$boolean$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBoolean"])(isBare) ? isBare : isBare[k]));
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])(encoded);
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/utils/sanitize.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "alias",
    ()=>alias,
    "cleanupCompact",
    ()=>cleanupCompact,
    "findClosing",
    ()=>findClosing,
    "flattenSingleTuple",
    ()=>flattenSingleTuple,
    "removeColons",
    ()=>removeColons,
    "removeExtensions",
    ()=>removeExtensions,
    "removeGenerics",
    ()=>removeGenerics,
    "removePairOf",
    ()=>removePairOf,
    "removeTraits",
    ()=>removeTraits,
    "removeWrap",
    ()=>removeWrap,
    "sanitize",
    ()=>sanitize,
    "trim",
    ()=>trim
]);
const BOUNDED = [
    'BTreeMap',
    'BTreeSet',
    'HashMap',
    'Vec'
];
const ALLOWED_BOXES = BOUNDED.concat([
    'Compact',
    'DoNotConstruct',
    'Int',
    'Linkage',
    'Range',
    'RangeInclusive',
    'Result',
    'Opaque',
    'Option',
    'UInt',
    'WrapperKeepOpaque',
    'WrapperOpaque'
]);
const BOX_PRECEDING = [
    '<',
    '(',
    '[',
    '"',
    ',',
    ' '
]; // start of vec, tuple, fixed array, part of struct def or in tuple
const mappings = [
    // alias <T::InherentOfflineReport as InherentOfflineReport>::Inherent -> InherentOfflineReport
    alias('<T::InherentOfflineReport as InherentOfflineReport>::Inherent', 'InherentOfflineReport', false),
    alias('VecDeque<', 'Vec<', false),
    // <T::Balance as HasCompact>
    cleanupCompact(),
    // Change BoundedVec<Type, Size> to Vec<Type>
    removeExtensions('Bounded', true),
    // Change WeakVec<Type> to Vec<Type>
    removeExtensions('Weak', false),
    // Remove all the trait prefixes
    removeTraits(),
    // remove PairOf<T> -> (T, T)
    removePairOf(),
    // remove boxing, `Box<Proposal>` -> `Proposal`
    removeWrap('Box<'),
    // remove generics, `MisbehaviorReport<Hash, BlockNumber>` -> `MisbehaviorReport`
    removeGenerics(),
    // alias String -> Text (compat with jsonrpc methods)
    alias('String', 'Text'),
    // alias Vec<u8> -> Bytes
    alias('Vec<u8>', 'Bytes'),
    alias('&\\[u8\\]', 'Bytes'),
    alias("&'static\\[u8\\]", 'Bytes'),
    // alias RawAddress -> Address
    alias('RawAddress', 'Address'),
    // lookups, mapped to Address/AccountId as appropriate in runtime
    alias('Lookup::Source', 'LookupSource'),
    alias('Lookup::Target', 'LookupTarget'),
    // HACK duplication between contracts & primitives, however contracts prefixed with exec
    alias('exec::StorageKey', 'ContractStorageKey'),
    // flattens tuples with one value, `(AccountId)` -> `AccountId`
    flattenSingleTuple(),
    // converts ::Type to Type, <T as Trait<I>>::Proposal -> Proposal
    removeColons(),
    // remove all trailing spaces - this should always be the last
    trim()
];
function trim() {
    return (value)=>value.trim();
}
function findClosing(value, start) {
    let depth = 0;
    for(let i = start, count = value.length; i < count; i++){
        if (value[i] === '>') {
            if (!depth) {
                return i;
            }
            depth--;
        } else if (value[i] === '<') {
            depth++;
        }
    }
    throw new Error(`Unable to find closing matching <> on '${value}' (start ${start})`);
}
function alias(src, dest, withChecks = true) {
    const from = new RegExp(`(^${src}|${BOX_PRECEDING.map((box)=>`\\${box}${src}`).join('|')})`, 'g');
    const to = (src)=>{
        from.lastIndex = 0;
        return withChecks && BOX_PRECEDING.includes(src[0]) ? `${src[0]}${dest}` : dest;
    };
    return (value)=>value.replace(from, to);
}
function cleanupCompact() {
    return (value)=>{
        if (value.includes(' as HasCompact')) {
            for(let i = 0, count = value.length; i < count; i++){
                if (value[i] === '<') {
                    const end = findClosing(value, i + 1) - 14;
                    if (value.substring(end, end + 14) === ' as HasCompact') {
                        value = `Compact<${value.substring(i + 1, end)}>`;
                    }
                }
            }
        }
        return value;
    };
}
function flattenSingleTuple() {
    const from1 = /,\)/g;
    const from2 = /\(([^,]+)\)/;
    return (value)=>{
        from1.lastIndex = 0;
        return value// tuples may have trailing commas, e.g. (u32, BlockNumber, )
        .replace(from1, ')')// change (u32) -> u32
        .replace(from2, '$1');
    };
}
function replaceTagWith(value, matcher, replacer) {
    let index = -1;
    while(true){
        index = value.indexOf(matcher, index + 1);
        if (index === -1) {
            return value;
        }
        const start = index + matcher.length;
        const end = findClosing(value, start);
        value = `${value.substring(0, index)}${replacer(value.substring(start, end))}${value.substring(end + 1)}`;
    }
}
function removeExtensions(type, isSized) {
    return (value)=>{
        for(let i = 0, count = BOUNDED.length; i < count; i++){
            const tag = BOUNDED[i];
            value = replaceTagWith(value, `${type}${tag}<`, (v)=>{
                const parts = v.split(',').map((s)=>s.trim()).filter((s)=>s);
                if (isSized) {
                    parts.pop();
                }
                return `${tag}<${parts.join(',')}>`;
            });
        }
        return value;
    };
}
function removeColons() {
    return (value)=>{
        let index = 0;
        while(index !== -1){
            index = value.indexOf('::');
            if (index === 0) {
                value = value.substring(2);
            } else if (index !== -1) {
                let start = index;
                while(start !== -1 && !BOX_PRECEDING.includes(value[start])){
                    start--;
                }
                value = `${value.substring(0, start + 1)}${value.substring(index + 2)}`;
            }
        }
        return value;
    };
}
function removeGenerics() {
    return (value)=>{
        for(let i = 0, count = value.length; i < count; i++){
            if (value[i] === '<') {
                // check against the allowed wrappers, be it Vec<..>, Option<...> ...
                const box = ALLOWED_BOXES.find((box)=>{
                    const start = i - box.length;
                    return start >= 0 && value.substring(start, i) === box && (// make sure it is stand-alone, i.e. don't catch ElectionResult<...> as Result<...>
                    start === 0 || BOX_PRECEDING.includes(value[start - 1]));
                });
                // we have not found anything, unwrap generic innards
                if (!box) {
                    const end = findClosing(value, i + 1);
                    value = `${value.substring(0, i)}${value.substring(end + 1)}`;
                }
            }
        }
        return value;
    };
}
function removePairOf() {
    const replacer = (v)=>`(${v},${v})`;
    return (value)=>replaceTagWith(value, 'PairOf<', replacer);
}
function removeTraits() {
    const from1 = /\s/g;
    const from2 = /(T|Self)::/g;
    const from3 = /<(T|Self)asTrait>::/g;
    const from4 = /<Tas[a-z]+::Trait>::/g;
    const from5 = /<LookupasStaticLookup>/g;
    const from6 = /::Type/g;
    return (value)=>{
        from1.lastIndex = 0;
        from2.lastIndex = 0;
        from3.lastIndex = 0;
        from4.lastIndex = 0;
        from5.lastIndex = 0;
        from6.lastIndex = 0;
        return value// remove all whitespaces
        .replace(from1, '')// anything `T::<type>` to end up as `<type>`
        .replace(from2, '')// replace `<T as Trait>::` (whitespaces were removed above)
        .replace(from3, '')// replace `<T as something::Trait>::` (whitespaces were removed above)
        .replace(from4, '')// replace <Lookup as StaticLookup>
        .replace(from5, 'Lookup')// replace `<...>::Type`
        .replace(from6, '');
    };
}
function removeWrap(check) {
    const replacer = (v)=>v;
    return (value)=>replaceTagWith(value, check, replacer);
}
const sanitizeMap = new Map();
function sanitize(value) {
    const startValue = value.toString();
    const memoized = sanitizeMap.get(startValue);
    if (memoized) {
        return memoized;
    }
    let result = startValue;
    for(let i = 0, count = mappings.length; i < count; i++){
        result = mappings[i](result);
    }
    sanitizeMap.set(startValue, result);
    return result;
}
}),
"[project]/node_modules/@polkadot/types-codec/abstract/Int.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "AbstractInt",
    ()=>AbstractInt,
    "DEFAULT_UINT_BITS",
    ()=>DEFAULT_UINT_BITS
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/consts.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/format/formatBalance.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatNumber$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/format/formatNumber.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bigInt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toNumber$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toNumber.js [app-ssr] (ecmascript)");
;
const DEFAULT_UINT_BITS = 64;
const MAX_NUMBER_BITS = 52;
const MUL_P = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](1_00_00);
const FORMATTERS = [
    [
        'Perquintill',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_QUINTILL"]
    ],
    [
        'Perbill',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_BILLION"]
    ],
    [
        'Permill',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_MILLION"]
    ],
    [
        'Percent',
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$consts$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BN_HUNDRED"]
    ]
];
function isToBn(value) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value.toBn);
}
function toPercentage(value, divisor) {
    return `${(value.mul(MUL_P).div(divisor).toNumber() / 100).toFixed(2)}%`;
}
/** @internal */ function decodeAbstractInt(value, isNegative) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(value)) {
        if (!Number.isInteger(value) || value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER) {
            throw new Error('Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1');
        }
        return value;
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value)) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value, -1, true)) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToBn"])(value, {
                isLe: false,
                isNegative
            }).toString();
        }
        if (value.includes('.') || value.includes(',') || value.includes('e')) {
            throw new Error('String should not contain decimal points or scientific notation');
        }
        return value;
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBn"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBigInt"])(value)) {
        return value.toString();
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(value)) {
        if (isToBn(value)) {
            return value.toBn().toString();
        }
        // Allow the construction from an object with a single top-level key. This means that
        // single key objects can be treated equivalently to numbers, assuming they meet the
        // specific requirements. (This is useful in Weights 1.5 where Objects are compact)
        const keys = Object.keys(value);
        if (keys.length !== 1) {
            throw new Error('Unable to construct number from multi-key object');
        }
        return decodeAbstractInt(value[keys[0]], isNegative);
    } else if (!value) {
        return 0;
    }
    throw new Error(`Unable to create BN from unknown type ${typeof value}`);
}
class AbstractInt extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"] {
    registry;
    encodedLength;
    isUnsigned;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    #bitLength;
    constructor(registry, value = 0, bitLength = DEFAULT_UINT_BITS, isSigned = false){
        // Construct via a string/number, which will be passed in the BN constructor.
        // It would be ideal to actually return a BN, but there is an issue:
        // https://github.com/indutny/bn.js/issues/206
        super(// shortcut isU8a as used in SCALE decoding
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) ? bitLength <= 48 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toNumber$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToNumber"])(value.subarray(0, bitLength / 8), {
            isNegative: isSigned
        }) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToBn"])(value.subarray(0, bitLength / 8), {
            isLe: true,
            isNegative: isSigned
        }).toString() : decodeAbstractInt(value, isSigned));
        this.registry = registry;
        this.#bitLength = bitLength;
        this.encodedLength = this.#bitLength / 8;
        this.initialU8aLength = this.#bitLength / 8;
        this.isUnsigned = !isSigned;
        const isNegative = this.isNeg();
        const maxBits = bitLength - (isSigned && !isNegative ? 1 : 0);
        if (isNegative && !isSigned) {
            throw new Error(`${this.toRawType()}: Negative number passed to unsigned type`);
        } else if (super.bitLength() > maxBits) {
            throw new Error(`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${maxBits}`);
        }
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is a zero value (align elsewhere)
     */ get isEmpty() {
        return this.isZero();
    }
    /**
     * @description Returns the number of bits in the value
     */ bitLength() {
        return this.#bitLength;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ // eslint-disable-next-line @typescript-eslint/no-explicit-any
    eq(other) {
        // Here we are actually overriding the built-in .eq to take care of both
        // number and BN inputs (no `.eqn` needed) - numbers will be converted
        return super.eq((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(other) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToBn"])(other.toString(), {
            isLe: false,
            isNegative: !this.isUnsigned
        }) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(other));
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {
            outer: [
                this.toU8a()
            ]
        };
    }
    /**
     * @description True if this value is the max of the type
     */ isMax() {
        const u8a = this.toU8a().filter((b)=>b === 0xff);
        return u8a.length === this.#bitLength / 8;
    }
    /**
     * @description Returns a BigInt representation of the number
     */ toBigInt() {
        return BigInt(this.toString());
    }
    /**
     * @description Returns the BN representation of the number. (Compatibility)
     */ toBn() {
        return this;
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex(isLe = false) {
        // For display/JSON, this is BE, for compare, use isLe
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToHex"])(this, {
            bitLength: this.bitLength(),
            isLe,
            isNegative: !this.isUnsigned
        });
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(_isExpanded) {
        const rawType = this.toRawType();
        if (rawType === 'Balance') {
            return this.isMax() ? 'everything' : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatBalance$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatBalance"])(this, {
                decimals: this.registry.chainDecimals[0],
                withSi: true,
                withUnit: this.registry.chainTokens[0]
            });
        }
        const [, divisor] = FORMATTERS.find(([type])=>type === rawType) || [];
        return divisor ? toPercentage(this, divisor) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$format$2f$formatNumber$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["formatNumber"])(this);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON(onlyHex = false) {
        // FIXME this return type should by string | number, however BN returns string
        // Options here are
        //   - super.bitLength() - the actual used bits, use hex when close to MAX_SAFE_INTEGER
        //   - this.#bitLength - the max used bits, use hex when larger than native Rust type
        return onlyHex || this.#bitLength > 128 || super.bitLength() > MAX_NUMBER_BITS ? this.toHex() : this.toNumber();
    }
    /**
     * @description Returns the value in a primitive form, either number when <= 52 bits, or string otherwise
     */ toPrimitive() {
        return super.bitLength() > MAX_NUMBER_BITS ? this.toString() : this.toNumber();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        // NOTE In the case of balances, which have a special meaning on the UI
        // and can be interpreted differently, return a specific value for it so
        // underlying it always matches (no matter which length it actually is)
        return this instanceof this.registry.createClassUnsafe('Balance') ? 'Balance' : `${this.isUnsigned ? 'u' : 'i'}${this.bitLength()}`;
    }
    /**
     * @description Returns the string representation of the value
     * @param base The base to use for the conversion
     */ toString(base) {
        // only included here since we do not inherit docs
        return super.toString(base);
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */ toU8a(_isBare) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToU8a"])(this, {
            bitLength: this.bitLength(),
            isLe: true,
            isNegative: !this.isUnsigned
        });
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/base/UInt.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "UInt",
    ()=>UInt
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/abstract/Int.js [app-ssr] (ecmascript)");
;
class UInt extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractInt"] {
    static with(bitLength, typeName) {
        return class extends UInt {
            constructor(registry, value){
                super(registry, value, bitLength);
            }
            toRawType() {
                return typeName || super.toRawType();
            }
        };
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U32.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u32",
    ()=>u32
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/UInt.js [app-ssr] (ecmascript)");
;
class u32 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UInt"].with(32) {
    // NOTE without this, we cannot properly determine extensions
    __UIntType = 'u32';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U32.js [app-ssr] (ecmascript) <export u32 as U32>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "U32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u32"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U32.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/base/DoNotConstruct.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name DoNotConstruct
 * @description
 * An unknown type that fails on construction with the type info
 */ __turbopack_context__.s([
    "DoNotConstruct",
    ()=>DoNotConstruct
]);
class DoNotConstruct {
    registry;
    createdAtHash;
    isStorageFallback;
    #neverError;
    constructor(registry, typeName = 'DoNotConstruct'){
        this.registry = registry;
        this.#neverError = new Error(`DoNotConstruct: Cannot construct unknown type ${typeName}`);
        throw this.#neverError;
    }
    static with(typeName) {
        return class extends DoNotConstruct {
            constructor(registry){
                super(registry, typeName);
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        throw this.#neverError;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        throw this.#neverError;
    }
    /**
     * @description Checks if the value is an empty value (always true)
     */ get isEmpty() {
        throw this.#neverError;
    }
    /**
     * @description Unimplemented
     */ eq() {
        throw this.#neverError;
    }
    /**
     * @description Unimplemented
     */ inspect() {
        throw this.#neverError;
    }
    /**
     * @description Unimplemented
     */ toHex() {
        throw this.#neverError;
    }
    /**
     * @description Unimplemented
     */ toHuman() {
        throw this.#neverError;
    }
    /**
     * @description Unimplemented
     */ toJSON() {
        throw this.#neverError;
    }
    /**
     * @description Unimplemented
     */ toPrimitive() {
        throw this.#neverError;
    }
    /**
     * @description Unimplemented
     */ toRawType() {
        throw this.#neverError;
    }
    /**
     * @description Unimplemented
     */ toString() {
        throw this.#neverError;
    }
    /**
     * @description Unimplemented
     */ toU8a() {
        throw this.#neverError;
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/native/Json.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Json",
    ()=>Json
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/property.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/compareMap.js [app-ssr] (ecmascript)");
;
;
/** @internal */ function decodeJson(value) {
    return Object.entries(value || {});
}
class Json extends Map {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    constructor(registry, value){
        const decoded = decodeJson(value);
        super(decoded);
        this.registry = registry;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectProperties"])(this, decoded.map(([k])=>k), (k)=>this.get(k));
    }
    /**
     * @description Always 0, never encodes as a Uint8Array
     */ get encodedLength() {
        return 0 | 0;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */ get isEmpty() {
        return [
            ...this.keys()
        ].length === 0;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compareMap"])(this, other);
    }
    /**
     * @description Returns a typed value from the internal map
     */ getT(key) {
        return this.get(key);
    }
    /**
     * @description Unimplemented, will throw
     */ inspect() {
        throw new Error('Unimplemented');
    }
    /**
     * @description Unimplemented, will throw
     */ toHex() {
        throw new Error('Unimplemented');
    }
    /**
     * @description Converts the Object to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return [
            ...this.entries()
        ].reduce((json, [key, value])=>{
            json[key] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value?.toHuman) ? value.toHuman() : value;
            return json;
        }, {});
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return [
            ...this.entries()
        ].reduce((json, [key, value])=>{
            json[key] = value;
            return json;
        }, {});
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive(disableAscii) {
        return [
            ...this.entries()
        ].reduce((json, [key, value])=>{
            json[key] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(value.toPrimitive) ? value.toPrimitive(disableAscii) : value;
            return json;
        }, {});
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'Json';
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(this.toJSON());
    }
    /**
     * @description Unimplemented, will throw
     */ toU8a(_isBare) {
        throw new Error('Unimplemented');
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/native/Raw.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Raw",
    ()=>Raw
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$ascii$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/ascii.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$utf8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/utf8.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toString.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
;
class Raw extends Uint8Array {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    /**
     * @description This ensures that operators such as clice, filter, map, etc. return
     * new Array instances (without this we need to apply overrides)
     */ static get [Symbol.species]() {
        return Uint8Array;
    }
    constructor(registry, value, initialU8aLength){
        super((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value));
        this.registry = registry;
        this.initialU8aLength = initialU8aLength;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.length;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Returns true if the wrapped value contains only ASCII printable characters
     */ get isAscii() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$ascii$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isAscii"])(this);
    }
    /**
     * @description Returns true if the type wraps an empty/default all-0 value
     */ get isEmpty() {
        return !this.length || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(this.find((b)=>!!b));
    }
    /**
     * @description Returns true if the wrapped value contains only utf8 characters
     */ get isUtf8() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$utf8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUtf8"])(this);
    }
    /**
     * @description Returns the number of bits in the value
     */ bitLength() {
        return this.length * 8;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        if (other instanceof Uint8Array) {
            return this.length === other.length && !this.some((b, index)=>b !== other[index]);
        }
        return this.eq((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(other));
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {
            outer: [
                this.toU8a()
            ]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this);
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(_isExtended, disableAscii) {
        return this.toPrimitive(disableAscii);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.toHex();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive(disableAscii) {
        if (!disableAscii && this.isAscii) {
            const text = this.toUtf8();
            // ensure we didn't end up with multibyte codepoints
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$ascii$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isAscii"])(text)) {
                return text;
            }
        }
        return this.toJSON();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'Raw';
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return this.toHex();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */ toU8a(_isBare) {
        return Uint8Array.from(this);
    }
    /**
     * @description Returns the wrapped data as a UTF-8 string
     */ toUtf8() {
        if (!this.isUtf8) {
            throw new Error('The character sequence is not a valid Utf8 string');
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToString"])(this);
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/utils/compareArray.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "compareArray",
    ()=>compareArray
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/util.js [app-ssr] (ecmascript)");
;
;
function compareArray(a, b) {
    if (Array.isArray(b)) {
        return a.length === b.length && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(a.find((v, index)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$util$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hasEq"])(v) ? !v.eq(b[index]) : v !== b[index]));
    }
    return false;
}
}),
"[project]/node_modules/@polkadot/types-codec/abstract/Array.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "AbstractArray",
    ()=>AbstractArray
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareArray$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/compareArray.js [app-ssr] (ecmascript)");
;
;
class AbstractArray extends Array {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    /**
     * @description This ensures that operators such as clice, filter, map, etc. return
     * new Array instances (without this we need to apply overrides)
     */ static get [Symbol.species]() {
        return Array;
    }
    constructor(registry, length){
        super(length);
        this.registry = registry;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        // We need to loop through all entries since they may have a variable length themselves,
        // e.g. when a Vec or Compact is contained withing, it has a variable length based on data
        const count = this.length;
        let total = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(count).length;
        for(let i = 0; i < count; i++){
            total += this[i].encodedLength;
        }
        return total;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */ get isEmpty() {
        return this.length === 0;
    }
    /**
     * @description The length of the value
     */ get length() {
        // only included here since we ignore inherited docs
        return super.length;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareArray$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compareArray"])(this, other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {
            inner: this.inspectInner(),
            outer: [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.length)
            ]
        };
    }
    /**
     * @internal
     * @description Internal per-item inspection of internal values
     */ inspectInner() {
        const count = this.length;
        const inner = new Array(count);
        for(let i = 0; i < count; i++){
            inner[i] = this[i].inspect();
        }
        return inner;
    }
    /**
     * @description Converts the Object to an standard JavaScript Array
     */ toArray() {
        return Array.from(this);
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExtended, disableAscii) {
        const count = this.length;
        const result = new Array(count);
        for(let i = 0; i < count; i++){
            result[i] = this[i] && this[i].toHuman(isExtended, disableAscii);
        }
        return result;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        const count = this.length;
        const result = new Array(count);
        for(let i = 0; i < count; i++){
            // We actually log inside the U8a decoding and use JSON.stringify(...), which
            // means that the Vec may be partially populated (same applies to toHuman, same check)
            result[i] = this[i] && this[i].toJSON();
        }
        return result;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive(disableAscii) {
        const count = this.length;
        const result = new Array(count);
        for(let i = 0; i < count; i++){
            result[i] = this[i] && this[i].toPrimitive(disableAscii);
        }
        return result;
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        const count = this.length;
        const result = new Array(count);
        for(let i = 0; i < count; i++){
            result[i] = this[i].toString();
        }
        return `[${result.join(', ')}]`;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        const encoded = this.toU8aInner();
        return isBare ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])(encoded) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])([
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.length),
            ...encoded
        ]);
    }
    /**
     * @internal
     * @description Internal per-item SCALE encoding of contained values
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8aInner(isBare) {
        const count = this.length;
        const encoded = new Array(count);
        for(let i = 0; i < count; i++){
            encoded[i] = this[i].toU8a(isBare);
        }
        return encoded;
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/base/Null.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Null",
    ()=>Null
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/null.js [app-ssr] (ecmascript)");
;
class Null {
    encodedLength = 0;
    isEmpty = true;
    registry;
    createdAtHash;
    initialU8aLength = 0;
    isStorageFallback;
    constructor(registry){
        this.registry = registry;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        throw new Error('.hash is not implemented on Null');
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return other instanceof Null || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNull"])(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {};
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        return '0x';
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return null;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive() {
        return null;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'Null';
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return '';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */ toU8a(_isBare) {
        return new Uint8Array();
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/base/Enum.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Enum",
    ()=>Enum
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/noop.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/property.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/toConstructors.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$typesToMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/typesToMap.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Null.js [app-ssr] (ecmascript)");
;
;
;
function isRustEnum(def) {
    const defValues = Object.values(def);
    if (defValues.some((v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(v))) {
        if (!defValues.every((v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(v) && v >= 0 && v <= 255)) {
            throw new Error('Invalid number-indexed enum definition');
        }
        return false;
    }
    return true;
}
function extractDef(registry, _def) {
    const def = {};
    let isBasic;
    let isIndexed;
    if (Array.isArray(_def)) {
        for(let i = 0, count = _def.length; i < count; i++){
            def[_def[i]] = {
                Type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Null"],
                index: i
            };
        }
        isBasic = true;
        isIndexed = false;
    } else if (isRustEnum(_def)) {
        const [Types, keys] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mapToTypeMap"])(registry, _def);
        for(let i = 0, count = keys.length; i < count; i++){
            def[keys[i]] = {
                Type: Types[i],
                index: i
            };
        }
        isBasic = !Object.values(def).some(({ Type })=>Type !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Null"]);
        isIndexed = false;
    } else {
        const entries = Object.entries(_def);
        for(let i = 0, count = entries.length; i < count; i++){
            const [key, index] = entries[i];
            def[key] = {
                Type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Null"],
                index
            };
        }
        isBasic = true;
        isIndexed = true;
    }
    return {
        def,
        isBasic,
        isIndexed
    };
}
function getEntryType(def, checkIdx) {
    const values = Object.values(def);
    for(let i = 0, count = values.length; i < count; i++){
        const { Type, index } = values[i];
        if (index === checkIdx) {
            return Type;
        }
    }
    throw new Error(`Unable to create Enum via index ${checkIdx}, in ${Object.keys(def).join(', ')}`);
}
function createFromU8a(registry, def, index, value) {
    const Type = getEntryType(def, index);
    return {
        index,
        value: new Type(registry, value)
    };
}
function createFromValue(registry, def, index = 0, value) {
    const Type = getEntryType(def, index);
    return {
        index,
        value: value instanceof Type ? value : new Type(registry, value)
    };
}
function decodeFromJSON(registry, def, key, value) {
    // JSON comes in the form of { "<type (camelCase)>": "<value for type>" }, here we
    // additionally force to lower to ensure forward compat
    const keys = Object.keys(def).map((k)=>k.toLowerCase());
    const keyLower = key.toLowerCase();
    const index = keys.indexOf(keyLower);
    if (index === -1) {
        throw new Error(`Cannot map Enum JSON, unable to find '${key}' in ${keys.join(', ')}`);
    }
    try {
        return createFromValue(registry, def, Object.values(def)[index].index, value);
    } catch (error) {
        throw new Error(`Enum(${key}):: ${error.message}`);
    }
}
function decodeEnum(registry, def, value, index) {
    // NOTE We check the index path first, before looking at values - this allows treating
    // the optional indexes before anything else, more-specific > less-specific
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(index)) {
        return createFromValue(registry, def, index, value);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        const u8a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
        // nested, we don't want to match isObject below
        if (u8a.length) {
            return createFromU8a(registry, def, u8a[0], u8a.subarray(1));
        }
    } else if (value instanceof Enum) {
        return createFromValue(registry, def, value.index, value.value);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(value)) {
        return createFromValue(registry, def, value);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value)) {
        return decodeFromJSON(registry, def, value.toString());
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(value)) {
        const key = Object.keys(value)[0];
        return decodeFromJSON(registry, def, key, value[key]);
    }
    // Worst-case scenario, return the first with default
    return createFromValue(registry, def, Object.values(def)[0].index);
}
class Enum {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    #def;
    #entryIndex;
    #indexes;
    #isBasic;
    #isIndexed;
    #raw;
    constructor(registry, Types, value, index, { definition, setDefinition = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["identity"] } = {}){
        const { def, isBasic, isIndexed } = definition || setDefinition(extractDef(registry, Types));
        // shortcut isU8a as used in SCALE decoding
        const decoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) && value.length && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(index) ? createFromU8a(registry, def, value[0], value.subarray(1)) : decodeEnum(registry, def, value, index);
        this.registry = registry;
        this.#def = def;
        this.#isBasic = isBasic;
        this.#isIndexed = isIndexed;
        this.#indexes = Object.values(def).map(({ index })=>index);
        this.#entryIndex = this.#indexes.indexOf(decoded.index);
        this.#raw = decoded.value;
        if (this.#raw.initialU8aLength) {
            this.initialU8aLength = 1 + this.#raw.initialU8aLength;
        }
    }
    static with(Types) {
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d)=>definition = d;
        return class extends Enum {
            static{
                const keys = Array.isArray(Types) ? Types : Object.keys(Types);
                const count = keys.length;
                const asKeys = new Array(count);
                const isKeys = new Array(count);
                for(let i = 0; i < count; i++){
                    const name = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringPascalCase"])(keys[i]);
                    asKeys[i] = `as${name}`;
                    isKeys[i] = `is${name}`;
                }
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectProperties"])(this.prototype, isKeys, (_, i, self)=>self.type === keys[i]);
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectProperties"])(this.prototype, asKeys, (k, i, self)=>{
                    if (self.type !== keys[i]) {
                        throw new Error(`Cannot convert '${self.type}' via ${k}`);
                    }
                    return self.value;
                });
            }
            constructor(registry, value, index){
                super(registry, Types, value, index, {
                    definition,
                    setDefinition
                });
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return 1 + this.#raw.encodedLength;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description The index of the enum value
     */ get index() {
        return this.#indexes[this.#entryIndex];
    }
    /**
     * @description The value of the enum
     */ get inner() {
        return this.#raw;
    }
    /**
     * @description true if this is a basic enum (no values)
     */ get isBasic() {
        return this.#isBasic;
    }
    /**
     * @description Checks if the value is an empty value
     */ get isEmpty() {
        return this.#raw.isEmpty;
    }
    /**
     * @description Checks if the Enum points to a [[Null]] type
     */ get isNone() {
        return this.#raw instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Null"];
    }
    /**
     * @description The available keys for this enum
     */ get defIndexes() {
        return this.#indexes;
    }
    /**
     * @description The available keys for this enum
     */ get defKeys() {
        return Object.keys(this.#def);
    }
    /**
     * @description The name of the type this enum value represents
     */ get type() {
        return this.defKeys[this.#entryIndex];
    }
    /**
     * @description The value of the enum
     */ get value() {
        return this.#raw;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        // cater for the case where we only pass the enum index
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(other)) {
            return !this.toU8a().some((entry, index)=>entry !== other[index]);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(other)) {
            return this.toNumber() === other;
        } else if (this.#isBasic && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(other)) {
            return this.type === other;
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(other)) {
            return this.toHex() === other;
        } else if (other instanceof Enum) {
            return this.index === other.index && this.value.eq(other.value);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(other)) {
            return this.value.eq(other[this.type]);
        }
        // compare the actual wrapper value
        return this.value.eq(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        if (this.#isBasic) {
            return {
                outer: [
                    new Uint8Array([
                        this.index
                    ])
                ]
            };
        }
        const { inner, outer = [] } = this.#raw.inspect();
        return {
            inner,
            outer: [
                new Uint8Array([
                    this.index
                ]),
                ...outer
            ]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExtended, disableAscii) {
        return this.#isBasic || this.isNone ? this.type : {
            [this.type]: this.#raw.toHuman(isExtended, disableAscii)
        };
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.#isBasic ? this.type : {
            [(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(this.type)]: this.#raw.toJSON()
        };
    }
    /**
     * @description Returns the number representation for the value
     */ toNumber() {
        return this.index;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive(disableAscii) {
        return this.#isBasic ? this.type : {
            [(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringCamelCase"])(this.type)]: this.#raw.toPrimitive(disableAscii)
        };
    }
    /**
     * @description Returns a raw struct representation of the enum types
     */ _toRawStruct() {
        if (this.#isBasic) {
            return this.#isIndexed ? this.defKeys.reduce((out, key, index)=>{
                out[key] = this.#indexes[index];
                return out;
            }, {}) : this.defKeys;
        }
        const entries = Object.entries(this.#def);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$typesToMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typesToMap"])(this.registry, entries.reduce((out, [key, { Type }], i)=>{
            out[0][i] = Type;
            out[1][i] = key;
            return out;
        }, [
            new Array(entries.length),
            new Array(entries.length)
        ]));
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])({
            _enum: this._toRawStruct()
        });
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return this.isNone ? this.type : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        return isBare ? this.#raw.toU8a(isBare) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])([
            new Uint8Array([
                this.index
            ]),
            this.#raw.toU8a(isBare)
        ]);
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/utils/sortValues.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "sortAsc",
    ()=>sortAsc,
    "sortMap",
    ()=>sortMap,
    "sortSet",
    ()=>sortSet
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bigInt.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$boolean$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/boolean.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/codec.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
;
/** @internal **/ function isArrayLike(arg) {
    return arg instanceof Uint8Array || Array.isArray(arg);
}
/** @internal **/ function isEnum(arg) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(arg) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(arg.index) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(arg.value);
}
/** @internal **/ function isOption(arg) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(arg) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$boolean$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBoolean"])(arg.isSome) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(arg.value);
}
/** @internal */ function isNumberLike(arg) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(arg) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBn"])(arg) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bigInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBigInt"])(arg);
}
/** @internal */ function sortArray(a, b) {
    // Vec, Tuple, Bytes etc.
    let sortRes = 0;
    const minLen = Math.min(a.length, b.length);
    for(let i = 0; i < minLen; ++i){
        sortRes = sortAsc(a[i], b[i]);
        if (sortRes !== 0) {
            return sortRes;
        }
    }
    return a.length - b.length;
}
/** @internal */ function checkForDuplicates(container, seen, arg) {
    // Convert the value to hex.
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(arg)) {
        const hex = arg.toHex();
        // Check if we have seen the value.
        if (seen.has(hex)) {
            // Duplicates are not allowed.
            throw new Error(`Duplicate value in ${container}: ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(arg)}`);
        }
        seen.add(hex);
    }
    return true;
}
function sortAsc(a, b) {
    if (isNumberLike(a) && isNumberLike(b)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(a).cmp((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(b));
    } else if (a instanceof Map && b instanceof Map) {
        return sortAsc(Array.from(a.values()), Array.from(b.values()));
    } else if (isEnum(a) && isEnum(b)) {
        return sortAsc(a.index, b.index) || sortAsc(a.value, b.value);
    } else if (isOption(a) && isOption(b)) {
        return sortAsc(a.isNone ? 0 : 1, b.isNone ? 0 : 1) || sortAsc(a.value, b.value);
    } else if (isArrayLike(a) && isArrayLike(b)) {
        return sortArray(a, b);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(a) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(b)) {
        // Text, Bool etc.
        return sortAsc(a.toU8a(true), b.toU8a(true));
    }
    throw new Error(`Attempting to sort unrecognized values: ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(a)} (typeof ${typeof a}) <-> ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(b)} (typeof ${typeof b})`);
}
function sortSet(set) {
    const seen = new Set();
    return new Set(Array.from(set).filter((value)=>checkForDuplicates('BTreeSet', seen, value)).sort(sortAsc));
}
function sortMap(map) {
    const seen = new Set();
    return new Map(Array.from(map.entries()).filter(([key])=>checkForDuplicates('BTreeMap', seen, key)).sort(([keyA], [keyB])=>sortAsc(keyA, keyB)));
}
}),
"[project]/node_modules/@polkadot/types-codec/extended/Map.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "CodecMap",
    ()=>CodecMap
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/fromU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/abstract/Array.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Enum.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Raw.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Struct.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/compareMap.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/decodeU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sortValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/sortValues.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/toConstructors.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["logger"])('Map');
/** @internal */ function decodeMapFromU8a(registry, KeyClass, ValClass, u8a) {
    const output = new Map();
    const [offset, count] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactFromU8aLim"])(u8a);
    const types = [];
    for(let i = 0; i < count; i++){
        types.push(KeyClass, ValClass);
    }
    const [values, decodedLength] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeU8a"])(registry, new Array(types.length), u8a.subarray(offset), [
        types,
        []
    ]);
    for(let i = 0, count = values.length; i < count; i += 2){
        output.set(values[i], values[i + 1]);
    }
    return [
        KeyClass,
        ValClass,
        output,
        offset + decodedLength
    ];
}
/** @internal */ function decodeMapFromMap(registry, KeyClass, ValClass, value) {
    const output = new Map();
    for (const [key, val] of value.entries()){
        const isComplex = KeyClass.prototype instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractArray"] || KeyClass.prototype instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Struct$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Struct"] || KeyClass.prototype instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Enum"];
        try {
            output.set(key instanceof KeyClass ? key : new KeyClass(registry, isComplex && typeof key === 'string' ? JSON.parse(key) : key), val instanceof ValClass ? val : new ValClass(registry, val));
        } catch (error) {
            l.error('Failed to decode key or value:', error.message);
            throw error;
        }
    }
    return [
        KeyClass,
        ValClass,
        output,
        0
    ];
}
/**
 * Decode input to pass into constructor.
 *
 * @param KeyClass - Type of the map key
 * @param ValClass - Type of the map value
 * @param value - Value to decode, one of:
 * - null
 * - undefined
 * - hex
 * - Uint8Array
 * - Map<any, any>, where both key and value types are either
 *   constructors or decodeable values for their types.
 * @param jsonMap
 * @internal
 */ function decodeMap(registry, keyType, valType, value) {
    const KeyClass = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeToConstructor"])(registry, keyType);
    const ValClass = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeToConstructor"])(registry, valType);
    if (!value) {
        return [
            KeyClass,
            ValClass,
            new Map(),
            0
        ];
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        return decodeMapFromU8a(registry, KeyClass, ValClass, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value));
    } else if (value instanceof Map) {
        return decodeMapFromMap(registry, KeyClass, ValClass, value);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(value)) {
        return decodeMapFromMap(registry, KeyClass, ValClass, new Map(Object.entries(value)));
    }
    throw new Error('Map: cannot decode type');
}
class CodecMap extends Map {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    #KeyClass;
    #ValClass;
    #type;
    constructor(registry, keyType, valType, rawValue, type = 'HashMap'){
        const [KeyClass, ValClass, decoded, decodedLength] = decodeMap(registry, keyType, valType, rawValue);
        super(type === 'BTreeMap' ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sortValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sortMap"])(decoded) : decoded);
        this.registry = registry;
        this.initialU8aLength = decodedLength;
        this.#KeyClass = KeyClass;
        this.#ValClass = ValClass;
        this.#type = type;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        let len = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.size).length;
        for (const [k, v] of this.entries()){
            len += k.encodedLength + v.encodedLength;
        }
        return len;
    }
    /**
     * @description Returns a hash of the value
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */ get isEmpty() {
        return this.size === 0;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareMap$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compareMap"])(this, other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        const inner = [];
        for (const [k, v] of this.entries()){
            inner.push(k.inspect());
            inner.push(v.inspect());
        }
        return {
            inner,
            outer: [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.size)
            ]
        };
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */ toHex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExtended, disableAscii) {
        const json = {};
        for (const [k, v] of this.entries()){
            json[k instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"] && !disableAscii && k.isAscii ? k.toUtf8() : k.toString()] = v.toHuman(isExtended, disableAscii);
        }
        return json;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        const json = {};
        for (const [k, v] of this.entries()){
            json[k.toString()] = v.toJSON();
        }
        return json;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive(disableAscii) {
        const json = {};
        for (const [k, v] of this.entries()){
            json[k instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"] && !disableAscii && k.isAscii ? k.toUtf8() : k.toString()] = v.toPrimitive(disableAscii);
        }
        return json;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return `${this.#type}<${this.registry.getClassName(this.#KeyClass) || new this.#KeyClass(this.registry).toRawType()},${this.registry.getClassName(this.#ValClass) || new this.#ValClass(this.registry).toRawType()}>`;
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        const encoded = [];
        if (!isBare) {
            encoded.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.size));
        }
        for (const [k, v] of this.entries()){
            encoded.push(k.toU8a(isBare), v.toU8a(isBare));
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])(encoded);
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/extended/BTreeMap.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BTreeMap",
    ()=>BTreeMap
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Map$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/Map.js [app-ssr] (ecmascript)");
;
class BTreeMap extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Map$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CodecMap"] {
    static with(keyType, valType) {
        return class extends BTreeMap {
            constructor(registry, value){
                super(registry, keyType, valType, value, 'BTreeMap');
            }
        };
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/utils/compareSet.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "compareSet",
    ()=>compareSet
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/object.js [app-ssr] (ecmascript)");
;
function compareSetArray(a, b) {
    // equal number of entries and each entry in the array should match
    return a.size === b.length && !b.some((e)=>!a.has(e));
}
function compareSet(a, b) {
    if (Array.isArray(b)) {
        return compareSetArray(a, b);
    } else if (b instanceof Set) {
        return compareSetArray(a, [
            ...b.values()
        ]);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$object$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(b)) {
        return compareSetArray(a, Object.values(b));
    }
    return false;
}
}),
"[project]/node_modules/@polkadot/types-codec/extended/BTreeSet.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BTreeSet",
    ()=>BTreeSet
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/fromU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareSet$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/compareSet.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/decodeU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sortValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/sortValues.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/toConstructors.js [app-ssr] (ecmascript)");
;
;
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["logger"])('BTreeSet');
/** @internal */ function decodeSetFromU8a(registry, ValClass, u8a) {
    const output = new Set();
    const [offset, count] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactFromU8aLim"])(u8a);
    const result = new Array(count);
    const [decodedLength] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeU8aVec"])(registry, result, u8a, offset, ValClass);
    for(let i = 0; i < count; i++){
        output.add(result[i]);
    }
    return [
        ValClass,
        output,
        decodedLength
    ];
}
/** @internal */ function decodeSetFromSet(registry, ValClass, value) {
    const output = new Set();
    value.forEach((val)=>{
        try {
            output.add(val instanceof ValClass ? val : new ValClass(registry, val));
        } catch (error) {
            l.error('Failed to decode key or value:', error.message);
            throw error;
        }
    });
    return [
        ValClass,
        output,
        0
    ];
}
/**
 * Decode input to pass into constructor.
 *
 * @param ValClass - Type of the map value
 * @param value - Value to decode, one of:
 * - null
 * - undefined
 * - hex
 * - Uint8Array
 * - Set<any>, where both key and value types are either
 *   constructors or decodeable values for their types.
 * @param jsonSet
 * @internal
 */ function decodeSet(registry, valType, value) {
    const ValClass = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeToConstructor"])(registry, valType);
    if (!value) {
        return [
            ValClass,
            new Set(),
            0
        ];
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        return decodeSetFromU8a(registry, ValClass, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value));
    } else if (Array.isArray(value) || value instanceof Set) {
        return decodeSetFromSet(registry, ValClass, value);
    }
    throw new Error('BTreeSet: cannot decode type');
}
class BTreeSet extends Set {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    #ValClass;
    constructor(registry, valType, rawValue){
        const [ValClass, values, decodedLength] = decodeSet(registry, valType, rawValue);
        super((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sortValues$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sortSet"])(values));
        this.registry = registry;
        this.initialU8aLength = decodedLength;
        this.#ValClass = ValClass;
    }
    static with(valType) {
        return class extends BTreeSet {
            constructor(registry, value){
                super(registry, valType, value);
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        let len = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.size).length;
        for (const v of this.values()){
            len += v.encodedLength;
        }
        return len;
    }
    /**
     * @description Returns a hash of the value
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */ get isEmpty() {
        return this.size === 0;
    }
    /**
     * @description The actual set values as a string[]
     */ get strings() {
        return [
            ...super.values()
        ].map((v)=>v.toString());
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareSet$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compareSet"])(this, other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        const inner = [];
        for (const v of this.values()){
            inner.push(v.inspect());
        }
        return {
            inner,
            outer: [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.size)
            ]
        };
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */ toHex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExtended, disableAscii) {
        const json = [];
        for (const v of this.values()){
            json.push(v.toHuman(isExtended, disableAscii));
        }
        return json;
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        const json = [];
        for (const v of this.values()){
            json.push(v.toJSON());
        }
        return json;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return `BTreeSet<${this.registry.getClassName(this.#ValClass) || new this.#ValClass(this.registry).toRawType()}>`;
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive(disableAscii) {
        const json = [];
        for (const v of this.values()){
            json.push(v.toPrimitive(disableAscii));
        }
        return json;
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        const encoded = [];
        if (!isBare) {
            encoded.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.size));
        }
        for (const v of this.values()){
            encoded.push(v.toU8a(isBare));
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])(encoded);
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/extended/Bytes.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Bytes",
    ()=>Bytes
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/addLength.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/fromU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Raw.js [app-ssr] (ecmascript)");
;
;
const MAX_LENGTH = 10 * 1024 * 1024;
/** @internal */ function decodeBytesU8a(value) {
    if (!value.length) {
        return [
            new Uint8Array(),
            0
        ];
    }
    // handle all other Uint8Array inputs, these do have a length prefix
    const [offset, length] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactFromU8aLim"])(value);
    const total = offset + length;
    if (length > MAX_LENGTH) {
        throw new Error(`Bytes length ${length.toString()} exceeds ${MAX_LENGTH}`);
    } else if (total > value.length) {
        throw new Error(`Bytes: required length less than remainder, expected at least ${total}, found ${value.length}`);
    }
    return [
        value.subarray(offset, total),
        total
    ];
}
class Bytes extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"] {
    constructor(registry, value){
        const [u8a, decodedLength] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) && !(value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"]) ? decodeBytesU8a(value) : Array.isArray(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value) ? [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value),
            0
        ] : [
            value,
            0
        ];
        super(registry, u8a, decodedLength);
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.length + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.length).length;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect(isBare) {
        const clength = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.length);
        return {
            outer: isBare ? [
                super.toU8a()
            ] : this.length ? [
                clength,
                super.toU8a()
            ] : [
                clength
            ]
        };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'Bytes';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        return isBare ? super.toU8a(isBare) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactAddLength"])(this);
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/native/Set.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "CodecSet",
    ()=>CodecSet
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__ = __turbopack_context__.i("[project]/node_modules/bn.js/lib/bn.js [app-ssr] (ecmascript) <export default as BN>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/bn/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/bn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/number.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/object/property.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/camelCase.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toBn.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareArray$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/compareArray.js [app-ssr] (ecmascript)");
;
;
function encodeSet(setValues, values) {
    const encoded = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$bn$2e$js$2f$lib$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__BN$3e$__["BN"](0);
    for(let i = 0, count = values.length; i < count; i++){
        encoded.ior((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(setValues[values[i]] || 0));
    }
    return encoded;
}
/** @internal */ function decodeSetArray(setValues, values) {
    const count = values.length;
    const result = new Array(count);
    for(let i = 0; i < count; i++){
        const key = values[i];
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(setValues[key])) {
            throw new Error(`Set: Invalid key '${key}' passed to Set, allowed ${Object.keys(setValues).join(', ')}`);
        }
        result[i] = key;
    }
    return result;
}
/** @internal */ function decodeSetNumber(setValues, _value) {
    const bn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(_value);
    const keys = Object.keys(setValues);
    const result = [];
    for(let i = 0, count = keys.length; i < count; i++){
        const key = keys[i];
        if (bn.and((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(setValues[key])).eq((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(setValues[key]))) {
            result.push(key);
        }
    }
    const computed = encodeSet(setValues, result);
    if (!bn.eq(computed)) {
        throw new Error(`Set: Mismatch decoding '${bn.toString()}', computed as '${computed.toString()}' with ${result.join(', ')}`);
    }
    return result;
}
/** @internal */ function decodeSet(setValues, value = 0, bitLength) {
    if (bitLength % 8 !== 0) {
        throw new Error(`Expected valid bitLength, power of 8, found ${bitLength}`);
    }
    const byteLength = bitLength / 8;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value)) {
        return value.length === 0 ? [] : decodeSetNumber(setValues, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToBn"])(value.subarray(0, byteLength), {
            isLe: true
        }));
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value)) {
        return decodeSet(setValues, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value), byteLength);
    } else if (value instanceof Set || Array.isArray(value)) {
        const input = Array.isArray(value) ? value : [
            ...value.values()
        ];
        return decodeSetArray(setValues, input);
    }
    return decodeSetNumber(setValues, value);
}
class CodecSet extends Set {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    #allowed;
    #byteLength;
    constructor(registry, setValues, value, bitLength = 8){
        super(decodeSet(setValues, value, bitLength));
        this.registry = registry;
        this.#allowed = setValues;
        this.#byteLength = bitLength / 8;
    }
    static with(values, bitLength) {
        return class extends CodecSet {
            static{
                const keys = Object.keys(values);
                const count = keys.length;
                const isKeys = new Array(count);
                for(let i = 0; i < count; i++){
                    isKeys[i] = `is${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$camelCase$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringPascalCase"])(keys[i])}`;
                }
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$object$2f$property$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectProperties"])(this.prototype, isKeys, (_, i, self)=>self.strings.includes(keys[i]));
            }
            constructor(registry, value){
                super(registry, values, value, bitLength);
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.#byteLength;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description true is the Set contains no values
     */ get isEmpty() {
        return this.size === 0;
    }
    /**
     * @description The actual set values as a string[]
     */ get strings() {
        return [
            ...super.values()
        ];
    }
    /**
     * @description The encoded value for the set members
     */ get valueEncoded() {
        return encodeSet(this.#allowed, this.strings);
    }
    /**
     * @description adds a value to the Set (extended to allow for validity checking)
     */ add = (key)=>{
        // ^^^ add = () property done to assign this instance's this, otherwise Set.add creates "some" chaos
        // we have the isUndefined(this._setValues) in here as well, add is used internally
        // in the Set constructor (so it is undefined at this point, and should allow)
        if (this.#allowed && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(this.#allowed[key])) {
            throw new Error(`Set: Invalid key '${key}' on add`);
        }
        super.add(key);
        return this;
    };
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        if (Array.isArray(other)) {
            // we don't actually care about the order, sort the values
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$compareArray$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compareArray"])(this.strings.sort(), other.sort());
        } else if (other instanceof Set) {
            return this.eq([
                ...other.values()
            ]);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$number$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNumber"])(other) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$bn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isBn"])(other)) {
            return this.valueEncoded.eq((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toBn$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToBn"])(other));
        }
        return false;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {
            outer: [
                this.toU8a()
            ]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.strings;
    }
    /**
     * @description The encoded value for the set members
     */ toNumber() {
        return this.valueEncoded.toNumber();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])({
            _set: this.#allowed
        });
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return `[${this.strings.join(', ')}]`;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */ toU8a(_isBare) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$bn$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bnToU8a"])(this.valueEncoded, {
            bitLength: this.#byteLength * 8,
            isLe: true
        });
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/base/Compact.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Compact",
    ()=>Compact
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/fromU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/noop.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/toConstructors.js [app-ssr] (ecmascript)");
;
;
function decodeCompact(registry, Type, value) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value)) {
        const [decodedLength, bn] = (value[0] & 0b11) < 0b11 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactFromU8aLim"])(value) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactFromU8a"])(value);
        return [
            new Type(registry, bn),
            decodedLength
        ];
    } else if (value instanceof Compact) {
        const raw = value.unwrap();
        return raw instanceof Type ? [
            raw,
            0
        ] : [
            new Type(registry, raw),
            0
        ];
    } else if (value instanceof Type) {
        return [
            value,
            0
        ];
    }
    return [
        new Type(registry, value),
        0
    ];
}
class Compact {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    #Type;
    #raw;
    constructor(registry, Type, value = 0, { definition, setDefinition = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["identity"] } = {}){
        this.registry = registry;
        this.#Type = definition || setDefinition((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeToConstructor"])(registry, Type));
        const [raw, decodedLength] = decodeCompact(registry, this.#Type, value);
        this.initialU8aLength = decodedLength;
        this.#raw = raw;
    }
    static with(Type) {
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d)=>definition = d;
        return class extends Compact {
            constructor(registry, value){
                super(registry, Type, value, {
                    definition,
                    setDefinition
                });
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */ get isEmpty() {
        return this.#raw.isEmpty;
    }
    /**
     * @description Returns the number of bits in the value
     */ bitLength() {
        return this.#raw.bitLength();
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return this.#raw.eq(other instanceof Compact ? other.#raw : other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {
            outer: [
                this.toU8a()
            ]
        };
    }
    /**
     * @description Returns a BigInt representation of the number
     */ toBigInt() {
        return this.#raw.toBigInt();
    }
    /**
     * @description Returns the BN representation of the number
     */ toBn() {
        return this.#raw.toBn();
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */ toHex(isLe) {
        return this.#raw.toHex(isLe);
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExtended, disableAscii) {
        return this.#raw.toHuman(isExtended, disableAscii);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.#raw.toJSON();
    }
    /**
     * @description Returns the number representation for the value
     */ toNumber() {
        return this.#raw.toNumber();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive(disableAscii) {
        return this.#raw.toPrimitive(disableAscii);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return `Compact<${this.registry.getClassName(this.#Type) || this.#raw.toRawType()}>`;
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return this.#raw.toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */ toU8a(_isBare) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.#raw.toBn());
    }
    /**
     * @description Returns the embedded [[UInt]] or [[Moment]] value
     */ unwrap() {
        return this.#raw;
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/extended/HashMap.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "HashMap",
    ()=>HashMap
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Map$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/Map.js [app-ssr] (ecmascript)");
;
class HashMap extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Map$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CodecMap"] {
    static with(keyType, valType) {
        return class extends HashMap {
            constructor(registry, value){
                super(registry, keyType, valType, value);
            }
        };
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/base/Int.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Int",
    ()=>Int
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/abstract/Int.js [app-ssr] (ecmascript)");
;
class Int extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractInt"] {
    constructor(registry, value = 0, bitLength){
        super(registry, value, bitLength, true);
    }
    static with(bitLength, typeName) {
        return class extends Int {
            constructor(registry, value){
                super(registry, value, bitLength);
            }
            toRawType() {
                return typeName || super.toRawType();
            }
        };
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/base/Option.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Option",
    ()=>Option
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/noop.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/codec.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/null.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/undefined.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/toConstructors.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Null.js [app-ssr] (ecmascript)");
;
;
;
class None extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Null"] {
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'None';
    }
}
/** @internal */ function decodeOption(registry, Type, value) {
    if (value instanceof Type) {
        // don't re-create, use as it (which also caters for derived types)
        return value;
    } else if (value instanceof Option) {
        if (value.value instanceof Type) {
            // same instance, return it
            return value.value;
        } else if (value.isNone) {
            // internal is None, we are also none
            return new None(registry);
        }
        // convert the actual value into known
        return new Type(registry, value.value);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$null$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isNull"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$undefined$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isUndefined"])(value) || value === '0x' || value instanceof None) {
        // anything empty we pass as-is
        return new None(registry);
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value)) {
        // the isU8a check happens last in the if-tree - since the wrapped value
        // may be an instance of it, so Type and Option checks go in first
        return !value.length || value[0] === 0 ? new None(registry) : new Type(registry, value.subarray(1));
    }
    return new Type(registry, value);
}
class Option {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    #Type;
    #raw;
    constructor(registry, typeName, value, { definition, setDefinition = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["identity"] } = {}){
        const Type = definition || setDefinition((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeToConstructor"])(registry, typeName));
        const decoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) && value.length && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$codec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCodec"])(value) ? value[0] === 0 ? new None(registry) : new Type(registry, value.subarray(1)) : decodeOption(registry, Type, value);
        this.registry = registry;
        this.#Type = Type;
        this.#raw = decoded;
        if (decoded?.initialU8aLength) {
            this.initialU8aLength = 1 + decoded.initialU8aLength;
        }
    }
    static with(Type) {
        let definition;
        const setDefinition = (d)=>{
            definition = d;
            return d;
        };
        return class extends Option {
            constructor(registry, value){
                super(registry, Type, value, {
                    definition,
                    setDefinition
                });
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        // boolean byte (has value, doesn't have) along with wrapped length
        return 1 + this.#raw.encodedLength;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the Option has no value
     */ get isEmpty() {
        return this.isNone;
    }
    /**
     * @description Checks if the Option has no value
     */ get isNone() {
        return this.#raw instanceof None;
    }
    /**
     * @description Checks if the Option has a value
     */ get isSome() {
        return !this.isNone;
    }
    /**
     * @description The actual value for the Option
     */ get value() {
        return this.#raw;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        if (other instanceof Option) {
            return this.isSome === other.isSome && this.value.eq(other.value);
        }
        return this.value.eq(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        if (this.isNone) {
            return {
                outer: [
                    new Uint8Array([
                        0
                    ])
                ]
            };
        }
        const { inner, outer = [] } = this.#raw.inspect();
        return {
            inner,
            outer: [
                new Uint8Array([
                    1
                ]),
                ...outer
            ]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        // This attempts to align with the JSON encoding - actually in this case
        // the isSome value is correct, however the `isNone` may be problematic
        return this.isNone ? '0x' : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a().subarray(1));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExtended, disableAscii) {
        return this.#raw.toHuman(isExtended, disableAscii);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.isNone ? null : this.#raw.toJSON();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive(disableAscii) {
        return this.isNone ? null : this.#raw.toPrimitive(disableAscii);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType(isBare) {
        const wrapped = this.registry.getClassName(this.#Type) || new this.#Type(this.registry).toRawType();
        return isBare ? wrapped : `Option<${wrapped}>`;
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return this.#raw.toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        if (isBare) {
            return this.#raw.toU8a(true);
        }
        const u8a = new Uint8Array(this.encodedLength);
        if (this.isSome) {
            u8a.set([
                1
            ]);
            u8a.set(this.#raw.toU8a(), 1);
        }
        return u8a;
    }
    /**
     * @description Returns the value that the Option represents (if available), throws if null
     */ unwrap() {
        if (this.isNone) {
            throw new Error('Option: unwrapping a None value');
        }
        return this.#raw;
    }
    /**
     * @description Returns the value that the Option represents (if available) or defaultValue if none
     * @param defaultValue The value to return if the option isNone
     */ unwrapOr(defaultValue) {
        return this.isSome ? this.unwrap() : defaultValue;
    }
    /**
     * @description Returns the value that the Option represents (if available) or defaultValue if none
     * @param defaultValue The value to return if the option isNone
     */ unwrapOrDefault() {
        return this.isSome ? this.unwrap() : new this.#Type(this.registry);
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/base/Tuple.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Tuple",
    ()=>Tuple
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/noop.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/function.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/abstract/Array.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/decodeU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/toConstructors.js [app-ssr] (ecmascript)");
;
;
;
/** @internal */ function decodeTuple(registry, result, value, Classes) {
    if (Array.isArray(value)) {
        const Types = Classes[0];
        for(let i = 0, count = Types.length; i < count; i++){
            try {
                const entry = value?.[i];
                result[i] = entry instanceof Types[i] ? entry : new Types[i](registry, entry);
            } catch (error) {
                throw new Error(`Tuple: failed on ${i}:: ${error.message}`);
            }
        }
        return [
            result,
            0
        ];
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeU8a"])(registry, result, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value), Classes);
    } else if (!value || !result.length) {
        const Types = Classes[0];
        for(let i = 0, count = Types.length; i < count; i++){
            result[i] = new Types[i](registry);
        }
        return [
            result,
            0
        ];
    }
    throw new Error(`Expected array input to Tuple decoding, found ${typeof value}: ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(value)}`);
}
class Tuple extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractArray"] {
    #Types;
    constructor(registry, Types, value, { definition, setDefinition = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["identity"] } = {}){
        const Classes = definition || setDefinition(Array.isArray(Types) ? [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typesToConstructors"])(registry, Types),
            []
        ] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$function$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(Types) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(Types) ? [
            [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeToConstructor"])(registry, Types)
            ],
            []
        ] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mapToTypeMap"])(registry, Types));
        super(registry, Classes[0].length);
        this.initialU8aLength = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeU8a"])(registry, this, value, Classes) : decodeTuple(registry, this, value, Classes))[1];
        this.#Types = Classes;
    }
    static with(Types) {
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d)=>definition = d;
        return class extends Tuple {
            constructor(registry, value){
                super(registry, Types, value, {
                    definition,
                    setDefinition
                });
            }
        };
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        let total = 0;
        for(let i = 0, count = this.length; i < count; i++){
            total += this[i].encodedLength;
        }
        return total;
    }
    /**
     * @description The types definition of the tuple
     */ get Types() {
        return this.#Types[1].length ? this.#Types[1] : this.#Types[0].map((T)=>new T(this.registry).toRawType());
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {
            inner: this.inspectInner()
        };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        const types = this.#Types[0].map((T)=>this.registry.getClassName(T) || new T(this.registry).toRawType());
        return `(${types.join(',')})`;
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        // Overwrite the default toString representation of Array.
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(this.toJSON());
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])(this.toU8aInner(isBare));
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/extended/Range.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Range",
    ()=>Range
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Tuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Tuple.js [app-ssr] (ecmascript)");
;
class Range extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Tuple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Tuple"] {
    #rangeName;
    constructor(registry, Type, value, { rangeName = 'Range' } = {}){
        super(registry, [
            Type,
            Type
        ], value);
        this.#rangeName = rangeName;
    }
    static with(Type) {
        return class extends Range {
            constructor(registry, value){
                super(registry, Type, value);
            }
        };
    }
    /**
     * @description Returns the starting range value
     */ get start() {
        return this[0];
    }
    /**
     * @description Returns the ending range value
     */ get end() {
        return this[1];
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return `${this.#rangeName}<${this.start.toRawType()}>`;
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/extended/RangeInclusive.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "RangeInclusive",
    ()=>RangeInclusive
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Range$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/Range.js [app-ssr] (ecmascript)");
;
class RangeInclusive extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Range$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Range"] {
    constructor(registry, Type, value){
        super(registry, Type, value, {
            rangeName: 'RangeInclusive'
        });
    }
    static with(Type) {
        return class extends RangeInclusive {
            constructor(registry, value){
                super(registry, Type, value);
            }
        };
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/base/Result.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Result",
    ()=>Result
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Enum.js [app-ssr] (ecmascript)");
;
class Result extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Enum"] {
    constructor(registry, Ok, Err, value){
        // NOTE This is order-dependent, Ok (with index 0) needs to be first
        // eslint-disable-next-line sort-keys
        super(registry, {
            Ok,
            Err
        }, value);
    }
    static with(Types) {
        return class extends Result {
            constructor(registry, value){
                super(registry, Types.Ok, Types.Err, value);
            }
        };
    }
    /**
     * @description Returns the wrapper Err value (if isErr)
     */ get asErr() {
        if (!this.isErr) {
            throw new Error('Cannot extract Err value from Ok result, check isErr first');
        }
        return this.value;
    }
    /**
     * @description Returns the wrapper Ok value (if isOk)
     */ get asOk() {
        if (!this.isOk) {
            throw new Error('Cannot extract Ok value from Err result, check isOk first');
        }
        return this.value;
    }
    /**
     * @description Checks if the Result has no value
     */ get isEmpty() {
        return this.isOk && this.value.isEmpty;
    }
    /**
     * @description Checks if the Result wraps an Err value
     */ get isErr() {
        return !this.isOk;
    }
    /**
     * @description Checks if the Result wraps an Ok value
     */ get isOk() {
        return this.index === 0;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        const Types = this._toRawStruct();
        return `Result<${Types.Ok},${Types.Err}>`;
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/extended/U8aFixed.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "U8aFixed",
    ()=>U8aFixed
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Raw.js [app-ssr] (ecmascript)");
;
;
/** @internal */ function decodeU8aFixed(value, bitLength) {
    const u8a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
    const byteLength = bitLength / 8;
    if (!u8a.length) {
        return [
            new Uint8Array(byteLength),
            0
        ];
    }
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) ? u8a.length < byteLength : u8a.length !== byteLength) {
        throw new Error(`Expected input with ${byteLength} bytes (${bitLength} bits), found ${u8a.length} bytes`);
    }
    return [
        u8a.subarray(0, byteLength),
        byteLength
    ];
}
class U8aFixed extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"] {
    constructor(registry, value = new Uint8Array(), bitLength = 256){
        const [u8a, decodedLength] = decodeU8aFixed(value, bitLength);
        super(registry, u8a, decodedLength);
    }
    static with(bitLength, typeName) {
        return class extends U8aFixed {
            constructor(registry, value){
                super(registry, value, bitLength);
            }
            toRawType() {
                return typeName || super.toRawType();
            }
        };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return `[u8;${this.length}]`;
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/base/Vec.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Vec",
    ()=>Vec,
    "decodeVec",
    ()=>decodeVec
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/fromU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/noop.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/stringify.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/abstract/Array.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/decodeU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/toConstructors.js [app-ssr] (ecmascript)");
;
;
;
const MAX_LENGTH = 512 * 1024;
const l = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["logger"])('Vec');
function decodeVecLength(value) {
    if (Array.isArray(value)) {
        return [
            value,
            value.length,
            0
        ];
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        const u8a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
        const [startAt, length] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactFromU8aLim"])(u8a);
        if (length > MAX_LENGTH) {
            throw new Error(`Vec length ${length.toString()} exceeds ${MAX_LENGTH}`);
        }
        return [
            u8a,
            length,
            startAt
        ];
    } else if (!value) {
        return [
            null,
            0,
            0
        ];
    }
    throw new Error(`Expected array/hex input to Vec<*> decoding, found ${typeof value}: ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringify"])(value)}`);
}
function decodeVec(registry, result, value, startAt, Type) {
    if (Array.isArray(value)) {
        const count = result.length;
        for(let i = 0; i < count; i++){
            // 26/08/2022 this is actually a false positive - after recent eslint upgdates
            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
            const entry = value[i];
            try {
                result[i] = entry instanceof Type ? entry : new Type(registry, entry);
            } catch (error) {
                l.error(`Unable to decode on index ${i}`, error.message);
                throw error;
            }
        }
        return [
            0,
            0
        ];
    } else if (!value) {
        return [
            0,
            0
        ];
    }
    // we don't need more checks, we already limited it via the length decoding
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeU8aVec"])(registry, result, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value), startAt, Type);
}
class Vec extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractArray"] {
    #Type;
    constructor(registry, Type, value = [], { definition, setDefinition = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["identity"] } = {}){
        const [decodeFrom, length, startAt] = decodeVecLength(value);
        super(registry, length);
        this.#Type = definition || setDefinition((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeToConstructor"])(registry, Type));
        this.initialU8aLength = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(decodeFrom) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeU8aVec"])(registry, this, decodeFrom, startAt, this.#Type) : decodeVec(registry, this, decodeFrom, startAt, this.#Type))[0];
    }
    static with(Type) {
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d)=>definition = d;
        return class extends Vec {
            constructor(registry, value){
                super(registry, Type, value, {
                    definition,
                    setDefinition
                });
            }
        };
    }
    /**
     * @description The type for the items
     */ get Type() {
        return this.#Type.name;
    }
    /**
     * @description Finds the index of the value in the array
     */ indexOf(other) {
        // convert type first, this removes overhead from the eq
        const check = other instanceof this.#Type ? other : new this.#Type(this.registry, other);
        for(let i = 0, count = this.length; i < count; i++){
            if (check.eq(this[i])) {
                return i;
            }
        }
        return -1;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return `Vec<${this.registry.getClassName(this.#Type) || new this.#Type(this.registry).toRawType()}>`;
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/base/VecFixed.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "VecFixed",
    ()=>VecFixed
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/noop.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/abstract/Array.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/decodeU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/toConstructors.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Vec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Vec.js [app-ssr] (ecmascript)");
;
;
;
;
class VecFixed extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$abstract$2f$Array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AbstractArray"] {
    #Type;
    constructor(registry, Type, length, value = [], { definition, setDefinition = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$noop$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["identity"] } = {}){
        super(registry, length);
        this.#Type = definition || setDefinition((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeToConstructor"])(registry, Type));
        this.initialU8aLength = ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$decodeU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeU8aVec"])(registry, this, value, 0, this.#Type) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Vec$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeVec"])(registry, this, value, 0, this.#Type))[1];
    }
    static with(Type, length) {
        let definition;
        // eslint-disable-next-line no-return-assign
        const setDefinition = (d)=>definition = d;
        return class extends VecFixed {
            constructor(registry, value){
                super(registry, Type, length, value, {
                    definition,
                    setDefinition
                });
            }
        };
    }
    /**
     * @description The type for the items
     */ get Type() {
        return new this.#Type(this.registry).toRawType();
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        let total = 0;
        for(let i = 0, count = this.length; i < count; i++){
            total += this[i].encodedLength;
        }
        return total;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {
            inner: this.inspectInner()
        };
    }
    toU8a() {
        // we override, we don't add the length prefix for ourselves, and at the same time we
        // ignore isBare on entries, since they should be properly encoded at all times
        const encoded = this.toU8aInner();
        return encoded.length ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])(encoded) : new Uint8Array([]);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return `[${this.Type};${this.length}]`;
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "WrapperKeepOpaque",
    ()=>WrapperKeepOpaque
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/addLength.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$stripLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/stripLength.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Raw.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/toConstructors.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Bytes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/Bytes.js [app-ssr] (ecmascript)");
;
;
;
;
function decodeRaw(registry, typeName, value) {
    const Type = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$toConstructors$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeToConstructor"])(registry, typeName);
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        try {
            const [, u8a] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) ? [
                0,
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value)
            ] : value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"] ? [
                0,
                value.subarray()
            ] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$stripLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactStripLength"])(value);
            return [
                Type,
                new Type(registry, u8a),
                value
            ];
        } catch  {
            return [
                Type,
                null,
                value
            ];
        }
    }
    const instance = new Type(registry, value);
    return [
        Type,
        instance,
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactAddLength"])(instance.toU8a())
    ];
}
class WrapperKeepOpaque extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$Bytes$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Bytes"] {
    #Type;
    #decoded;
    #opaqueName;
    constructor(registry, typeName, value, { opaqueName = 'WrapperKeepOpaque' } = {}){
        const [Type, decoded, u8a] = decodeRaw(registry, typeName, value);
        super(registry, u8a);
        this.#Type = Type;
        this.#decoded = decoded;
        this.#opaqueName = opaqueName;
    }
    static with(Type) {
        return class extends WrapperKeepOpaque {
            constructor(registry, value){
                super(registry, Type, value);
            }
        };
    }
    /**
     * @description Checks if the wrapper is decodable
     */ get isDecoded() {
        return !!this.#decoded;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return this.#decoded ? {
            inner: [
                this.#decoded.inspect()
            ],
            outer: [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.length)
            ]
        } : {
            outer: [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.length),
                this.toU8a(true)
            ]
        };
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExtended, disableAscii) {
        return this.#decoded ? this.#decoded.toHuman(isExtended, disableAscii) : super.toHuman(isExtended, disableAscii);
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive(disableAscii) {
        return this.#decoded ? this.#decoded.toPrimitive(disableAscii) : super.toPrimitive(disableAscii);
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return `${this.#opaqueName}<${this.registry.getClassName(this.#Type) || (this.#decoded ? this.#decoded.toRawType() : new this.#Type(this.registry).toRawType())}>`;
    }
    /**
     * @description Converts the Object to to a string (either decoded or bytes)
     */ toString() {
        return this.#decoded ? this.#decoded.toString() : super.toString();
    }
    /**
     * @description Returns the decoded that the WrapperKeepOpaque represents (if available), throws if non-decodable
     */ unwrap() {
        if (!this.#decoded) {
            throw new Error(`${this.#opaqueName}: unwrapping an undecodable value`);
        }
        return this.#decoded;
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/extended/WrapperOpaque.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "WrapperOpaque",
    ()=>WrapperOpaque
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$WrapperKeepOpaque$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/extended/WrapperKeepOpaque.js [app-ssr] (ecmascript)");
;
class WrapperOpaque extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$extended$2f$WrapperKeepOpaque$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WrapperKeepOpaque"] {
    constructor(registry, typeName, value){
        super(registry, typeName, value, {
            opaqueName: 'WrapperOpaque'
        });
    }
    static with(Type) {
        return class extends WrapperOpaque {
            constructor(registry, value){
                super(registry, Type, value);
            }
        };
    }
    /**
     * @description The inner value for this wrapper, in all cases it _should_ be decodable (unlike KeepOpaque)
     */ get inner() {
        return this.unwrap();
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/abstract/Base.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

/**
 * @name Base
 * @description A type extends the Base class, when it holds a value
 */ __turbopack_context__.s([
    "AbstractBase",
    ()=>AbstractBase
]);
class AbstractBase {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    #raw;
    constructor(registry, value, initialU8aLength){
        this.initialU8aLength = initialU8aLength;
        this.#raw = value;
        this.registry = registry;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description returns the inner (wrapped value)
     */ get inner() {
        return this.#raw;
    }
    /**
     * @description Checks if the value is an empty value
     */ get isEmpty() {
        return this.#raw.isEmpty;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return this.#raw.eq(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return this.#raw.inspect();
    }
    /**
     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation
     */ toHex(isLe) {
        return this.#raw.toHex(isLe);
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman(isExtended, disableAscii) {
        return this.#raw.toHuman(isExtended, disableAscii);
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.#raw.toJSON();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive(disableAscii) {
        return this.#raw.toPrimitive(disableAscii);
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return this.#raw.toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        return this.#raw.toU8a(isBare);
    }
    /**
     * @description Returns the inner wrapped value (equivalent to valueOf)
     */ unwrap() {
        return this.#raw;
    }
    /**
     * @description Returns the inner wrapped value
     */ valueOf() {
        return this.#raw;
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U64.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u64",
    ()=>u64
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/UInt.js [app-ssr] (ecmascript)");
;
class u64 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UInt"].with(64) {
    // NOTE without this, we cannot properly determine extensions
    __UIntType = 'u64';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U64.js [app-ssr] (ecmascript) <export u64 as U64>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "U64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u64"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U64.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/native/Bool.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "bool",
    ()=>bool
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
;
class bool extends Boolean {
    registry;
    createdAtHash;
    initialU8aLength = 1;
    isStorageFallback;
    constructor(registry, value = false){
        super((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) ? value[0] === 1 : value instanceof Boolean ? value.valueOf() : !!value);
        this.registry = registry;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return 1 | 0;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value (true when it wraps false/default)
     */ get isEmpty() {
        return this.isFalse;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */ get isFalse() {
        return !this.isTrue;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */ get isTrue() {
        return this.valueOf();
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return this.valueOf() === (other instanceof Boolean ? other.valueOf() : other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {
            outer: [
                this.toU8a()
            ]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.valueOf();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'bool';
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return this.toJSON().toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */ toU8a(_isBare) {
        return new Uint8Array([
            this.valueOf() ? 1 : 0
        ]);
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/native/Bool.js [app-ssr] (ecmascript) <export bool as Bool>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Bool",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bool"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Bool.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/extended/BitVec.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "BitVec",
    ()=>BitVec
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/fromU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/concat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Raw.js [app-ssr] (ecmascript)");
;
;
/** @internal */ function decodeBitVecU8a(value) {
    if (!value?.length) {
        return [
            0,
            new Uint8Array()
        ];
    }
    // handle all other Uint8Array inputs, these do have a length prefix which is the number of bits encoded
    const [offset, length] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactFromU8aLim"])(value);
    const total = offset + Math.ceil(length / 8);
    if (total > value.length) {
        throw new Error(`BitVec: required length less than remainder, expected at least ${total}, found ${value.length}`);
    }
    return [
        length,
        value.subarray(offset, total)
    ];
}
/** @internal */ function decodeBitVec(value) {
    if (Array.isArray(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(value)) {
        const u8a = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value);
        return [
            u8a.length * 8,
            u8a
        ];
    }
    return decodeBitVecU8a(value);
}
class BitVec extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"] {
    #decodedLength;
    #isMsb;
    // In lieu of having the Msb/Lsb identifiers passed through, we default to assuming
    // we are dealing with Lsb, which is the default (as of writing) BitVec format used
    // in the Polkadot code (this only affects the toHuman displays)
    constructor(registry, value, isMsb = false){
        const [decodedLength, u8a] = decodeBitVec(value);
        super(registry, u8a);
        this.#decodedLength = decodedLength;
        this.#isMsb = isMsb;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.length + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.#decodedLength).length;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {
            outer: [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.#decodedLength),
                super.toU8a()
            ]
        };
    }
    /**
     * @description Creates a boolean array of the bit values
     */ toBoolArray() {
        const map = [
            ...this.toU8a(true)
        ].map((v)=>[
                !!(v & 0b1000_0000),
                !!(v & 0b0100_0000),
                !!(v & 0b0010_0000),
                !!(v & 0b0001_0000),
                !!(v & 0b0000_1000),
                !!(v & 0b0000_0100),
                !!(v & 0b0000_0010),
                !!(v & 0b0000_0001)
            ]);
        const count = map.length;
        const result = new Array(8 * count);
        for(let i = 0; i < count; i++){
            const off = i * 8;
            const v = map[i];
            for(let j = 0; j < 8; j++){
                result[off + j] = this.#isMsb ? v[j] : v[7 - j];
            }
        }
        return result;
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return `0b${[
            ...this.toU8a(true)
        ].map((d)=>`00000000${d.toString(2)}`.slice(-8)).map((s)=>this.#isMsb ? s : s.split('').reverse().join('')).join('_')}`;
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'BitVec';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        const bitVec = super.toU8a(isBare);
        return isBare ? bitVec : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$concat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aConcatStrict"])([
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(this.#decodedLength),
            bitVec
        ]);
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/native/Float.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Float",
    ()=>Float
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$float$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/float/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toFloat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toFloat.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
;
class Float extends Number {
    encodedLength;
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    #bitLength;
    constructor(registry, value, { bitLength = 32 } = {}){
        super((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) ? value.length === 0 ? 0 : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toFloat$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToFloat"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value), {
            bitLength
        }) : value || 0);
        this.#bitLength = bitLength;
        this.encodedLength = bitLength / 8;
        this.initialU8aLength = this.encodedLength;
        this.registry = registry;
    }
    static with(bitLength) {
        return class extends Float {
            constructor(registry, value){
                super(registry, value, {
                    bitLength
                });
            }
        };
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Returns true if the type wraps an empty/default all-0 value
     */ get isEmpty() {
        return this.valueOf() === 0;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return this.valueOf() === Number(other);
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {
            outer: [
                this.toU8a()
            ]
        };
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a());
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return this.toString();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        // Not sure if this is actually a hex or a string value
        // (would need to check against RPCs to see the result here)
        return this.toHex();
    }
    /**
     * @description Returns the number representation (Same as valueOf)
     */ toNumber() {
        return this.valueOf();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive() {
        return this.toNumber();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return `f${this.#bitLength}`;
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     */ toU8a(_isBare) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$float$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["floatToU8a"])(this, {
            bitLength: this.#bitLength
        });
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/F32.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "f32",
    ()=>f32
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Float$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Float.js [app-ssr] (ecmascript)");
;
class f32 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Float$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Float"].with(32) {
    // NOTE without this, we cannot properly determine extensions
    __FloatType = 'f32';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/F32.js [app-ssr] (ecmascript) <export f32 as F32>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "F32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["f32"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/F32.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/F64.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "f64",
    ()=>f64
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Float$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Float.js [app-ssr] (ecmascript)");
;
class f64 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Float$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Float"].with(64) {
    // NOTE without this, we cannot properly determine extensions
    __FloatType = 'f64';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/F64.js [app-ssr] (ecmascript) <export f64 as F64>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "F64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["f64"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$F64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/F64.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I8.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "i8",
    ()=>i8
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Int.js [app-ssr] (ecmascript)");
;
class i8 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Int"].with(8) {
    // NOTE without this, we cannot properly determine extensions
    __IntType = 'i8';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I8.js [app-ssr] (ecmascript) <export i8 as I8>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "I8",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i8"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I8.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I16.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "i16",
    ()=>i16
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Int.js [app-ssr] (ecmascript)");
;
class i16 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Int"].with(16) {
    // NOTE without this, we cannot properly determine extensions
    __IntType = 'i16';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I16.js [app-ssr] (ecmascript) <export i16 as I16>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "I16",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i16"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I16.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I32.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "i32",
    ()=>i32
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Int.js [app-ssr] (ecmascript)");
;
class i32 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Int"].with(32) {
    // NOTE without this, we cannot properly determine extensions
    __IntType = 'i32';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I32.js [app-ssr] (ecmascript) <export i32 as I32>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "I32",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i32"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I32.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I64.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "i64",
    ()=>i64
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Int.js [app-ssr] (ecmascript)");
;
class i64 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Int"].with(64) {
    // NOTE without this, we cannot properly determine extensions
    __IntType = 'i64';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I64.js [app-ssr] (ecmascript) <export i64 as I64>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "I64",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i64"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I64$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I64.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I128.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "i128",
    ()=>i128
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Int.js [app-ssr] (ecmascript)");
;
class i128 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Int"].with(128) {
    // NOTE without this, we cannot properly determine extensions
    __IntType = 'i128';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I128.js [app-ssr] (ecmascript) <export i128 as I128>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "I128",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i128"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I128.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I256.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "i256",
    ()=>i256
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Int.js [app-ssr] (ecmascript)");
;
class i256 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Int$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Int"].with(256) {
    // NOTE without this, we cannot properly determine extensions
    __IntType = 'i256';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/I256.js [app-ssr] (ecmascript) <export i256 as I256>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "I256",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i256"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I256.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/ISize.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "isize",
    ()=>isize
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/I32.js [app-ssr] (ecmascript)");
;
class isize extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$I32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["i32"] {
    constructor(registry, value){
        super(registry, value);
        throw new Error('The `isize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally i64) and WASM (always i32) code. Use one of the `i32` or `i64` types explicitly.');
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/ISize.js [app-ssr] (ecmascript) <export isize as ISize>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "ISize",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$ISize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isize"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$ISize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/ISize.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/extended/OptionBool.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "OptionBool",
    ()=>OptionBool
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/Option.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Bool.js [app-ssr] (ecmascript)");
;
;
;
function decodeU8a(registry, value) {
    // Encoded as -
    //  - 0 = None
    //  - 1 = True
    //  - 2 = False
    return value[0] === 0 ? null : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bool"](registry, value[0] === 1);
}
class OptionBool extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$Option$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Option"] {
    constructor(registry, value){
        super(registry, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Bool$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bool"], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value) ? decodeU8a(registry, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToU8a"])(value)) : value);
        this.initialU8aLength = 1;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return 1 | 0;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */ get isFalse() {
        return this.isSome ? !this.value.valueOf() : false;
    }
    /**
     * @description Checks if the value is an empty value (always false)
     */ get isTrue() {
        return this.isSome ? this.value.valueOf() : false;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        return {
            outer: [
                this.toU8a()
            ]
        };
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType(isBare) {
        return isBare ? 'bool' : 'Option<bool>';
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        if (isBare) {
            return super.toU8a(true);
        }
        return this.isSome ? new Uint8Array([
            this.isTrue ? 1 : 2
        ]) : new Uint8Array([
            0
        ]);
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/native/Text.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Text",
    ()=>Text
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/addLength.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/fromU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/compact/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/hex/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/hex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/is/u8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/string/toU8a.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toHex.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/util/u8a/toString.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Raw.js [app-ssr] (ecmascript)");
;
;
const MAX_LENGTH = 128 * 1024;
/** @internal */ function decodeText(value) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$u8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isU8a"])(value)) {
        if (!value.length) {
            return [
                '',
                0
            ];
        }
        // for Raw, the internal buffer does not have an internal length
        // (the same applies in e.g. Bytes, where length is added at encoding-time)
        if (value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Raw$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Raw"]) {
            return [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToString"])(value),
                0
            ];
        }
        const [offset, length] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$fromU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactFromU8aLim"])(value);
        const total = offset + length;
        if (length > MAX_LENGTH) {
            throw new Error(`Text: length ${length.toString()} exceeds ${MAX_LENGTH}`);
        } else if (total > value.length) {
            throw new Error(`Text: required length less than remainder, expected at least ${total}, found ${value.length}`);
        }
        return [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToString"])(value.subarray(offset, total)),
            total
        ];
    } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$hex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isHex"])(value)) {
        return [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toString$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToString"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$hex$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hexToU8a"])(value)),
            0
        ];
    }
    return [
        value ? value.toString() : '',
        0
    ];
}
class Text extends String {
    registry;
    createdAtHash;
    initialU8aLength;
    isStorageFallback;
    #override = null;
    constructor(registry, value){
        const [str, decodedLength] = decodeText(value);
        super(str);
        this.registry = registry;
        this.initialU8aLength = decodedLength;
    }
    /**
     * @description The length of the value when encoded as a Uint8Array
     */ get encodedLength() {
        return this.toU8a().length;
    }
    /**
     * @description returns a hash of the contents
     */ get hash() {
        return this.registry.hash(this.toU8a());
    }
    /**
     * @description Checks if the value is an empty value
     */ get isEmpty() {
        return this.length === 0;
    }
    /**
     * @description The length of the value
     */ get length() {
        // only included here since we ignore inherited docs
        return super.length;
    }
    /**
     * @description Compares the value of the input to see if there is a match
     */ eq(other) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$is$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isString"])(other) ? this.toString() === other.toString() : false;
    }
    /**
     * @description Returns a breakdown of the hex encoding for this Codec
     */ inspect() {
        const value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringToU8a"])(super.toString());
        return {
            outer: value.length ? [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(value.length),
                value
            ] : [
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactToU8a"])(value.length)
            ]
        };
    }
    /**
     * @description Set an override value for this
     */ setOverride(override) {
        this.#override = override;
    }
    /**
     * @description Returns a hex string representation of the value
     */ toHex() {
        // like with Vec<u8>, when we are encoding to hex, we don't actually add
        // the length prefix (it is already implied by the actual string length)
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$u8a$2f$toHex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8aToHex"])(this.toU8a(true));
    }
    /**
     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information
     */ toHuman() {
        return this.toJSON();
    }
    /**
     * @description Converts the Object to JSON, typically used for RPC transfers
     */ toJSON() {
        return this.toString();
    }
    /**
     * @description Converts the value in a best-fit primitive form
     */ toPrimitive() {
        return this.toJSON();
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'Text';
    }
    /**
     * @description Returns the string representation of the value
     */ toString() {
        return this.#override || super.toString();
    }
    /**
     * @description Encodes the value as a Uint8Array as per the SCALE specifications
     * @param isBare true when the value has none of the type-specific prefixes (internal)
     */ toU8a(isBare) {
        // NOTE Here we use the super toString (we are not taking overrides into account,
        // rather encoding the original value the string was constructed with)
        const encoded = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$string$2f$toU8a$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringToU8a"])(super.toString());
        return isBare ? encoded : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$util$2f$compact$2f$addLength$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compactAddLength"])(encoded);
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/extended/Type.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "Type",
    ()=>Type
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Text$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/native/Text.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sanitize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/utils/sanitize.js [app-ssr] (ecmascript)");
;
;
class Type extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$native$2f$Text$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Text"] {
    constructor(registry, value = ''){
        super(registry, value);
        this.setOverride((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$utils$2f$sanitize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sanitize"])(this.toString()));
    }
    /**
     * @description Returns the base runtime type name for this instance
     */ toRawType() {
        return 'Type';
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U8.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u8",
    ()=>u8
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/UInt.js [app-ssr] (ecmascript)");
;
class u8 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UInt"].with(8) {
    // NOTE without this, we cannot properly determine extensions
    __UIntType = 'u8';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U8.js [app-ssr] (ecmascript) <export u8 as U8>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "U8",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u8"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U8$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U8.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U16.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u16",
    ()=>u16
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/UInt.js [app-ssr] (ecmascript)");
;
class u16 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UInt"].with(16) {
    // NOTE without this, we cannot properly determine extensions
    __UIntType = 'u16';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U16.js [app-ssr] (ecmascript) <export u16 as U16>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "U16",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u16"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U16$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U16.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U128.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u128",
    ()=>u128
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/UInt.js [app-ssr] (ecmascript)");
;
class u128 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UInt"].with(128) {
    // NOTE without this, we cannot properly determine extensions
    __UIntType = 'u128';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U128.js [app-ssr] (ecmascript) <export u128 as U128>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "U128",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u128"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U128$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U128.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U256.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "u256",
    ()=>u256
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/base/UInt.js [app-ssr] (ecmascript)");
;
class u256 extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$base$2f$UInt$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["UInt"].with(256) {
    // NOTE without this, we cannot properly determine extensions
    __UIntType = 'u256';
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/U256.js [app-ssr] (ecmascript) <export u256 as U256>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "U256",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u256"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U256$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U256.js [app-ssr] (ecmascript)");
}),
"[project]/node_modules/@polkadot/types-codec/primitive/USize.js [app-ssr] (ecmascript)", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "usize",
    ()=>usize
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/U32.js [app-ssr] (ecmascript)");
;
class usize extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$U32$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["u32"] {
    constructor(registry, value){
        super(registry, value);
        throw new Error('The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.');
    }
}
}),
"[project]/node_modules/@polkadot/types-codec/primitive/USize.js [app-ssr] (ecmascript) <export usize as USize>", ((__turbopack_context__) => {
"use strict";

__turbopack_context__.s([
    "USize",
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$USize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["usize"]
]);
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$polkadot$2f$types$2d$codec$2f$primitive$2f$USize$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@polkadot/types-codec/primitive/USize.js [app-ssr] (ecmascript)");
}),
];

//# sourceMappingURL=node_modules_%40polkadot_types-codec_5bff64be._.js.map